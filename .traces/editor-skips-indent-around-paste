9991 parse: --- defining scenario_editor-skips-indent-around-paste
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {10: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ab\n  cd\nef": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"ab\n  cd\nef": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 2, 8\n    press 65507  # start paste\n    press enter\n    press 65506  # end paste\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 2, 8\n    press 65507  # start paste\n    press enter\n    press 65506  # end paste\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3  # cursor row\n    4 <- 0  # cursor column (not indented)\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 3  # cursor row\n    4 <- 0  # cursor column (not indented)\n  ": "literal-string"}
9999 parse: recipe scenario_editor-skips-indent-around-paste has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- deduce types for recipe scenario_editor-skips-indent-around-paste
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- collect surrounding spaces for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- transform names for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-skips-indent-around-paste
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- transform braces for recipe scenario_editor-skips-indent-around-paste
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- perform checks for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-skips-indent-around-paste
9991 transform: --- type-check calls inside recipe scenario_editor-skips-indent-around-paste
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-skips-indent-around-paste
9991 transform: --- type-check merge instructions in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- check types of reply instructions in recipe scenario_editor-skips-indent-around-paste
9991 transform: --- checking reply instructions against header for scenario_editor-skips-indent-around-paste
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-skips-indent-around-paste
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {10: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 10
9999 mem: storing 100 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 100
9999 mem: array size is 100
9999 mem: allocating size 202
9999 mem: new alloc: 1014
9999 mem: storing 100 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 10
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 10 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1216
9999 mem: storing 7 in location 1217
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1219 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1220
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1221
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1222
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 0
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 0
9999 mem: storing 1016 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1016
9999 mem: location 1224 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 0
9999 mem: storing 1 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 1
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 1
9999 mem: storing 1018 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1018
9999 mem: location 1224 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 1
9999 mem: storing 2 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 2
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 2
9999 mem: storing 1020 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1020
9999 mem: location 1224 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 2
9999 mem: storing 3 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 3
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 3
9999 mem: storing 1022 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1022
9999 mem: location 1224 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 3
9999 mem: storing 4 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 4
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 4
9999 mem: storing 1024 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1024
9999 mem: location 1224 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 4
9999 mem: storing 5 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 5
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 5
9999 mem: storing 1026 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1026
9999 mem: location 1224 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 5
9999 mem: storing 6 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 6
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 6
9999 mem: storing 1028 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1028
9999 mem: location 1224 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 6
9999 mem: storing 7 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 7
9999 mem: storing 1030 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1030
9999 mem: location 1224 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 7
9999 mem: storing 8 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 8
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 8
9999 mem: storing 1032 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1032
9999 mem: location 1224 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 8
9999 mem: storing 9 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 9
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 9
9999 mem: storing 1034 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1034
9999 mem: location 1224 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 9
9999 mem: storing 10 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 10
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 10
9999 mem: storing 1036 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1036
9999 mem: location 1224 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 10
9999 mem: storing 11 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 11
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 11
9999 mem: storing 1038 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1038
9999 mem: location 1224 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 11
9999 mem: storing 12 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 12
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 12
9999 mem: storing 1040 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1040
9999 mem: location 1224 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 12
9999 mem: storing 13 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 13
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 13
9999 mem: storing 1042 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1042
9999 mem: location 1224 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 13
9999 mem: storing 14 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 14
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 14
9999 mem: storing 1044 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1044
9999 mem: location 1224 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 14
9999 mem: storing 15 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 15
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 15
9999 mem: storing 1046 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1046
9999 mem: location 1224 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 15
9999 mem: storing 16 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 16
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 16
9999 mem: storing 1048 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1048
9999 mem: location 1224 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 16
9999 mem: storing 17 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 17
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 17
9999 mem: storing 1050 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1050
9999 mem: location 1224 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 17
9999 mem: storing 18 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 18
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 18
9999 mem: storing 1052 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1052
9999 mem: location 1224 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 18
9999 mem: storing 19 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 19
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 19
9999 mem: storing 1054 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1054
9999 mem: location 1224 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 19
9999 mem: storing 20 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 20
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 20
9999 mem: storing 1056 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1056
9999 mem: location 1224 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 20
9999 mem: storing 21 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 21
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 21
9999 mem: storing 1058 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1058
9999 mem: location 1224 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 21
9999 mem: storing 22 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 22
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 22
9999 mem: storing 1060 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1060
9999 mem: location 1224 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 22
9999 mem: storing 23 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 23
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 23
9999 mem: storing 1062 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1062
9999 mem: location 1224 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 23
9999 mem: storing 24 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 24
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 24
9999 mem: storing 1064 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1064
9999 mem: location 1224 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 24
9999 mem: storing 25 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 25
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 25
9999 mem: storing 1066 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1066
9999 mem: location 1224 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 25
9999 mem: storing 26 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 26
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 26
9999 mem: storing 1068 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1068
9999 mem: location 1224 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 26
9999 mem: storing 27 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 27
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 27
9999 mem: storing 1070 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1070
9999 mem: location 1224 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 27
9999 mem: storing 28 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 28
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 28
9999 mem: storing 1072 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1072
9999 mem: location 1224 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 28
9999 mem: storing 29 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 29
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 29
9999 mem: storing 1074 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1074
9999 mem: location 1224 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 29
9999 mem: storing 30 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 30
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 30
9999 mem: storing 1076 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1076
9999 mem: location 1224 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 30
9999 mem: storing 31 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 31
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 31
9999 mem: storing 1078 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1078
9999 mem: location 1224 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 31
9999 mem: storing 32 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 32
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 32
9999 mem: storing 1080 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1080
9999 mem: location 1224 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 32
9999 mem: storing 33 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 33
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 33
9999 mem: storing 1082 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1082
9999 mem: location 1224 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 33
9999 mem: storing 34 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 34
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 34
9999 mem: storing 1084 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1084
9999 mem: location 1224 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 34
9999 mem: storing 35 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 35
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 35
9999 mem: storing 1086 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1086
9999 mem: location 1224 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 35
9999 mem: storing 36 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 36
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 36
9999 mem: storing 1088 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1088
9999 mem: location 1224 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 36
9999 mem: storing 37 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 37
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 37
9999 mem: storing 1090 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1090
9999 mem: location 1224 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 37
9999 mem: storing 38 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 38
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 38
9999 mem: storing 1092 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1092
9999 mem: location 1224 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 38
9999 mem: storing 39 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 39
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 39
9999 mem: storing 1094 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1094
9999 mem: location 1224 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 39
9999 mem: storing 40 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 40
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 40
9999 mem: storing 1096 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1096
9999 mem: location 1224 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 40
9999 mem: storing 41 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 41
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 41
9999 mem: storing 1098 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1098
9999 mem: location 1224 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 41
9999 mem: storing 42 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 42
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 42
9999 mem: storing 1100 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1100
9999 mem: location 1224 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 42
9999 mem: storing 43 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 43
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 43
9999 mem: storing 1102 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1102
9999 mem: location 1224 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 43
9999 mem: storing 44 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 44
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 44
9999 mem: storing 1104 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1104
9999 mem: location 1224 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 44
9999 mem: storing 45 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 45
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 45
9999 mem: storing 1106 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1106
9999 mem: location 1224 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 45
9999 mem: storing 46 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 46
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 46
9999 mem: storing 1108 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1108
9999 mem: location 1224 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 46
9999 mem: storing 47 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 47
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 47
9999 mem: storing 1110 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1110
9999 mem: location 1224 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 47
9999 mem: storing 48 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 48
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 48
9999 mem: storing 1112 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1112
9999 mem: location 1224 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 48
9999 mem: storing 49 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 49
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 49
9999 mem: storing 1114 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1114
9999 mem: location 1224 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 49
9999 mem: storing 50 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 50
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 50
9999 mem: storing 1116 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1116
9999 mem: location 1224 is 1116
9999 mem: storing 0 in location 1116
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 50
9999 mem: storing 51 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 51
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 51
9999 mem: storing 1118 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1118
9999 mem: location 1224 is 1118
9999 mem: storing 0 in location 1118
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 51
9999 mem: storing 52 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 52
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 52
9999 mem: storing 1120 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1120
9999 mem: location 1224 is 1120
9999 mem: storing 0 in location 1120
9999 mem: storing 7 in location 1121
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 52
9999 mem: storing 53 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 53
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 53
9999 mem: storing 1122 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1122
9999 mem: location 1224 is 1122
9999 mem: storing 0 in location 1122
9999 mem: storing 7 in location 1123
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 53
9999 mem: storing 54 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 54
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 54
9999 mem: storing 1124 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1124
9999 mem: location 1224 is 1124
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 54
9999 mem: storing 55 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 55
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 55
9999 mem: storing 1126 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1126
9999 mem: location 1224 is 1126
9999 mem: storing 0 in location 1126
9999 mem: storing 7 in location 1127
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 55
9999 mem: storing 56 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 56
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 56
9999 mem: storing 1128 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1128
9999 mem: location 1224 is 1128
9999 mem: storing 0 in location 1128
9999 mem: storing 7 in location 1129
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 56
9999 mem: storing 57 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 57
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 57
9999 mem: storing 1130 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1130
9999 mem: location 1224 is 1130
9999 mem: storing 0 in location 1130
9999 mem: storing 7 in location 1131
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 57
9999 mem: storing 58 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 58
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 58
9999 mem: storing 1132 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1132
9999 mem: location 1224 is 1132
9999 mem: storing 0 in location 1132
9999 mem: storing 7 in location 1133
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 58
9999 mem: storing 59 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 59
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 59
9999 mem: storing 1134 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1134
9999 mem: location 1224 is 1134
9999 mem: storing 0 in location 1134
9999 mem: storing 7 in location 1135
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 59
9999 mem: storing 60 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 60
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 60
9999 mem: storing 1136 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1136
9999 mem: location 1224 is 1136
9999 mem: storing 0 in location 1136
9999 mem: storing 7 in location 1137
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 60
9999 mem: storing 61 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 61
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 61
9999 mem: storing 1138 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1138
9999 mem: location 1224 is 1138
9999 mem: storing 0 in location 1138
9999 mem: storing 7 in location 1139
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 61
9999 mem: storing 62 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 62
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 62
9999 mem: storing 1140 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1140
9999 mem: location 1224 is 1140
9999 mem: storing 0 in location 1140
9999 mem: storing 7 in location 1141
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 62
9999 mem: storing 63 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 63
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 63
9999 mem: storing 1142 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1142
9999 mem: location 1224 is 1142
9999 mem: storing 0 in location 1142
9999 mem: storing 7 in location 1143
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 63
9999 mem: storing 64 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 64
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 64
9999 mem: storing 1144 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1144
9999 mem: location 1224 is 1144
9999 mem: storing 0 in location 1144
9999 mem: storing 7 in location 1145
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 64
9999 mem: storing 65 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 65
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 65
9999 mem: storing 1146 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1146
9999 mem: location 1224 is 1146
9999 mem: storing 0 in location 1146
9999 mem: storing 7 in location 1147
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 65
9999 mem: storing 66 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 66
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 66
9999 mem: storing 1148 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1148
9999 mem: location 1224 is 1148
9999 mem: storing 0 in location 1148
9999 mem: storing 7 in location 1149
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 66
9999 mem: storing 67 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 67
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 67
9999 mem: storing 1150 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1150
9999 mem: location 1224 is 1150
9999 mem: storing 0 in location 1150
9999 mem: storing 7 in location 1151
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 67
9999 mem: storing 68 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 68
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 68
9999 mem: storing 1152 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1152
9999 mem: location 1224 is 1152
9999 mem: storing 0 in location 1152
9999 mem: storing 7 in location 1153
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 68
9999 mem: storing 69 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 69
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 69
9999 mem: storing 1154 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1154
9999 mem: location 1224 is 1154
9999 mem: storing 0 in location 1154
9999 mem: storing 7 in location 1155
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 69
9999 mem: storing 70 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 70
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 70
9999 mem: storing 1156 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1156
9999 mem: location 1224 is 1156
9999 mem: storing 0 in location 1156
9999 mem: storing 7 in location 1157
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 70
9999 mem: storing 71 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 71
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 71
9999 mem: storing 1158 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1158
9999 mem: location 1224 is 1158
9999 mem: storing 0 in location 1158
9999 mem: storing 7 in location 1159
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 71
9999 mem: storing 72 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 72
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 72
9999 mem: storing 1160 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1160
9999 mem: location 1224 is 1160
9999 mem: storing 0 in location 1160
9999 mem: storing 7 in location 1161
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 72
9999 mem: storing 73 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 73
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 73
9999 mem: storing 1162 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1162
9999 mem: location 1224 is 1162
9999 mem: storing 0 in location 1162
9999 mem: storing 7 in location 1163
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 73
9999 mem: storing 74 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 74
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 74
9999 mem: storing 1164 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1164
9999 mem: location 1224 is 1164
9999 mem: storing 0 in location 1164
9999 mem: storing 7 in location 1165
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 74
9999 mem: storing 75 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 75
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 75
9999 mem: storing 1166 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1166
9999 mem: location 1224 is 1166
9999 mem: storing 0 in location 1166
9999 mem: storing 7 in location 1167
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 75
9999 mem: storing 76 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 76
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 76
9999 mem: storing 1168 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1168
9999 mem: location 1224 is 1168
9999 mem: storing 0 in location 1168
9999 mem: storing 7 in location 1169
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 76
9999 mem: storing 77 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 77
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 77
9999 mem: storing 1170 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1170
9999 mem: location 1224 is 1170
9999 mem: storing 0 in location 1170
9999 mem: storing 7 in location 1171
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 77
9999 mem: storing 78 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 78
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 78
9999 mem: storing 1172 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1172
9999 mem: location 1224 is 1172
9999 mem: storing 0 in location 1172
9999 mem: storing 7 in location 1173
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 78
9999 mem: storing 79 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 79
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 79
9999 mem: storing 1174 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1174
9999 mem: location 1224 is 1174
9999 mem: storing 0 in location 1174
9999 mem: storing 7 in location 1175
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 79
9999 mem: storing 80 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 80
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 80
9999 mem: storing 1176 in location 1224
9990 schedule: clear-screen/new-fake-screen/scenario_editor-skips-indent-around-paste
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1176
9999 mem: location 1224 is 1176
9999 mem: storing 0 in location 1176
9999 mem: storing 7 in location 1177
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 80
9999 mem: storing 81 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 81
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 81
9999 mem: storing 1178 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1178
9999 mem: location 1224 is 1178
9999 mem: storing 0 in location 1178
9999 mem: storing 7 in location 1179
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 81
9999 mem: storing 82 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 82
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 82
9999 mem: storing 1180 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1180
9999 mem: location 1224 is 1180
9999 mem: storing 0 in location 1180
9999 mem: storing 7 in location 1181
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 82
9999 mem: storing 83 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 83
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 83
9999 mem: storing 1182 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1182
9999 mem: location 1224 is 1182
9999 mem: storing 0 in location 1182
9999 mem: storing 7 in location 1183
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 83
9999 mem: storing 84 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 84
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 84
9999 mem: storing 1184 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1184
9999 mem: location 1224 is 1184
9999 mem: storing 0 in location 1184
9999 mem: storing 7 in location 1185
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 84
9999 mem: storing 85 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 85
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 85
9999 mem: storing 1186 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1186
9999 mem: location 1224 is 1186
9999 mem: storing 0 in location 1186
9999 mem: storing 7 in location 1187
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 85
9999 mem: storing 86 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 86
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 86
9999 mem: storing 1188 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1188
9999 mem: location 1224 is 1188
9999 mem: storing 0 in location 1188
9999 mem: storing 7 in location 1189
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 86
9999 mem: storing 87 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 87
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 87
9999 mem: storing 1190 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1190
9999 mem: location 1224 is 1190
9999 mem: storing 0 in location 1190
9999 mem: storing 7 in location 1191
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 87
9999 mem: storing 88 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 88
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 88
9999 mem: storing 1192 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1192
9999 mem: location 1224 is 1192
9999 mem: storing 0 in location 1192
9999 mem: storing 7 in location 1193
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 88
9999 mem: storing 89 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 89
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 89
9999 mem: storing 1194 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1194
9999 mem: location 1224 is 1194
9999 mem: storing 0 in location 1194
9999 mem: storing 7 in location 1195
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 89
9999 mem: storing 90 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 90
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 90
9999 mem: storing 1196 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1196
9999 mem: location 1224 is 1196
9999 mem: storing 0 in location 1196
9999 mem: storing 7 in location 1197
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 90
9999 mem: storing 91 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 91
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 91
9999 mem: storing 1198 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1198
9999 mem: location 1224 is 1198
9999 mem: storing 0 in location 1198
9999 mem: storing 7 in location 1199
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 91
9999 mem: storing 92 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 92
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 92
9999 mem: storing 1200 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1200
9999 mem: location 1224 is 1200
9999 mem: storing 0 in location 1200
9999 mem: storing 7 in location 1201
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 92
9999 mem: storing 93 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 93
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 93
9999 mem: storing 1202 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1202
9999 mem: location 1224 is 1202
9999 mem: storing 0 in location 1202
9999 mem: storing 7 in location 1203
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 93
9999 mem: storing 94 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 94
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 94
9999 mem: storing 1204 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1204
9999 mem: location 1224 is 1204
9999 mem: storing 0 in location 1204
9999 mem: storing 7 in location 1205
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 94
9999 mem: storing 95 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 95
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 95
9999 mem: storing 1206 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1206
9999 mem: location 1224 is 1206
9999 mem: storing 0 in location 1206
9999 mem: storing 7 in location 1207
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 95
9999 mem: storing 96 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 96
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 96
9999 mem: storing 1208 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1208
9999 mem: location 1224 is 1208
9999 mem: storing 0 in location 1208
9999 mem: storing 7 in location 1209
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 96
9999 mem: storing 97 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 97
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 97
9999 mem: storing 1210 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1210
9999 mem: location 1224 is 1210
9999 mem: storing 0 in location 1210
9999 mem: storing 7 in location 1211
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 97
9999 mem: storing 98 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 98
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 98
9999 mem: storing 1212 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1212
9999 mem: location 1224 is 1212
9999 mem: storing 0 in location 1212
9999 mem: storing 7 in location 1213
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 98
9999 mem: storing 99 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 99
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1220 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1222 is 99
9999 mem: storing 1214 in location 1224
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1224 is 1214
9999 mem: location 1224 is 1214
9999 mem: storing 0 in location 1214
9999 mem: storing 7 in location 1215
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1222 is 99
9999 mem: storing 100 in location 1222
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1222 is 100
9999 mem: location 1221 is 100
9999 mem: storing 1 in location 1223
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1219 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1219 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"ab\n  cd\nef": "literal-string"}
9999 mem: new string alloc: 1225
9999 mem: storing 1225 in location 1
9999 mem: incrementing refcount of 1225: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1225
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1237
9999 mem: storing 11 in location 1238
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1240
9999 mem: incrementing refcount of 1225: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1241
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1242
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1243
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1243 is 10
9999 mem: storing 9 in location 1243
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1250
9999 mem: storing 1250 in location 1244
9999 mem: incrementing refcount of 1250: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9999 mem: storing 1255 in location 1245
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1242 is 0
9999 mem: location 1245 is 1255
9999 mem: storing 0 in location 1255
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9999 mem: storing 1256 in location 1245
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1243 is 9
9999 mem: location 1245 is 1256
9999 mem: storing 9 in location 1256
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1245
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1245 is 1258
9999 mem: storing 1 in location 1258
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1245
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1242 is 0
9999 mem: location 1245 is 1259
9999 mem: storing 0 in location 1259
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9999 mem: storing 1251 in location 1246
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1263
9999 mem: storing 4 in location 1264
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1266
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1267
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1269
9999 mem: storing 1269 in location 1268
9999 mem: incrementing refcount of 1269: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1266 is 167
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1268 is 1269
9999 mem: skipping refcount at 1269
9999 mem: storing 167 in location 1270
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1268 is 1269
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1269
9999 mem: location 1246 is 1251
9999 mem: storing 1269 in location 1251
9999 mem: incrementing refcount of 1269: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9999 mem: storing 1252 in location 1247
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1246 is 1251
9999 mem: location 1251 is 1269
9999 mem: location 1247 is 1252
9999 mem: storing 1269 in location 1252
9999 mem: incrementing refcount of 1269: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1248
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1246 is 1251
9999 mem: location 1251 is 1269
9999 mem: location 1248 is 1254
9999 mem: storing 1269 in location 1254
9999 mem: incrementing refcount of 1269: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1244 is 1250
9999 mem: location 1240 is 1225
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1273
9999 mem: storing 8 in location 1274
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1276
9999 mem: incrementing refcount of 1250: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1277
9999 mem: incrementing refcount of 1225: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1277 is 1225
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9999 mem: storing 10 in location 1278
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1278 is 10
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1279
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1276 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1276 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1269
9999 mem: storing 1269 in location 1280
9999 mem: incrementing refcount of 1269: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 0
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 0
9998 run: address to copy is 1227
9998 run: its type is character
9999 mem: location 1227 is 97
9999 mem: storing 97 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 97
9999 mem: location 1280 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1283
9999 mem: storing 5 in location 1284
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1287
9999 mem: incrementing refcount of 1269: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1290
9999 mem: storing 1290 in location 1288
9999 mem: incrementing refcount of 1290: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1286 is 97
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1291
9999 mem: storing 97 in location 1291
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1287 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1288 is 1290
9999 mem: location 1287 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy to is 1271
9999 mem: storing 1290 in location 1271
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1287 is 1269
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1293
9999 mem: storing 1269 in location 1293
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1269
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 0 in location 1292
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1269
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1294
9999 mem: storing 3 in location 1295
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 7 -> 6
9999 mem: storing 1290 in location 1280
9999 mem: incrementing refcount of 1290: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 0
9999 mem: storing 1 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 1
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 1
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 98
9999 mem: storing 98 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 98
9999 mem: location 1280 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1287
9999 mem: incrementing refcount of 1290: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1299
9999 mem: storing 1299 in location 1288
9999 mem: incrementing refcount of 1299: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: location 1286 is 98
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy to is 1300
9999 mem: storing 98 in location 1300
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1269
9999 mem: location 1287 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1269
9999 mem: location 1288 is 1299
9999 mem: location 1287 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 1299 in location 1292
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: location 1287 is 1290
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy to is 1302
9999 mem: storing 1290 in location 1302
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy to is 1301
9999 mem: storing 0 in location 1301
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1290
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 5 -> 4
9999 mem: storing 1299 in location 1280
9999 mem: incrementing refcount of 1299: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 1
9999 mem: storing 2 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 2
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 2
9998 run: address to copy is 1229
9998 run: its type is character
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 10
9999 mem: location 1280 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1287
9999 mem: incrementing refcount of 1299: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1303
9999 mem: storing 1303 in location 1288
9999 mem: incrementing refcount of 1303: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1286 is 10
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1304
9999 mem: storing 10 in location 1304
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1287 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 1290
9999 mem: location 1288 is 1303
9999 mem: location 1287 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy to is 1301
9999 mem: storing 1303 in location 1301
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1287 is 1299
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1306
9999 mem: storing 1299 in location 1306
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 0
9999 mem: location 1306 is 1299
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1305
9999 mem: storing 0 in location 1305
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1299
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 5 -> 4
9999 mem: storing 1303 in location 1280
9999 mem: incrementing refcount of 1303: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 2
9999 mem: storing 3 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 3
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 3
9998 run: address to copy is 1230
9998 run: its type is character
9999 mem: location 1230 is 32
9999 mem: storing 32 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 32
9999 mem: location 1280 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1287
9999 mem: incrementing refcount of 1303: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1307
9999 mem: storing 1307 in location 1288
9999 mem: incrementing refcount of 1307: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1286 is 32
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy to is 1308
9999 mem: storing 32 in location 1308
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 0
9999 mem: location 1306 is 1299
9999 mem: location 1287 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 0
9999 mem: location 1306 is 1299
9999 mem: location 1288 is 1307
9999 mem: location 1287 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy to is 1305
9999 mem: storing 1307 in location 1305
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1287 is 1303
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy to is 1310
9999 mem: storing 1303 in location 1310
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 0
9999 mem: location 1310 is 1303
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy to is 1309
9999 mem: storing 0 in location 1309
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1303
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 5 -> 4
9999 mem: storing 1307 in location 1280
9999 mem: incrementing refcount of 1307: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 3
9999 mem: storing 4 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 4
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 4
9998 run: address to copy is 1231
9998 run: its type is character
9999 mem: location 1231 is 32
9999 mem: storing 32 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 32
9999 mem: location 1280 is 1307
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1287
9999 mem: incrementing refcount of 1307: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1311
9999 mem: storing 1311 in location 1288
9999 mem: incrementing refcount of 1311: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: location 1286 is 32
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1312
9999 mem: storing 32 in location 1312
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 0
9999 mem: location 1310 is 1303
9999 mem: location 1287 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 0
9999 mem: location 1310 is 1303
9999 mem: location 1288 is 1311
9999 mem: location 1287 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy to is 1309
9999 mem: storing 1311 in location 1309
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: location 1287 is 1307
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1314
9999 mem: storing 1307 in location 1314
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1307
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1313
9999 mem: storing 0 in location 1313
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1307
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1307
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 5 -> 4
9999 mem: storing 1311 in location 1280
9999 mem: incrementing refcount of 1311: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 4
9999 mem: storing 5 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 5
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 5
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 99
9999 mem: storing 99 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 99
9999 mem: location 1280 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1287
9999 mem: incrementing refcount of 1311: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1315
9999 mem: storing 1315 in location 1288
9999 mem: incrementing refcount of 1315: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 0
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: location 1286 is 99
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy to is 1316
9999 mem: storing 99 in location 1316
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1307
9999 mem: location 1287 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1307
9999 mem: location 1288 is 1315
9999 mem: location 1287 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy to is 1313
9999 mem: storing 1315 in location 1313
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 0
9999 mem: location 1318 is 0
9999 mem: location 1287 is 1311
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy to is 1318
9999 mem: storing 1311 in location 1318
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1311
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy to is 1317
9999 mem: storing 0 in location 1317
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1311
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 5 -> 4
9999 mem: storing 1315 in location 1280
9999 mem: incrementing refcount of 1315: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 5
9999 mem: storing 6 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 6
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 6
9998 run: address to copy is 1233
9998 run: its type is character
9999 mem: location 1233 is 100
9999 mem: storing 100 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 100
9999 mem: location 1280 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1287
9999 mem: incrementing refcount of 1315: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1319
9999 mem: storing 1319 in location 1288
9999 mem: incrementing refcount of 1319: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: location 1286 is 100
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy to is 1320
9999 mem: storing 100 in location 1320
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1311
9999 mem: location 1287 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1311
9999 mem: location 1288 is 1319
9999 mem: location 1287 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy to is 1317
9999 mem: storing 1319 in location 1317
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 0
9999 mem: location 1322 is 0
9999 mem: location 1287 is 1315
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy to is 1322
9999 mem: storing 1315 in location 1322
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1315
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy to is 1321
9999 mem: storing 0 in location 1321
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1315
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 5 -> 4
9999 mem: storing 1319 in location 1280
9999 mem: incrementing refcount of 1319: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 6
9999 mem: storing 7 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 7
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 7
9998 run: address to copy is 1234
9998 run: its type is character
9999 mem: location 1234 is 10
9999 mem: storing 10 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 10
9999 mem: location 1280 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1287
9999 mem: incrementing refcount of 1319: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1323
9999 mem: storing 1323 in location 1288
9999 mem: incrementing refcount of 1323: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1286 is 10
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy to is 1324
9999 mem: storing 10 in location 1324
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1315
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1315
9999 mem: location 1288 is 1323
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy to is 1321
9999 mem: storing 1323 in location 1321
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: location 1287 is 1319
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy to is 1326
9999 mem: storing 1319 in location 1326
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1319
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy to is 1325
9999 mem: storing 0 in location 1325
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1319
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 5 -> 4
9999 mem: storing 1323 in location 1280
9999 mem: incrementing refcount of 1323: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 7
9999 mem: storing 8 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 8
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 8
9998 run: address to copy is 1235
9998 run: its type is character
9999 mem: location 1235 is 101
9999 mem: storing 101 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 101
9999 mem: location 1280 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1287
9999 mem: incrementing refcount of 1323: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1327
9999 mem: storing 1327 in location 1288
9999 mem: incrementing refcount of 1327: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1286 is 101
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy to is 1328
9999 mem: storing 101 in location 1328
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1319
9999 mem: location 1287 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1319
9999 mem: location 1288 is 1327
9999 mem: location 1287 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy to is 1325
9999 mem: storing 1327 in location 1325
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1287 is 1323
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy to is 1330
9999 mem: storing 1323 in location 1330
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1323
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy to is 1329
9999 mem: storing 0 in location 1329
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1323
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 5 -> 4
9999 mem: storing 1327 in location 1280
9999 mem: incrementing refcount of 1327: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 8
9999 mem: storing 9 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 9
9999 mem: location 1278 is 10
9999 mem: storing 0 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1277 is 1225
9999 mem: skipping refcount at 1225
9998 run: base address is 1226
9999 mem: location 1279 is 9
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 102
9999 mem: storing 102 in location 1282
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1282 is 102
9999 mem: location 1280 is 1327
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1287
9999 mem: incrementing refcount of 1327: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1331
9999 mem: storing 1331 in location 1288
9999 mem: incrementing refcount of 1331: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: location 1286 is 102
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy to is 1332
9999 mem: storing 102 in location 1332
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1323
9999 mem: location 1287 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1289
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 0
9999 mem: location 1330 is 1323
9999 mem: location 1288 is 1331
9999 mem: location 1287 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy to is 1329
9999 mem: storing 1331 in location 1329
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: location 1287 is 1327
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy to is 1334
9999 mem: storing 1327 in location 1334
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1289 is 0
9999 mem: location 1288 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy to is 1333
9999 mem: storing 0 in location 1333
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1327
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1280 is 1327
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 5 -> 4
9999 mem: storing 1331 in location 1280
9999 mem: incrementing refcount of 1331: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1279 is 9
9999 mem: storing 10 in location 1279
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1279 is 10
9999 mem: location 1278 is 10
9999 mem: storing 1 in location 1281
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1276 is 1250
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1250: 2 -> 1
9999 mem: storing 1250 in location 1244
9999 mem: incrementing refcount of 1250: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1248
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1246 is 1251
9999 mem: location 1251 is 1269
9999 mem: location 1248 is 1254
9999 mem: decrementing refcount of 1269: 6 -> 5
9999 mem: storing 1269 in location 1254
9999 mem: incrementing refcount of 1269: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1241 is 1008
9999 mem: location 1244 is 1250
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1335
9999 mem: storing 28 in location 1336
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1339
9999 mem: incrementing refcount of 1250: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1250
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1340
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 105 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1342
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1343
9999 mem: incrementing refcount of 1269: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 mem: storing 1269 in location 1344
9999 mem: incrementing refcount of 1269: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 9 -> 8
9999 mem: storing 1290 in location 1343
9999 mem: incrementing refcount of 1290: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1345
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1346
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1348
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1349
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1350
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1290
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1353
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1269
9999 mem: location 1350 is 1254
9999 mem: decrementing refcount of 1269: 8 -> 7
9999 mem: storing 1269 in location 1254
9999 mem: incrementing refcount of 1269: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 97
9999 mem: storing 97 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1365
9999 mem: storing 10 in location 1366
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 97
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 97
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 97
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1377
9999 mem: storing 23 in location 1378
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
9990 schedule: print/render/new-editor/scenario_editor-skips-indent-around-paste
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 0
9999 mem: storing 10 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 10
9999 mem: storing 1036 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 97
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1036
9999 mem: location 1399 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 7 -> 6
9999 mem: storing 1299 in location 1343
9999 mem: incrementing refcount of 1299: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 9 -> 8
9999 mem: storing 1290 in location 1344
9999 mem: incrementing refcount of 1290: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1299
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1353
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9998 run: its type is "character"
9999 mem: location 1300 is 98
9999 mem: storing 98 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 98
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 98
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 98
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 1
9999 mem: storing 11 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 11
9999 mem: storing 1038 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 98
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1038
9999 mem: location 1399 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 7 -> 6
9999 mem: storing 1303 in location 1343
9999 mem: incrementing refcount of 1303: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 9 -> 8
9999 mem: storing 1299 in location 1344
9999 mem: incrementing refcount of 1299: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1303
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1353
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "character"
9999 mem: location 1304 is 10
9999 mem: storing 10 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 10
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 10
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1356
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 2
9999 mem: storing 12 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 12
9999 mem: storing 1040 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1040
9999 mem: location 1399 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 3
9999 mem: storing 13 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 13
9999 mem: storing 1042 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1042
9999 mem: location 1399 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 4
9999 mem: storing 14 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 14
9999 mem: storing 1044 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1044
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 5
9999 mem: storing 15 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 15
9999 mem: storing 1046 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1046
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 6
9999 mem: storing 16 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 16
9999 mem: storing 1048 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1048
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-skips-indent-around-paste
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 7
9999 mem: storing 17 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 17
9999 mem: storing 1050 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1050
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 8
9999 mem: storing 18 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 18
9999 mem: storing 1052 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1052
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 9
9999 mem: storing 19 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 19
9999 mem: storing 1054 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1054
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 1
9999 mem: storing 2 in location 1346
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 2
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 7 -> 6
9999 mem: storing 1307 in location 1343
9999 mem: incrementing refcount of 1307: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 9 -> 8
9999 mem: storing 1303 in location 1344
9999 mem: incrementing refcount of 1303: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1307
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1308
9998 run: its type is "character"
9999 mem: location 1308 is 32
9999 mem: storing 32 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 32
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 32
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 0
9999 mem: storing 20 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 20
9999 mem: storing 1056 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1056
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1307
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 7 -> 6
9999 mem: storing 1311 in location 1343
9999 mem: incrementing refcount of 1311: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1303
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 9 -> 8
9999 mem: storing 1307 in location 1344
9999 mem: incrementing refcount of 1307: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1311
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "character"
9999 mem: location 1312 is 32
9999 mem: storing 32 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 32
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 32
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 1
9999 mem: storing 21 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 21
9999 mem: storing 1058 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1058
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 7 -> 6
9999 mem: storing 1315 in location 1343
9999 mem: incrementing refcount of 1315: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1307
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 9 -> 8
9999 mem: storing 1311 in location 1344
9999 mem: incrementing refcount of 1311: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1315
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9998 run: its type is "character"
9999 mem: location 1316 is 99
9999 mem: storing 99 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 99
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 99
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 99
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 2
9999 mem: storing 22 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 22
9999 mem: storing 1060 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 99
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1060
9999 mem: location 1399 is 1060
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 7 -> 6
9999 mem: storing 1319 in location 1343
9999 mem: incrementing refcount of 1319: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1311
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 9 -> 8
9999 mem: storing 1315 in location 1344
9999 mem: incrementing refcount of 1315: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 2
9999 mem: storing 3 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1319
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9998 run: its type is "character"
9999 mem: location 1320 is 100
9999 mem: storing 100 in location 1354
9990 schedule: render/new-editor/scenario_editor-skips-indent-around-paste
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 100
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 100
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 3
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 100
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 3
9999 mem: storing 23 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 23
9999 mem: storing 1062 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 100
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1062
9999 mem: location 1399 is 1062
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 7 -> 6
9999 mem: storing 1323 in location 1343
9999 mem: incrementing refcount of 1323: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 9 -> 8
9999 mem: storing 1319 in location 1344
9999 mem: incrementing refcount of 1319: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 3
9999 mem: storing 4 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1323
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1324
9998 run: its type is "character"
9999 mem: location 1324 is 10
9999 mem: storing 10 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 10
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 10
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 4
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 24 -> 25
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 4
9999 mem: storing 24 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 16 -> 17
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 24
9999 mem: storing 1064 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1064
9999 mem: location 1399 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 25 -> 26
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 5
9999 mem: storing 25 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 17 -> 18
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 25
9999 mem: storing 1066 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1066
9999 mem: location 1399 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 26 -> 27
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 6
9999 mem: storing 26 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 18 -> 19
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 26
9999 mem: storing 1068 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1068
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 27 -> 28
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 7
9999 mem: storing 27 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 27
9999 mem: storing 1070 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1070
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 8
9999 mem: storing 28 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 28
9999 mem: storing 1072 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1072
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 9
9999 mem: storing 29 in location 1394
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 21 -> 22
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 29
9999 mem: storing 1074 in location 1399
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1074
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 2
9999 mem: storing 3 in location 1346
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 3
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 31 -> 30
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 30 -> 31
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 7 -> 6
9999 mem: storing 1327 in location 1343
9999 mem: incrementing refcount of 1327: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1319
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 9 -> 8
9999 mem: storing 1323 in location 1344
9999 mem: incrementing refcount of 1323: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1327
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
9990 schedule: render/new-editor/scenario_editor-skips-indent-around-paste
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1328
9998 run: its type is "character"
9999 mem: location 1328 is 101
9999 mem: storing 101 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 101
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 101
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 101
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 0
9999 mem: storing 30 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 30
9999 mem: storing 1076 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 101
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1076
9999 mem: location 1399 is 1076
9999 mem: storing 101 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1327
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 7 -> 6
9999 mem: storing 1331 in location 1343
9999 mem: incrementing refcount of 1331: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1323
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 9 -> 8
9999 mem: storing 1327 in location 1344
9999 mem: incrementing refcount of 1327: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1331
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "character"
9999 mem: location 1332 is 102
9999 mem: storing 102 in location 1354
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1368
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1369
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1368 is 7
9999 mem: storing 1 in location 1370
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1369 is 102
9999 mem: storing 0 in location 1371
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1372
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1370 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1369 is 102
9999 mem: storing 0 in location 1374
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1374 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1368 is 7
9999 mem: storing 0 in location 1375
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1368 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1355
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 102
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1381
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1391
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 1
9999 mem: storing 31 in location 1394
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 23 -> 24
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1397
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 31
9999 mem: storing 1078 in location 1399
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 102
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1078
9999 mem: location 1399 is 1078
9999 mem: storing 102 in location 1078
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1331
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1297
9999 mem: incrementing refcount of 1331: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1331
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1298
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1331: 6 -> 5
9999 mem: storing 0 in location 1343
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1327
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 9 -> 8
9999 mem: storing 1331 in location 1344
9999 mem: incrementing refcount of 1331: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1253
9999 mem: storing 1253 in location 1359
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 0
9999 mem: location 1359 is 1253
9999 mem: storing 0 in location 1253
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1352
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1360
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1352 is 0
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1361
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 1
9999 mem: storing 0 in location 1362
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: storing 0 in location 1363
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1257
9999 mem: storing 1257 in location 1364
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1364 is 1257
9999 mem: storing 3 in location 1257
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1346 is 3
9999 mem: location 1347 is 2
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1250
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 2
9998 run: result 2 is 1008
9998 run: result 3 is 1250
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1241
9999 mem: incrementing refcount of 1008: 32 -> 33
9999 mem: decrementing refcount of 1250: 3 -> 2
9999 mem: storing 1250 in location 1244
9999 mem: incrementing refcount of 1250: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1244 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1249
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1249 is 1260
9999 mem: storing 1 in location 1260
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1244 is 1250
9999 mem: location 1241 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1250
9999 mem: storing 1250 in location 2
9999 mem: incrementing refcount of 1250: 3 -> 4
 102 run: assume-console {"\n    left-click 2, 8\n    press 65507  # start paste\n    press enter\n    press 65506  # end paste\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {8: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {8: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {65507: "literal"}
9992 load: after rewriting: press {65507: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {enter: ()}
9992 load: after rewriting: press {enter: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {65506: "literal"}
9992 load: after rewriting: press {65506: "literal"}
9999 mem: storing 'left-click' event starting at 1404
9999 mem: storing 'press' event starting at 1408
9999 mem: storing 'press' event starting at 1412
9999 mem: storing 'press' event starting at 1416
9999 mem: storing console in 1420
9999 mem: storing console data in 1422
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1420
9999 mem: location 2 is 1250
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1423
9999 mem: storing 14 in location 1424
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 33 -> 34
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1428
9999 mem: incrementing refcount of 1250: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1429
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1426 is 1008
9999 mem: location 1429 is 1
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 34 -> 35
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1427 is 1420
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1439
9999 mem: storing 12 in location 1440
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1442
9999 mem: incrementing refcount of 1420: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1442 is 1420
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1421
9998 run: its type is "number"
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1443
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1422 is 1402
9999 mem: storing 1402 in location 1444
9999 mem: incrementing refcount of 1402: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 4 in location 1445
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1443 is 0
9999 mem: location 1445 is 4
9999 mem: storing 0 in location 1446
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9998 run: base address is 1403
9999 mem: location 1443 is 0
9998 run: address to copy is 1404
9998 run: its type is event
9999 mem: location 1404 is 2
9999 mem: location 1405 is 65513
9999 mem: location 1406 is 2
9999 mem: location 1407 is 8
9999 mem: storing 2 in location 1448
9999 mem: storing 65513 in location 1449
9999 mem: storing 2 in location 1450
9999 mem: storing 8 in location 1451
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1443 is 0
9999 mem: storing 1 in location 1443
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1402
9999 mem: location 1443 is 1
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy to is 1421
9999 mem: storing 1 in location 1421
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1448 is 2
9999 mem: location 1449 is 65513
9999 mem: location 1450 is 2
9999 mem: location 1451 is 8
9999 mem: location 1442 is 1420
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 8]
9998 run: result 1 is 1420
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1431
9999 mem: storing 65513 in location 1432
9999 mem: storing 2 in location 1433
9999 mem: storing 8 in location 1434
9999 mem: decrementing refcount of 1420: 2 -> 1
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 1 -> 2
9999 mem: storing 1 in location 1435
9999 mem: storing 0 in location 1436
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1431 is 2
9999 mem: location 1432 is 65513
9999 mem: location 1433 is 2
9999 mem: location 1434 is 8
9999 mem: storing 1432 in location 1437
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 1432
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 mem: location 1437 is 1432
9999 mem: location 1432 is 65513
9999 mem: location 1433 is 2
9999 mem: location 1434 is 8
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1453
9999 mem: storing 27 in location 1454
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1456
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1457
9999 mem: incrementing refcount of 1250: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1458
9999 mem: storing 2 in location 1459
9999 mem: storing 8 in location 1460
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1457 is 1250
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1458 is 65513
9999 mem: location 1459 is 2
9999 mem: location 1460 is 8
9998 run: address to copy is 1459
9998 run: its type is "number"
9999 mem: location 1459 is 2
9999 mem: storing 2 in location 1461
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1461 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1458 is 65513
9999 mem: location 1459 is 2
9999 mem: location 1460 is 8
9998 run: address to copy is 1460
9998 run: its type is "number"
9999 mem: location 1460 is 8
9999 mem: storing 8 in location 1462
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1463
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1462 is 8
9999 mem: location 1463 is 0
9999 mem: storing 0 in location 1464
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1465
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1462 is 8
9999 mem: location 1465 is 9
9999 mem: storing 0 in location 1466
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1467
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1468
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1469
9999 mem: incrementing refcount of 1269: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1456 is 1008
9999 mem: location 1457 is 1250
9999 mem: location 1461 is 2
9999 mem: location 1462 is 8
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1482
9999 mem: storing 26 in location 1483
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1485
9999 mem: incrementing refcount of 1008: 36 -> 37
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1486
9999 mem: incrementing refcount of 1250: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1487
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1488
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1486 is 1250
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1489
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1490
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1485 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 37 -> 38
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 107 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1491
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1492
9999 mem: incrementing refcount of 1269: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1269
9999 mem: storing 1269 in location 1493
9999 mem: incrementing refcount of 1269: 10 -> 11
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 12 -> 11
9999 mem: storing 1290 in location 1492
9999 mem: incrementing refcount of 1290: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1494
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1495
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 1
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1496
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1487 is 2
9999 mem: location 1496 is 1258
9999 mem: storing 2 in location 1258
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1497
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1488 is 8
9999 mem: location 1497 is 1259
9999 mem: storing 8 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1269
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 8
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1486 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1498
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 1
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 1
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1492 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 97
9999 mem: storing 97 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 97
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 0
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 11 -> 10
9999 mem: storing 1299 in location 1492
9999 mem: incrementing refcount of 1299: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 12 -> 11
9999 mem: storing 1290 in location 1493
9999 mem: incrementing refcount of 1290: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1299
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 1
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 1
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1492 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9998 run: its type is "character"
9999 mem: location 1300 is 98
9999 mem: storing 98 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 98
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 1
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 11 -> 10
9999 mem: storing 1303 in location 1492
9999 mem: incrementing refcount of 1303: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 13 -> 12
9999 mem: storing 1299 in location 1493
9999 mem: incrementing refcount of 1299: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1303
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 1
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 1
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1492 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "character"
9999 mem: location 1304 is 10
9999 mem: storing 10 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 10
9999 mem: storing 1 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 1
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1494 is 1
9999 mem: storing 2 in location 1494
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1495
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 11 -> 10
9999 mem: storing 1307 in location 1492
9999 mem: incrementing refcount of 1307: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 13 -> 12
9999 mem: storing 1303 in location 1493
9999 mem: incrementing refcount of 1303: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1307
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 2
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 0
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1492 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1308
9998 run: its type is "character"
9999 mem: location 1308 is 32
9999 mem: storing 32 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 32
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 0
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 11 -> 10
9999 mem: storing 1311 in location 1492
9999 mem: incrementing refcount of 1311: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 13 -> 12
9999 mem: storing 1307 in location 1493
9999 mem: incrementing refcount of 1307: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1311
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 2
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 1
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1492 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "character"
9999 mem: location 1312 is 32
9999 mem: storing 32 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 32
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 1
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 11 -> 10
9999 mem: storing 1315 in location 1492
9999 mem: incrementing refcount of 1315: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 13 -> 12
9999 mem: storing 1311 in location 1493
9999 mem: incrementing refcount of 1311: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1315
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 2
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1492 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9998 run: its type is "character"
9999 mem: location 1316 is 99
9999 mem: storing 99 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 99
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 2
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 11 -> 10
9999 mem: storing 1319 in location 1492
9999 mem: incrementing refcount of 1319: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 13 -> 12
9999 mem: storing 1315 in location 1493
9999 mem: incrementing refcount of 1315: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 2
9999 mem: storing 3 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1319
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 2
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 3
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1492 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9998 run: its type is "character"
9999 mem: location 1320 is 100
9999 mem: storing 100 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 100
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 3
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 11 -> 10
9999 mem: storing 1323 in location 1492
9999 mem: incrementing refcount of 1323: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 13 -> 12
9999 mem: storing 1319 in location 1493
9999 mem: incrementing refcount of 1319: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 3
9999 mem: storing 4 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1323
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 2
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 4
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 0 in location 1501
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1492 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1324
9998 run: its type is "character"
9999 mem: location 1324 is 10
9999 mem: storing 10 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 10
9999 mem: storing 1 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 2
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 4
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 8
9999 mem: storing 1 in location 1504
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1504 is 1
9998 run: jump-unless fell through
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1495 is 4
9999 mem: location 1497 is 1259
9999 mem: storing 4 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1319
9999 mem: location 1498 is 1254
9999 mem: decrementing refcount of 1269: 11 -> 10
9999 mem: storing 1319 in location 1254
9999 mem: incrementing refcount of 1319: 12 -> 13
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1494 is 2
9999 mem: storing 3 in location 1494
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1495
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 11 -> 10
9999 mem: storing 1327 in location 1492
9999 mem: incrementing refcount of 1327: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 14 -> 13
9999 mem: storing 1323 in location 1493
9999 mem: incrementing refcount of 1323: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1327
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 3
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 3
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1492 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1328
9998 run: its type is "character"
9999 mem: location 1328 is 101
9999 mem: storing 101 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 0
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 11 -> 10
9999 mem: storing 1331 in location 1492
9999 mem: incrementing refcount of 1331: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 13 -> 12
9999 mem: storing 1327 in location 1493
9999 mem: incrementing refcount of 1327: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 1331
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1494 is 3
9999 mem: location 1491 is 10
9999 mem: storing 0 in location 1499
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1499 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 3
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1492 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1492 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "character"
9999 mem: location 1332 is 102
9999 mem: storing 102 in location 1502
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1503
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1495 is 1
9999 mem: location 1490 is 9
9999 mem: storing 0 in location 1505
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1492 is 1331
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1297
9999 mem: incrementing refcount of 1331: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1331
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1298
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1331: 10 -> 9
9999 mem: storing 0 in location 1492
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1493 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 13 -> 12
9999 mem: storing 1331 in location 1493
9999 mem: incrementing refcount of 1331: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1495 is 1
9999 mem: storing 2 in location 1495
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1492 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 3
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1500
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1495 is 2
9999 mem: location 1497 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 1 in location 1506
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1500 is 0
9999 mem: location 1506 is 1
9999 mem: storing 0 in location 1507
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 3
9999 mem: location 1496 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1508
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1507 is 0
9999 mem: location 1508 is 0
9999 mem: storing 0 in location 1509
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1486 is 1250
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1250: 7 -> 6
9999 mem: storing 1250 in location 1457
9999 mem: incrementing refcount of 1250: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1470
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1471
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1472
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1457 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1473
9999 mem: incrementing refcount of 1269: 10 -> 11
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1470 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1365
9999 mem: storing 1365 in location 1475
9999 mem: incrementing refcount of 1365: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1467 is 1
9999 mem: location 1468 is 0
9999 mem: location 1469 is 1269
9999 mem: location 1471 is 2
9999 mem: location 1472 is 4
9999 mem: location 1473 is 1269
9999 mem: location 1470 is 0
9999 mem: location 1475 is 1365
9999 mem: skipping refcount at 1365
9999 mem: location 1475 is 1365
9999 mem: skipping refcount at 1365
9999 mem: storing 1 in location 1366
9999 mem: storing 1 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 1269 in location 1369
9999 mem: storing 2 in location 1370
9999 mem: storing 4 in location 1371
9999 mem: storing 1269 in location 1372
9999 mem: storing 0 in location 1373
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1457 is 1250
9999 mem: location 1475 is 1365
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1286
9999 mem: incrementing refcount of 1250: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1365 in location 1287
9999 mem: incrementing refcount of 1365: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1288
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1287 is 1365
9999 mem: location 1288 is 1261
9999 mem: location 1261 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1365 in location 1266
9999 mem: incrementing refcount of 1365: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1267
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1510
9999 mem: storing 1510 in location 1268
9999 mem: incrementing refcount of 1510: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1266 is 1365
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1510
9999 mem: skipping refcount at 1510
9999 mem: location 1268 is 1510
9999 mem: skipping refcount at 1510
9999 mem: storing 1365 in location 1511
9999 mem: storing 0 in location 1512
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1268 is 1510
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1510
9999 mem: location 1288 is 1261
9999 mem: storing 1510 in location 1261
9999 mem: incrementing refcount of 1510: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1262
9999 mem: storing 1262 in location 1289
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1289 is 1262
9999 mem: storing 0 in location 1262
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1286 is 1250
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1250: 8 -> 7
9999 mem: storing 1250 in location 1457
9999 mem: incrementing refcount of 1250: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1457 is 1250
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1429
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1426 is 1008
9999 mem: location 1429 is 2
9999 mem: location 1430 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 4
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 38 -> 39
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1427 is 1420
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1442
9999 mem: incrementing refcount of 1420: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1442 is 1420
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 1
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1421
9998 run: its type is "number"
9999 mem: location 1421 is 1
9999 mem: storing 1 in location 1443
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 1
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1422 is 1402
9999 mem: storing 1402 in location 1444
9999 mem: incrementing refcount of 1402: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 4 in location 1445
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1443 is 1
9999 mem: location 1445 is 4
9999 mem: storing 0 in location 1446
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9998 run: base address is 1403
9999 mem: location 1443 is 1
9998 run: address to copy is 1408
9998 run: its type is event
9999 mem: location 1408 is 1
9999 mem: location 1409 is 65507
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1448
9999 mem: storing 65507 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1443 is 1
9999 mem: storing 2 in location 1443
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 1
9999 mem: location 1422 is 1402
9999 mem: location 1443 is 2
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy to is 1421
9999 mem: storing 2 in location 1421
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65507
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1442 is 1420
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65507, 0, 0]
9998 run: result 1 is 1420
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1431
9999 mem: storing 65507 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: decrementing refcount of 1420: 3 -> 2
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 2 -> 3
9999 mem: storing 1 in location 1435
9999 mem: storing 0 in location 1436
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1431 is 1
9999 mem: location 1432 is 65507
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: storing 0 in location 1437
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 mem: location 1431 is 1
9999 mem: location 1432 is 65507
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1513
9999 mem: storing 85 in location 1514
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1516
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1517
9999 mem: incrementing refcount of 1250: 8 -> 9
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1518
9999 mem: storing 65507 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 0 in location 1521
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1522
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1517 is 1250
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1298
 106 run: return {width: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1523
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 41 -> 42
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 106 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1524
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1525
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1526
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1527
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1528
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1529
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1528 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1530
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1531
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1518 is 1
9999 mem: location 1519 is 65507
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: storing 0 in location 1532
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1532 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1518 is 1
9999 mem: location 1519 is 65507
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: storing 1519 in location 1586
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1586 is 1519
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1549
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1565
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1572
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1573
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1573 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1587
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1588
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1589
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1591
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1591 is 0
9998 run: jumping to instruction 757
 105 run: {delete-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65522: "literal", "delete": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1593
 105 run: jump-unless {delete-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1593 is 0
9998 run: jumping to instruction 796
 105 run: {paste-end?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65506: "literal", "paste-end": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 0 in location 1597
 105 run: jump-unless {paste-end?: "boolean"}, {: "offset"}
9999 mem: location 1597 is 0
9998 run: jumping to instruction 804
 105 run: {paste-start?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65507: "literal", "paste-start": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65507
9999 mem: storing 1 in location 1599
 105 run: jump-unless {paste-start?: "boolean"}, {: "offset"}
9999 mem: location 1599 is 1
9998 run: jump-unless fell through
 105 run: {indent?: ("address" "boolean")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1598
 105 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {0: "literal", "false": ()}
9999 mem: location 1598 is 1260
9999 mem: storing 0 in location 1260
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1522
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1516 is 1008
9999 mem: location 1517 is 1250
9999 mem: location 1522 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1250
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 41 -> 42
9999 mem: decrementing refcount of 1250: 9 -> 8
9999 mem: storing 1250 in location 1428
9999 mem: incrementing refcount of 1250: 8 -> 9
9999 mem: storing 1 in location 1438
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1216
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1220
9999 mem: incrementing refcount of 1250: 9 -> 10
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1221
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1222
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1339
9999 mem: incrementing refcount of 1250: 10 -> 11
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1250
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1340
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 107 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1342
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1343
9999 mem: incrementing refcount of 1269: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 mem: storing 1269 in location 1344
9999 mem: incrementing refcount of 1269: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 14 -> 13
9999 mem: storing 1290 in location 1343
9999 mem: incrementing refcount of 1290: 13 -> 14
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1345
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1348
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1349
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1350
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 97
9999 mem: storing 97 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1600
9999 mem: storing 10 in location 1601
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 97
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 97
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 97
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 0
9999 mem: storing 10 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 10
9999 mem: storing 1036 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 97
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1036
9999 mem: location 1399 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 15 -> 14
9999 mem: storing 1299 in location 1343
9999 mem: incrementing refcount of 1299: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 14 -> 13
9999 mem: storing 1290 in location 1344
9999 mem: incrementing refcount of 1290: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1299
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9998 run: its type is "character"
9999 mem: location 1300 is 98
9999 mem: storing 98 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 98
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 98
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 98
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 1
9999 mem: storing 11 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 25 -> 26
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 11
9999 mem: storing 1038 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 98
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1038
9999 mem: location 1399 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 15 -> 14
9999 mem: storing 1303 in location 1343
9999 mem: incrementing refcount of 1303: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 17 -> 16
9999 mem: storing 1299 in location 1344
9999 mem: incrementing refcount of 1299: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1303
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "character"
9999 mem: location 1304 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 10
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 10
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 49 -> 50
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 2
9999 mem: storing 12 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 26 -> 27
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 12
9999 mem: storing 1040 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1040
9999 mem: location 1399 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 50 -> 51
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 3
9999 mem: storing 13 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 27 -> 28
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 13
9999 mem: storing 1042 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1042
9999 mem: location 1399 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 51 -> 52
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 4
9999 mem: storing 14 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 28 -> 29
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 14
9999 mem: storing 1044 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1044
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 52 -> 53
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 5
9999 mem: storing 15 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 15
9999 mem: storing 1046 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1046
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 53 -> 52
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 52 -> 53
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 53 -> 54
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 6
9999 mem: storing 16 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 30 -> 31
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 16
9999 mem: storing 1048 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1048
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 54 -> 55
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 7
9999 mem: storing 17 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 31 -> 32
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 17
9999 mem: storing 1050 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1050
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 55 -> 56
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 8
9999 mem: storing 18 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 32 -> 33
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 18
9999 mem: storing 1052 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1052
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 56 -> 57
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 9
9999 mem: storing 19 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 19
9999 mem: storing 1054 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1054
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 1
9999 mem: storing 2 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 2
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 15 -> 14
9999 mem: storing 1307 in location 1343
9999 mem: incrementing refcount of 1307: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 17 -> 16
9999 mem: storing 1303 in location 1344
9999 mem: incrementing refcount of 1303: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1307
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 0 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1308
9998 run: its type is "character"
9999 mem: location 1308 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 32
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 32
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 0
9999 mem: storing 20 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 20
9999 mem: storing 1056 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1056
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 15 -> 14
9999 mem: storing 1311 in location 1343
9999 mem: incrementing refcount of 1311: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 17 -> 16
9999 mem: storing 1307 in location 1344
9999 mem: incrementing refcount of 1307: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1311
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 0 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "character"
9999 mem: location 1312 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 32
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 32
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 1
9999 mem: storing 21 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 21
9999 mem: storing 1058 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1058
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 15 -> 14
9999 mem: storing 1315 in location 1343
9999 mem: incrementing refcount of 1315: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 17 -> 16
9999 mem: storing 1311 in location 1344
9999 mem: incrementing refcount of 1311: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1315
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 0 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9998 run: its type is "character"
9999 mem: location 1316 is 99
9999 mem: storing 99 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 99
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 99
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 99
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 2
9999 mem: storing 22 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 22
9999 mem: storing 1060 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 99
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1060
9999 mem: location 1399 is 1060
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 15 -> 14
9999 mem: storing 1319 in location 1343
9999 mem: incrementing refcount of 1319: 14 -> 15
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 17 -> 16
9999 mem: storing 1315 in location 1344
9999 mem: incrementing refcount of 1315: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 2
9999 mem: storing 3 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1319
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 3
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 0 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9998 run: its type is "character"
9999 mem: location 1320 is 100
9999 mem: storing 100 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 100
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 100
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 3
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 100
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 3
9999 mem: storing 23 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 23
9999 mem: storing 1062 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 100
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1062
9999 mem: location 1399 is 1062
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 15 -> 16
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 16 -> 15
9999 mem: storing 1323 in location 1343
9999 mem: incrementing refcount of 1323: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 17 -> 16
9999 mem: storing 1319 in location 1344
9999 mem: incrementing refcount of 1319: 16 -> 17
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 3
9999 mem: storing 4 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1323
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 4
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 1 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1319
9999 mem: location 1350 is 1254
9999 mem: decrementing refcount of 1319: 17 -> 16
9999 mem: storing 1319 in location 1254
9999 mem: incrementing refcount of 1319: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1324
9998 run: its type is "character"
9999 mem: location 1324 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 10
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 10
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 4
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 0 in location 1356
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 4
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 63 -> 64
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 4
9999 mem: storing 24 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 38 -> 39
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 24
9999 mem: storing 1064 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1064
9999 mem: location 1399 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 63 -> 64
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 64 -> 65
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 5
9999 mem: storing 25 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 39 -> 40
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 25
9999 mem: storing 1066 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1066
9999 mem: location 1399 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 65 -> 66
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 6
9999 mem: storing 26 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 40 -> 41
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 26
9999 mem: storing 1068 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1068
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 66 -> 67
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 7
9999 mem: storing 27 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 27
9999 mem: storing 1070 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1070
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 67 -> 68
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 8
9999 mem: storing 28 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 42 -> 43
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 28
9999 mem: storing 1072 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1072
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 68 -> 69
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 9
9999 mem: storing 29 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 43 -> 44
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 29
9999 mem: storing 1074 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1074
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 2
9999 mem: storing 3 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 3
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 15 -> 14
9999 mem: storing 1327 in location 1343
9999 mem: incrementing refcount of 1327: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1319: 18 -> 17
9999 mem: storing 1323 in location 1344
9999 mem: incrementing refcount of 1323: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1327
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1328
9998 run: its type is "character"
9999 mem: location 1328 is 101
9999 mem: storing 101 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 101
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 101
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 101
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 0
9999 mem: storing 30 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 44 -> 45
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 30
9999 mem: storing 1076 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 101
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1076
9999 mem: location 1399 is 1076
9999 mem: storing 101 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 15 -> 14
9999 mem: storing 1331 in location 1343
9999 mem: incrementing refcount of 1331: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 17 -> 16
9999 mem: storing 1327 in location 1344
9999 mem: incrementing refcount of 1327: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1331
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "character"
9999 mem: location 1332 is 102
9999 mem: storing 102 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1603
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1604
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1603 is 7
9999 mem: storing 1 in location 1605
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1604 is 102
9999 mem: storing 0 in location 1606
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1607
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1605 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1604 is 102
9999 mem: storing 0 in location 1609
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1609 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1603 is 7
9999 mem: storing 0 in location 1610
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1603 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 102
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 1
9999 mem: storing 31 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 45 -> 46
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 31
9999 mem: storing 1078 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 102
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1078
9999 mem: location 1399 is 1078
9999 mem: storing 102 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1331
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1297
9999 mem: incrementing refcount of 1331: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1331
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1298
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1331: 14 -> 13
9999 mem: storing 0 in location 1343
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 17 -> 16
9999 mem: storing 1331 in location 1344
9999 mem: incrementing refcount of 1331: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1253
9999 mem: storing 1253 in location 1359
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 0
9999 mem: location 1359 is 1253
9999 mem: storing 0 in location 1253
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1352
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 1 in location 1360
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1352 is 0
9999 mem: location 1360 is 1
9999 mem: storing 0 in location 1361
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 0 in location 1362
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: storing 0 in location 1363
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1257
9999 mem: storing 1257 in location 1364
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1364 is 1257
9999 mem: storing 3 in location 1257
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1346 is 3
9999 mem: location 1347 is 2
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1250
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 2
9999 mem: storing 3 in location 1223
9999 mem: storing 2 in location 1224
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1224 is 2
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 72 -> 73
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 73 -> 74
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 2
9999 mem: storing 32 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 32
9999 mem: storing 1080 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1080
9999 mem: location 1399 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 74 -> 75
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 3
9999 mem: storing 33 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 33
9999 mem: storing 1082 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1082
9999 mem: location 1399 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 75 -> 76
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 4
9999 mem: storing 34 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 34
9999 mem: storing 1084 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1084
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 5
9999 mem: storing 35 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 35
9999 mem: storing 1086 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1086
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 76 -> 77
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 6
9999 mem: storing 36 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 36
9999 mem: storing 1088 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1088
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 77 -> 78
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 7
9999 mem: storing 37 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 37
9999 mem: storing 1090 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1090
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 8
9999 mem: storing 38 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 38
9999 mem: storing 1092 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1092
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 80 -> 79
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 9
9999 mem: storing 39 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 39
9999 mem: storing 1094 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1094
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 3
9999 mem: storing 4 in location 1223
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 4
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1443
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1444
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1445
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1446
9999 mem: storing 1 in location 1447
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1448
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1450
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1443 is 4
9999 mem: location 1444 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 4
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 83 -> 84
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 0
9999 mem: storing 40 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 40
9999 mem: storing 1096 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1096
9999 mem: location 1399 is 1096
9999 mem: storing 9480 in location 1096
9999 mem: storing 245 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 0
9999 mem: storing 1 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 1
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 84 -> 85
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 1
9999 mem: storing 41 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 41
9999 mem: storing 1098 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1098
9999 mem: location 1399 is 1098
9999 mem: storing 9480 in location 1098
9999 mem: storing 245 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 1
9999 mem: storing 2 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 2
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 2
9999 mem: storing 42 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 42
9999 mem: storing 1100 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1100
9999 mem: location 1399 is 1100
9999 mem: storing 9480 in location 1100
9999 mem: storing 245 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 2
9999 mem: storing 3 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 3
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 3
9999 mem: storing 43 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 43
9999 mem: storing 1102 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1102
9999 mem: location 1399 is 1102
9999 mem: storing 9480 in location 1102
9999 mem: storing 245 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 3
9999 mem: storing 4 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 4
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 4
9999 mem: storing 44 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 44
9999 mem: storing 1104 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1104
9999 mem: location 1399 is 1104
9999 mem: storing 9480 in location 1104
9999 mem: storing 245 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 4
9999 mem: storing 5 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 5
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 5
9999 mem: storing 45 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 45
9999 mem: storing 1106 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1106
9999 mem: location 1399 is 1106
9999 mem: storing 9480 in location 1106
9999 mem: storing 245 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 5
9999 mem: storing 6 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 6
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 6
9999 mem: storing 46 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 46
9999 mem: storing 1108 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1108
9999 mem: location 1399 is 1108
9999 mem: storing 9480 in location 1108
9999 mem: storing 245 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 6
9999 mem: storing 7 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 7
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 7
9999 mem: storing 47 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 47
9999 mem: storing 1110 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1110
9999 mem: location 1399 is 1110
9999 mem: storing 9480 in location 1110
9999 mem: storing 245 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 7
9999 mem: storing 8 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 8
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 8
9999 mem: storing 48 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 48
9999 mem: storing 1112 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1112
9999 mem: location 1399 is 1112
9999 mem: storing 9480 in location 1112
9999 mem: storing 245 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 8
9999 mem: storing 9 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 9
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 9
9999 mem: storing 49 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 49
9999 mem: storing 1114 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1114
9999 mem: location 1399 is 1114
9999 mem: storing 9480 in location 1114
9999 mem: storing 245 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 9
9999 mem: storing 10 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 10
9999 mem: location 1445 is 9
9999 mem: storing 0 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1442 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 4
9999 mem: storing 5 in location 1223
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 5
9999 mem: location 1221 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 5
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 96 -> 97
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 0
9999 mem: storing 50 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 64 -> 65
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 50
9999 mem: storing 1116 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1116
9999 mem: location 1399 is 1116
9999 mem: storing 32 in location 1116
9999 mem: storing 7 in location 1117
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 97 -> 98
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 1
9999 mem: storing 51 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 65 -> 66
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 51
9999 mem: storing 1118 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1118
9999 mem: location 1399 is 1118
9999 mem: storing 32 in location 1118
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 98 -> 99
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 2
9999 mem: storing 52 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 66 -> 67
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 52
9999 mem: storing 1120 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1120
9999 mem: location 1399 is 1120
9999 mem: storing 32 in location 1120
9999 mem: storing 7 in location 1121
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 99 -> 100
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 3
9999 mem: storing 53 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 67 -> 68
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 53
9999 mem: storing 1122 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1122
9999 mem: location 1399 is 1122
9999 mem: storing 32 in location 1122
9999 mem: storing 7 in location 1123
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 100 -> 101
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 4
9999 mem: storing 54 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 68 -> 69
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 54
9999 mem: storing 1124 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1124
9999 mem: location 1399 is 1124
9999 mem: storing 32 in location 1124
9999 mem: storing 7 in location 1125
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 101 -> 102
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 5
9999 mem: storing 55 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 69 -> 70
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 55
9999 mem: storing 1126 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1126
9999 mem: location 1399 is 1126
9999 mem: storing 32 in location 1126
9999 mem: storing 7 in location 1127
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 102 -> 101
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 102 -> 103
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 6
9999 mem: storing 56 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 70 -> 71
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 56
9999 mem: storing 1128 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1128
9999 mem: location 1399 is 1128
9999 mem: storing 32 in location 1128
9999 mem: storing 7 in location 1129
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 103 -> 104
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 7
9999 mem: storing 57 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 71 -> 72
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 57
9999 mem: storing 1130 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1130
9999 mem: location 1399 is 1130
9999 mem: storing 32 in location 1130
9999 mem: storing 7 in location 1131
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 104 -> 105
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 8
9999 mem: storing 58 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 72 -> 73
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 58
9999 mem: storing 1132 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1132
9999 mem: location 1399 is 1132
9999 mem: storing 32 in location 1132
9999 mem: storing 7 in location 1133
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 105 -> 106
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 9
9999 mem: storing 59 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 59
9999 mem: storing 1134 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1134
9999 mem: location 1399 is 1134
9999 mem: storing 32 in location 1134
9999 mem: storing 7 in location 1135
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1612
9999 mem: storing 7 in location 1613
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1616
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1617
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1618
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 5
9999 mem: storing 6 in location 1616
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 6
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 107 -> 108
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 6
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1615 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 108 -> 109
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 108 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1619
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 6
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 6
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 109 -> 110
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 6
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 110 -> 111
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 111 -> 112
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 0
9999 mem: storing 60 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 74 -> 75
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 60
9999 mem: storing 1136 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1136
9999 mem: location 1399 is 1136
9999 mem: storing 32 in location 1136
9999 mem: storing 7 in location 1137
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 111 -> 112
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 112 -> 113
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 1
9999 mem: storing 61 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 75 -> 76
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 61
9999 mem: storing 1138 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1138
9999 mem: location 1399 is 1138
9999 mem: storing 32 in location 1138
9999 mem: storing 7 in location 1139
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 112 -> 113
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 113 -> 114
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 2
9999 mem: storing 62 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 76 -> 77
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 62
9999 mem: storing 1140 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1140
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
9999 mem: storing 7 in location 1141
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 113 -> 114
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 114 -> 115
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 3
9999 mem: storing 63 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 77 -> 78
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 63
9999 mem: storing 1142 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1142
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
9999 mem: storing 7 in location 1143
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 114 -> 115
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 115 -> 116
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 4
9999 mem: storing 64 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 78 -> 79
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 64
9999 mem: storing 1144 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1144
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
9999 mem: storing 7 in location 1145
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 116 -> 115
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 115 -> 116
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 116 -> 117
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 5
9999 mem: storing 65 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 79 -> 80
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 65
9999 mem: storing 1146 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1146
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
9999 mem: storing 7 in location 1147
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 116 -> 117
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 117 -> 118
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 6
9999 mem: storing 66 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 80 -> 81
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 66
9999 mem: storing 1148 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1148
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
9999 mem: storing 7 in location 1149
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 117 -> 118
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 118 -> 119
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 7
9999 mem: storing 67 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 81 -> 82
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 67
9999 mem: storing 1150 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1150
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
9999 mem: storing 7 in location 1151
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 119 -> 120
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 8
9999 mem: storing 68 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 82 -> 83
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 68
9999 mem: storing 1152 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1152
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
9999 mem: storing 7 in location 1153
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 119 -> 120
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 120 -> 121
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 9
9999 mem: storing 69 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 83 -> 84
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 69
9999 mem: storing 1154 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1154
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
9999 mem: storing 7 in location 1155
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 6
9999 mem: storing 7 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 7
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 7
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 7
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 122 -> 123
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 123 -> 124
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 0
9999 mem: storing 70 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 84 -> 85
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 70
9999 mem: storing 1156 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1156
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
9999 mem: storing 7 in location 1157
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 124 -> 125
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 1
9999 mem: storing 71 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 85 -> 86
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 71
9999 mem: storing 1158 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1158
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
9999 mem: storing 7 in location 1159
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 125 -> 126
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 2
9999 mem: storing 72 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 86 -> 87
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 72
9999 mem: storing 1160 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1160
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
9999 mem: storing 7 in location 1161
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 126 -> 127
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 3
9999 mem: storing 73 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 87 -> 88
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 73
9999 mem: storing 1162 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1162
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
9999 mem: storing 7 in location 1163
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 127 -> 126
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 126 -> 127
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 127 -> 128
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 4
9999 mem: storing 74 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 88 -> 89
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 74
9999 mem: storing 1164 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1164
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
9999 mem: storing 7 in location 1165
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 127 -> 128
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 128 -> 129
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 5
9999 mem: storing 75 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 89 -> 90
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 75
9999 mem: storing 1166 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1166
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
9999 mem: storing 7 in location 1167
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 129 -> 130
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 6
9999 mem: storing 76 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 90 -> 91
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 76
9999 mem: storing 1168 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1168
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
9999 mem: storing 7 in location 1169
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 129 -> 130
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 130 -> 131
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 7
9999 mem: storing 77 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 91 -> 92
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 77
9999 mem: storing 1170 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1170
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
9999 mem: storing 7 in location 1171
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 130 -> 131
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 131 -> 132
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 8
9999 mem: storing 78 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 92 -> 93
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 78
9999 mem: storing 1172 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1172
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
9999 mem: storing 7 in location 1173
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 131 -> 132
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 132 -> 133
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 9
9999 mem: storing 79 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 93 -> 94
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 79
9999 mem: storing 1174 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1174
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
9999 mem: storing 7 in location 1175
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 133 -> 132
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 132 -> 133
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 7
9999 mem: storing 8 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 8
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 8
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 133 -> 134
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 8
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 134 -> 133
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 135 -> 136
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 0
9999 mem: storing 80 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 94 -> 95
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 80
9999 mem: storing 1176 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1176
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
9999 mem: storing 7 in location 1177
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 136 -> 137
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 1
9999 mem: storing 81 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 95 -> 96
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 81
9999 mem: storing 1178 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1178
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
9999 mem: storing 7 in location 1179
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 137 -> 138
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 2
9999 mem: storing 82 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 96 -> 97
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 82
9999 mem: storing 1180 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1180
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
9999 mem: storing 7 in location 1181
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 137 -> 138
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 138 -> 139
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 3
9999 mem: storing 83 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 97 -> 98
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 83
9999 mem: storing 1182 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1182
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
9999 mem: storing 7 in location 1183
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 139 -> 138
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 138 -> 139
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 139 -> 140
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 4
9999 mem: storing 84 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 98 -> 99
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 84
9999 mem: storing 1184 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1184
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
9999 mem: storing 7 in location 1185
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 140 -> 141
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 5
9999 mem: storing 85 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 99 -> 100
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 85
9999 mem: storing 1186 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1186
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
9999 mem: storing 7 in location 1187
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 141 -> 140
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 140 -> 141
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 141 -> 142
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 6
9999 mem: storing 86 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 100 -> 101
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 86
9999 mem: storing 1188 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1188
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
9999 mem: storing 7 in location 1189
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 142 -> 143
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 7
9999 mem: storing 87 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 101 -> 102
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 87
9999 mem: storing 1190 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1190
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
9999 mem: storing 7 in location 1191
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 143 -> 144
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 8
9999 mem: storing 88 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 102 -> 103
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 88
9999 mem: storing 1192 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1192
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
9999 mem: storing 7 in location 1193
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 143 -> 144
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 144 -> 145
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 9
9999 mem: storing 89 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 103 -> 104
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 89
9999 mem: storing 1194 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1194
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
9999 mem: storing 7 in location 1195
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 144 -> 145
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 8
9999 mem: storing 9 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 9
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 9
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 145 -> 146
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 9
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 146 -> 147
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 147 -> 148
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 0
9999 mem: storing 90 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 104 -> 105
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 90
9999 mem: storing 1196 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1196
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
9999 mem: storing 7 in location 1197
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 148 -> 147
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 147 -> 148
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 148 -> 149
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 1
9999 mem: storing 91 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 105 -> 106
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 91
9999 mem: storing 1198 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1198
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
9999 mem: storing 7 in location 1199
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 149 -> 150
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 2
9999 mem: storing 92 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 106 -> 107
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 92
9999 mem: storing 1200 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1200
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
9999 mem: storing 7 in location 1201
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 149 -> 150
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 150 -> 151
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 3
9999 mem: storing 93 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 107 -> 108
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 93
9999 mem: storing 1202 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1202
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
9999 mem: storing 7 in location 1203
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 150 -> 151
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 151 -> 152
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 4
9999 mem: storing 94 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 108 -> 109
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 94
9999 mem: storing 1204 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1204
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
9999 mem: storing 7 in location 1205
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 151 -> 152
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 152 -> 153
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 5
9999 mem: storing 95 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 109 -> 110
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 95
9999 mem: storing 1206 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1206
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
9999 mem: storing 7 in location 1207
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 153 -> 154
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 6
9999 mem: storing 96 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 110 -> 111
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 96
9999 mem: storing 1208 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1208
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
9999 mem: storing 7 in location 1209
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 154 -> 155
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 7
9999 mem: storing 97 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 111 -> 112
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 97
9999 mem: storing 1210 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1210
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
9999 mem: storing 7 in location 1211
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 155 -> 156
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 8
9999 mem: storing 98 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 112 -> 113
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 98
9999 mem: storing 1212 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1212
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
9999 mem: storing 7 in location 1213
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 155 -> 156
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 156 -> 157
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 9
9999 mem: storing 99 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 113 -> 114
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 99
9999 mem: storing 1214 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1214
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
9999 mem: storing 7 in location 1215
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 156 -> 157
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 9
9999 mem: storing 10 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 10
9999 mem: location 1619 is 10
9999 mem: storing 1 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1615 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 156 -> 157
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1429
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1426 is 1008
9999 mem: location 1429 is 2
9999 mem: location 1430 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 157 -> 158
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 4
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 157 -> 158
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1427 is 1420
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1442
9999 mem: incrementing refcount of 1420: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1442 is 1420
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 2
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1421
9998 run: its type is "number"
9999 mem: location 1421 is 2
9999 mem: storing 2 in location 1443
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 2
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1422 is 1402
9999 mem: storing 1402 in location 1444
9999 mem: incrementing refcount of 1402: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 4 in location 1445
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1443 is 2
9999 mem: location 1445 is 4
9999 mem: storing 0 in location 1446
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9998 run: base address is 1403
9999 mem: location 1443 is 2
9998 run: address to copy is 1412
9998 run: its type is event
9999 mem: location 1412 is 0
9999 mem: location 1413 is 10
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: storing 0 in location 1448
9999 mem: storing 10 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1443 is 2
9999 mem: storing 3 in location 1443
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 2
9999 mem: location 1422 is 1402
9999 mem: location 1443 is 3
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy to is 1421
9999 mem: storing 3 in location 1421
9990 schedule: read-event/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1448 is 0
9999 mem: location 1449 is 10
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1442 is 1420
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 10, 0, 0]
9998 run: result 1 is 1420
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1431
9999 mem: storing 10 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: decrementing refcount of 1420: 4 -> 3
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 3 -> 4
9999 mem: storing 1 in location 1435
9999 mem: storing 0 in location 1436
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1431 is 0
9999 mem: location 1432 is 10
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: storing 0 in location 1437
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 mem: location 1431 is 0
9999 mem: location 1432 is 10
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1513
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1516
9999 mem: incrementing refcount of 1008: 158 -> 159
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1517
9999 mem: incrementing refcount of 1250: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1518
9999 mem: storing 10 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 0 in location 1521
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1522
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1517 is 1250
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 159 -> 160
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1298
 106 run: return {width: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1523
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 160 -> 161
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 106 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1524
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1525
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1526
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1527
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1528
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1529
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1528 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1530
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1531
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1518 is 0
9999 mem: location 1519 is 10
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: storing 1519 in location 1532
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1532 is 1519
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1533
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1544
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1549
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1565
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1566
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1566 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1571
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1572
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1573
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1573 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1574
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 0 in location 1578
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1532 is 1519
9999 mem: location 1519 is 10
9999 mem: storing 1 in location 1582
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1528 is 1258
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1583
 105 run: {cursor-column-before: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1259
9999 mem: location 1259 is 4
9999 mem: storing 4 in location 1584
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1567
9999 mem: incrementing refcount of 1269: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1527 is 1254
9999 mem: location 1254 is 1319
9999 mem: storing 1319 in location 1579
9999 mem: incrementing refcount of 1319: 17 -> 18
 105 run: {editor: ("address" "shared" "editor-data")} <- insert-new-line-and-indent {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}
9999 mem: location 1517 is 1250
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1621
9999 mem: storing 21 in location 1622
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1624
9999 mem: incrementing refcount of 1250: 12 -> 13
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1625
9999 mem: incrementing refcount of 1008: 161 -> 162
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1626
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1627
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1628
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1629
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1319
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 2
9999 mem: location 1259 is 4
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1630
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1625 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 107 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1631
 106 run: insert_3 {10: "literal", "newline": ()}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1628 is 1254
9999 mem: location 1254 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1286
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1287
9999 mem: incrementing refcount of 1319: 18 -> 19
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1644
9999 mem: storing 1644 in location 1288
9999 mem: incrementing refcount of 1644: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 0
9999 mem: location 1646 is 0
9999 mem: location 1647 is 0
9999 mem: location 1286 is 10
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy to is 1645
9999 mem: storing 10 in location 1645
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1323
9999 mem: storing 1323 in location 1289
9999 mem: incrementing refcount of 1323: 16 -> 17
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1323
9999 mem: location 1322 is 1315
9999 mem: location 1288 is 1644
9999 mem: location 1287 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy to is 1321
9999 mem: storing 1644 in location 1321
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 0
9999 mem: location 1647 is 0
9999 mem: location 1287 is 1319
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy to is 1647
9999 mem: storing 1319 in location 1647
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 0
9999 mem: location 1647 is 1319
9999 mem: location 1289 is 1323
9999 mem: location 1288 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy to is 1646
9999 mem: storing 1323 in location 1646
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1289 is 1323
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1289 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1319
9999 mem: location 1288 is 1644
9999 mem: location 1289 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy to is 1326
9999 mem: storing 1644 in location 1326
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1287 is 1319
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1628 is 1254
9999 mem: location 1254 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1644
9999 mem: location 1628 is 1254
9999 mem: decrementing refcount of 1319: 20 -> 19
9999 mem: storing 1644 in location 1254
9999 mem: incrementing refcount of 1644: 2 -> 3
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1626 is 1258
9999 mem: location 1258 is 2
9999 mem: location 1626 is 1258
9999 mem: storing 3 in location 1258
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1629 is 0
9999 mem: location 1627 is 1259
9999 mem: storing 0 in location 1259
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {screen-height: "number"}
9999 mem: location 1626 is 1258
9999 mem: location 1258 is 3
9999 mem: location 1631 is 10
9999 mem: storing 0 in location 1632
 106 run: jump-unless {below-screen?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 30
 106 run: {indent?: "boolean"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1624 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1260
9998 run: its type is "boolean"
9999 mem: location 1260 is 0
9999 mem: storing 0 in location 1638
 106 run: jump-if {indent?: "boolean"}, {1: "offset"}
9999 mem: location 1638 is 0
9998 run: jump-if fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1624 is 1250
9999 mem: location 1625 is 1008
9999 mem: location 1637 is 0
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1250: 13 -> 12
9999 mem: storing 1250 in location 1517
9999 mem: incrementing refcount of 1250: 12 -> 13
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1569
9999 mem: incrementing refcount of 1269: 14 -> 15
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1579 is 1319
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 19 -> 20
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 3 -> 4
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1644
9999 mem: storing 1644 in location 1543
9999 mem: incrementing refcount of 1644: 4 -> 5
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1527 is 1254
9999 mem: location 1254 is 1644
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1644 in location 1297
9999 mem: incrementing refcount of 1644: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1644
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1646
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1646 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 17 -> 18
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1323
9999 mem: storing 1323 in location 1581
9999 mem: incrementing refcount of 1323: 18 -> 19
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1600
9999 mem: storing 1600 in location 1535
9999 mem: incrementing refcount of 1600: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {0: "literal", "never-coalesce": ()}
9999 mem: location 1583 is 2
9999 mem: location 1584 is 4
9999 mem: location 1567 is 1269
9999 mem: location 1528 is 1258
9999 mem: location 1258 is 3
9999 mem: location 1529 is 1259
9999 mem: location 1259 is 0
9999 mem: location 1569 is 1269
9999 mem: location 1543 is 1644
9999 mem: location 1581 is 1323
9999 mem: location 1535 is 1600
9999 mem: skipping refcount at 1600
9999 mem: location 1535 is 1600
9999 mem: skipping refcount at 1600
9999 mem: storing 0 in location 1601
9999 mem: storing 2 in location 1602
9999 mem: storing 4 in location 1603
9999 mem: storing 1269 in location 1604
9999 mem: storing 3 in location 1605
9999 mem: storing 0 in location 1606
9999 mem: storing 1269 in location 1607
9999 mem: storing 1644 in location 1608
9999 mem: storing 1323 in location 1609
9999 mem: storing 0 in location 1610
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1517 is 1250
9999 mem: location 1535 is 1600
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1283
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1286
9999 mem: incrementing refcount of 1250: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1600 in location 1287
9999 mem: incrementing refcount of 1600: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1510
9999 mem: location 1262 is 0
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1261
9999 mem: storing 1261 in location 1288
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1287 is 1600
9999 mem: location 1288 is 1261
9999 mem: location 1261 is 1510
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1600 in location 1266
9999 mem: incrementing refcount of 1600: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1510 in location 1267
9999 mem: incrementing refcount of 1510: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1648
9999 mem: storing 1648 in location 1268
9999 mem: incrementing refcount of 1648: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1266 is 1600
9999 mem: location 1267 is 1510
9999 mem: location 1268 is 1648
9999 mem: skipping refcount at 1648
9999 mem: location 1268 is 1648
9999 mem: skipping refcount at 1648
9999 mem: storing 1600 in location 1649
9999 mem: storing 1510 in location 1650
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1268 is 1648
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1648
9999 mem: location 1288 is 1261
9999 mem: decrementing refcount of 1510: 3 -> 2
9999 mem: storing 1648 in location 1261
9999 mem: incrementing refcount of 1648: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1286 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1262
9999 mem: storing 1262 in location 1289
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1289 is 1262
9999 mem: storing 0 in location 1262
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1286 is 1250
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1250: 14 -> 13
9999 mem: storing 1250 in location 1517
9999 mem: incrementing refcount of 1250: 13 -> 14
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1522
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1516 is 1008
9999 mem: location 1517 is 1250
9999 mem: location 1522 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1250
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 162 -> 163
9999 mem: decrementing refcount of 1250: 14 -> 13
9999 mem: storing 1250 in location 1428
9999 mem: incrementing refcount of 1250: 13 -> 14
9999 mem: storing 1 in location 1438
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1216
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 163 -> 164
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1220
9999 mem: incrementing refcount of 1250: 14 -> 15
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1221
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1222
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 164 -> 165
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1339
9999 mem: incrementing refcount of 1250: 15 -> 16
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1250
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1340
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 107 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1342
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1343
9999 mem: incrementing refcount of 1269: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 mem: storing 1269 in location 1344
9999 mem: incrementing refcount of 1269: 16 -> 17
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 18 -> 17
9999 mem: storing 1290 in location 1343
9999 mem: incrementing refcount of 1290: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1345
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1348
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1349
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1350
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 166 -> 167
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 97
9999 mem: storing 97 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1651
9999 mem: storing 10 in location 1652
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 97
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 97
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 97
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 167 -> 168
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 0
9999 mem: storing 10 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 114 -> 115
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 10
9999 mem: storing 1036 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 97
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1036
9999 mem: location 1399 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 19 -> 18
9999 mem: storing 1299 in location 1343
9999 mem: incrementing refcount of 1299: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 18 -> 17
9999 mem: storing 1290 in location 1344
9999 mem: incrementing refcount of 1290: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1299
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9998 run: its type is "character"
9999 mem: location 1300 is 98
9999 mem: storing 98 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 98
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 98
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 98
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 1
9999 mem: storing 11 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 115 -> 116
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 11
9999 mem: storing 1038 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 98
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1038
9999 mem: location 1399 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 19 -> 18
9999 mem: storing 1303 in location 1343
9999 mem: incrementing refcount of 1303: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 21 -> 20
9999 mem: storing 1299 in location 1344
9999 mem: incrementing refcount of 1299: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1303
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "character"
9999 mem: location 1304 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 170 -> 171
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 2
9999 mem: storing 12 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 116 -> 117
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 12
9999 mem: storing 1040 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1040
9999 mem: location 1399 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 170 -> 171
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 171 -> 172
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 3
9999 mem: storing 13 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 117 -> 118
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 13
9999 mem: storing 1042 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1042
9999 mem: location 1399 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 171 -> 172
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 172 -> 173
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 4
9999 mem: storing 14 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 118 -> 119
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 14
9999 mem: storing 1044 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1044
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 172 -> 173
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 173 -> 174
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 5
9999 mem: storing 15 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 119 -> 120
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 15
9999 mem: storing 1046 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1046
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 174 -> 173
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 173 -> 174
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 174 -> 175
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 6
9999 mem: storing 16 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 120 -> 121
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 16
9999 mem: storing 1048 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1048
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 175 -> 174
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 174 -> 175
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 175 -> 176
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 7
9999 mem: storing 17 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 121 -> 122
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 17
9999 mem: storing 1050 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1050
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 176 -> 175
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 175 -> 176
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 176 -> 177
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 8
9999 mem: storing 18 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 122 -> 123
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 18
9999 mem: storing 1052 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1052
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 177 -> 176
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 176 -> 177
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 177 -> 178
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 9
9999 mem: storing 19 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 123 -> 124
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 19
9999 mem: storing 1054 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1054
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 178 -> 177
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 177 -> 178
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 1
9999 mem: storing 2 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 2
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 178 -> 179
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 179 -> 178
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 178 -> 179
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 19 -> 18
9999 mem: storing 1307 in location 1343
9999 mem: incrementing refcount of 1307: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 21 -> 20
9999 mem: storing 1303 in location 1344
9999 mem: incrementing refcount of 1303: 19 -> 20
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1307
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1308
9998 run: its type is "character"
9999 mem: location 1308 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 179 -> 180
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 0
9999 mem: storing 20 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 124 -> 125
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 20
9999 mem: storing 1056 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1056
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 19 -> 18
9999 mem: storing 1311 in location 1343
9999 mem: incrementing refcount of 1311: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 21 -> 20
9999 mem: storing 1307 in location 1344
9999 mem: incrementing refcount of 1307: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1311
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "character"
9999 mem: location 1312 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 180 -> 181
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 1
9999 mem: storing 21 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 125 -> 126
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 21
9999 mem: storing 1058 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1058
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 19 -> 18
9999 mem: storing 1315 in location 1343
9999 mem: incrementing refcount of 1315: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 21 -> 20
9999 mem: storing 1311 in location 1344
9999 mem: incrementing refcount of 1311: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1315
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9998 run: its type is "character"
9999 mem: location 1316 is 99
9999 mem: storing 99 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 99
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 99
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 99
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 181 -> 182
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 2
9999 mem: storing 22 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 126 -> 127
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 22
9999 mem: storing 1060 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 99
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1060
9999 mem: location 1399 is 1060
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 19 -> 18
9999 mem: storing 1319 in location 1343
9999 mem: incrementing refcount of 1319: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 21 -> 20
9999 mem: storing 1315 in location 1344
9999 mem: incrementing refcount of 1315: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 2
9999 mem: storing 3 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1319
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9998 run: its type is "character"
9999 mem: location 1320 is 100
9999 mem: storing 100 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 100
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 100
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 3
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 100
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 182 -> 183
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 3
9999 mem: storing 23 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 127 -> 128
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 23
9999 mem: storing 1062 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 100
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1062
9999 mem: location 1399 is 1062
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1644
9999 mem: decrementing refcount of 1319: 23 -> 22
9999 mem: storing 1644 in location 1343
9999 mem: incrementing refcount of 1644: 7 -> 8
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 21 -> 20
9999 mem: storing 1319 in location 1344
9999 mem: incrementing refcount of 1319: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 3
9999 mem: storing 4 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1644
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1343 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1645
9998 run: its type is "character"
9999 mem: location 1645 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 4
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 183 -> 184
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 184 -> 185
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 4
9999 mem: storing 24 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 128 -> 129
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 24
9999 mem: storing 1064 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1064
9999 mem: location 1399 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 185 -> 184
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 184 -> 185
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 185 -> 186
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 5
9999 mem: storing 25 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 129 -> 130
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 25
9999 mem: storing 1066 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1066
9999 mem: location 1399 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 186 -> 185
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 185 -> 186
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 186 -> 187
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 6
9999 mem: storing 26 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 130 -> 131
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 26
9999 mem: storing 1068 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1068
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 187 -> 186
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 186 -> 187
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 187 -> 188
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 7
9999 mem: storing 27 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 131 -> 132
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 27
9999 mem: storing 1070 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1070
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 188 -> 187
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 187 -> 188
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 188 -> 189
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 8
9999 mem: storing 28 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 132 -> 133
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 28
9999 mem: storing 1072 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1072
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 189 -> 188
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 188 -> 189
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 189 -> 190
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 9
9999 mem: storing 29 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 133 -> 134
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 29
9999 mem: storing 1074 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1074
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 190 -> 189
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 189 -> 190
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 2
9999 mem: storing 3 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 3
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 190 -> 191
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 191 -> 190
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 190 -> 191
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1644
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1644 in location 1297
9999 mem: incrementing refcount of 1644: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1644
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1646
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1646 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1644: 9 -> 8
9999 mem: storing 1323 in location 1343
9999 mem: incrementing refcount of 1323: 20 -> 21
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1644
9999 mem: decrementing refcount of 1319: 25 -> 24
9999 mem: storing 1644 in location 1344
9999 mem: incrementing refcount of 1644: 9 -> 10
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1323
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1644
9999 mem: location 1350 is 1254
9999 mem: decrementing refcount of 1644: 10 -> 9
9999 mem: storing 1644 in location 1254
9999 mem: incrementing refcount of 1644: 9 -> 10
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1324
9998 run: its type is "character"
9999 mem: location 1324 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1356
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 191 -> 192
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 192 -> 193
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 0
9999 mem: storing 30 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 134 -> 135
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 30
9999 mem: storing 1076 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1076
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 193 -> 192
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 192 -> 193
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 193 -> 194
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 1
9999 mem: storing 31 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 135 -> 136
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 31
9999 mem: storing 1078 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1078
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 194 -> 193
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 193 -> 194
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 194 -> 195
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 2
9999 mem: storing 32 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 136 -> 137
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 32
9999 mem: storing 1080 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1080
9999 mem: location 1399 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 195 -> 194
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 194 -> 195
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 195 -> 196
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 3
9999 mem: storing 33 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 137 -> 138
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 33
9999 mem: storing 1082 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1082
9999 mem: location 1399 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 196 -> 195
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 195 -> 196
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 196 -> 197
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 4
9999 mem: storing 34 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 138 -> 139
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 34
9999 mem: storing 1084 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1084
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 197 -> 196
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 196 -> 197
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 197 -> 198
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 5
9999 mem: storing 35 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 139 -> 140
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 35
9999 mem: storing 1086 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1086
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 198 -> 197
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 197 -> 198
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 198 -> 199
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 6
9999 mem: storing 36 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 140 -> 141
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 36
9999 mem: storing 1088 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1088
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 199 -> 198
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 198 -> 199
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 199 -> 200
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 7
9999 mem: storing 37 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 141 -> 142
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 37
9999 mem: storing 1090 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1090
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 200 -> 199
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 199 -> 200
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 200 -> 201
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 8
9999 mem: storing 38 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 142 -> 143
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 38
9999 mem: storing 1092 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1092
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 201 -> 200
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 200 -> 201
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 201 -> 202
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 9
9999 mem: storing 39 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 143 -> 144
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 39
9999 mem: storing 1094 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1094
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 202 -> 201
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 201 -> 202
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 3
9999 mem: storing 4 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 4
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 202 -> 203
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 4
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 203 -> 202
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 202 -> 203
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 22 -> 21
9999 mem: storing 1327 in location 1343
9999 mem: incrementing refcount of 1327: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1644
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1644 in location 1297
9999 mem: incrementing refcount of 1644: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1644
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1646
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1646 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1644: 11 -> 10
9999 mem: storing 1323 in location 1344
9999 mem: incrementing refcount of 1323: 22 -> 23
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1327
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1328
9998 run: its type is "character"
9999 mem: location 1328 is 101
9999 mem: storing 101 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 101
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 101
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 101
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 203 -> 204
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 0
9999 mem: storing 40 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 144 -> 145
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 40
9999 mem: storing 1096 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 101
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1096
9999 mem: location 1399 is 1096
9999 mem: storing 101 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 19 -> 18
9999 mem: storing 1331 in location 1343
9999 mem: incrementing refcount of 1331: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 24 -> 23
9999 mem: storing 1327 in location 1344
9999 mem: incrementing refcount of 1327: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1331
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "character"
9999 mem: location 1332 is 102
9999 mem: storing 102 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 102
9999 mem: storing 0 in location 1657
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 102
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 102
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 204 -> 205
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 1
9999 mem: storing 41 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 145 -> 146
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 41
9999 mem: storing 1098 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 102
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1098
9999 mem: location 1399 is 1098
9999 mem: storing 102 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1331
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1297
9999 mem: incrementing refcount of 1331: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1331
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1298
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1331: 18 -> 17
9999 mem: storing 0 in location 1343
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 21 -> 20
9999 mem: storing 1331 in location 1344
9999 mem: incrementing refcount of 1331: 18 -> 19
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1253
9999 mem: storing 1253 in location 1359
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 0
9999 mem: location 1359 is 1253
9999 mem: storing 0 in location 1253
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1360
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1352 is 0
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1361
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1362
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: storing 0 in location 1363
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 3
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1257
9999 mem: storing 1257 in location 1364
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1364 is 1257
9999 mem: storing 4 in location 1257
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1346 is 4
9999 mem: location 1347 is 2
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1250
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1223
9999 mem: storing 2 in location 1224
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1224 is 2
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 205 -> 206
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 206 -> 207
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 2
9999 mem: storing 42 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 146 -> 147
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 42
9999 mem: storing 1100 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1100
9999 mem: location 1399 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 207 -> 206
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 206 -> 207
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 207 -> 208
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 3
9999 mem: storing 43 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 147 -> 148
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 43
9999 mem: storing 1102 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1102
9999 mem: location 1399 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 208 -> 207
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 207 -> 208
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 208 -> 209
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 4
9999 mem: storing 44 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 148 -> 149
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 44
9999 mem: storing 1104 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1104
9999 mem: location 1399 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 209 -> 208
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 208 -> 209
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 209 -> 210
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 5
9999 mem: storing 45 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 149 -> 150
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 45
9999 mem: storing 1106 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1106
9999 mem: location 1399 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 210 -> 209
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 209 -> 210
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 210 -> 211
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 6
9999 mem: storing 46 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 150 -> 151
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 46
9999 mem: storing 1108 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1108
9999 mem: location 1399 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 211 -> 210
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 210 -> 211
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 211 -> 212
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 7
9999 mem: storing 47 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 151 -> 152
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 47
9999 mem: storing 1110 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1110
9999 mem: location 1399 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 212 -> 211
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 211 -> 212
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 212 -> 213
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 8
9999 mem: storing 48 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 152 -> 153
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 48
9999 mem: storing 1112 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1112
9999 mem: location 1399 is 1112
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 212 -> 213
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 213 -> 214
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 9
9999 mem: storing 49 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 153 -> 154
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 49
9999 mem: storing 1114 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1114
9999 mem: location 1399 is 1114
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 214 -> 213
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 213 -> 214
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 4
9999 mem: storing 5 in location 1223
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 5
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 214 -> 215
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1443
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1444
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1445
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1446
9999 mem: storing 1 in location 1447
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1448
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1450
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1443 is 5
9999 mem: location 1444 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 215 -> 216
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 5
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 216 -> 215
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 215 -> 216
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 216 -> 217
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 0
9999 mem: storing 50 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 154 -> 155
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 50
9999 mem: storing 1116 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1116
9999 mem: location 1399 is 1116
9999 mem: storing 9480 in location 1116
9999 mem: storing 245 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 0
9999 mem: storing 1 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 1
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 217 -> 218
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 1
9999 mem: storing 51 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 155 -> 156
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 51
9999 mem: storing 1118 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1118
9999 mem: location 1399 is 1118
9999 mem: storing 9480 in location 1118
9999 mem: storing 245 in location 1119
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 1
9999 mem: storing 2 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 2
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 218 -> 219
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 2
9999 mem: storing 52 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 156 -> 157
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 52
9999 mem: storing 1120 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1120
9999 mem: location 1399 is 1120
9999 mem: storing 9480 in location 1120
9999 mem: storing 245 in location 1121
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 2
9999 mem: storing 3 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 3
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 219 -> 220
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 3
9999 mem: storing 53 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 157 -> 158
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 53
9999 mem: storing 1122 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1122
9999 mem: location 1399 is 1122
9999 mem: storing 9480 in location 1122
9999 mem: storing 245 in location 1123
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 3
9999 mem: storing 4 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 4
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 220 -> 221
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 4
9999 mem: storing 54 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 158 -> 159
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 54
9999 mem: storing 1124 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1124
9999 mem: location 1399 is 1124
9999 mem: storing 9480 in location 1124
9999 mem: storing 245 in location 1125
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 4
9999 mem: storing 5 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 5
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 221 -> 222
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 5
9999 mem: storing 55 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 159 -> 160
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 55
9999 mem: storing 1126 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1126
9999 mem: location 1399 is 1126
9999 mem: storing 9480 in location 1126
9999 mem: storing 245 in location 1127
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 5
9999 mem: storing 6 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 6
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 222 -> 223
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 6
9999 mem: storing 56 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 160 -> 161
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 56
9999 mem: storing 1128 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1128
9999 mem: location 1399 is 1128
9999 mem: storing 9480 in location 1128
9999 mem: storing 245 in location 1129
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 6
9999 mem: storing 7 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 7
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 223 -> 224
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 7
9999 mem: storing 57 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 161 -> 162
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 57
9999 mem: storing 1130 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1130
9999 mem: location 1399 is 1130
9999 mem: storing 9480 in location 1130
9999 mem: storing 245 in location 1131
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 7
9999 mem: storing 8 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 8
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 224 -> 225
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 8
9999 mem: storing 58 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 162 -> 163
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 58
9999 mem: storing 1132 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1132
9999 mem: location 1399 is 1132
9999 mem: storing 9480 in location 1132
9999 mem: storing 245 in location 1133
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 8
9999 mem: storing 9 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 9
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 225 -> 226
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 9
9999 mem: storing 59 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 163 -> 164
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 59
9999 mem: storing 1134 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1134
9999 mem: location 1399 is 1134
9999 mem: storing 9480 in location 1134
9999 mem: storing 245 in location 1135
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 9
9999 mem: storing 10 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 10
9999 mem: location 1445 is 9
9999 mem: storing 0 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1442 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 5
9999 mem: storing 6 in location 1223
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 6
9999 mem: location 1221 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 226 -> 227
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 227 -> 228
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 6
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 228 -> 227
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 227 -> 228
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 228 -> 229
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 229 -> 230
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 0
9999 mem: storing 60 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 164 -> 165
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 60
9999 mem: storing 1136 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1136
9999 mem: location 1399 is 1136
9999 mem: storing 32 in location 1136
9999 mem: storing 7 in location 1137
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 230 -> 229
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 229 -> 230
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 230 -> 231
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 1
9999 mem: storing 61 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 165 -> 166
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 61
9999 mem: storing 1138 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1138
9999 mem: location 1399 is 1138
9999 mem: storing 32 in location 1138
9999 mem: storing 7 in location 1139
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 231 -> 230
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 230 -> 231
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 231 -> 232
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 2
9999 mem: storing 62 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 166 -> 167
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 62
9999 mem: storing 1140 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1140
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
9999 mem: storing 7 in location 1141
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 232 -> 231
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 231 -> 232
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 232 -> 233
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 3
9999 mem: storing 63 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 167 -> 168
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 63
9999 mem: storing 1142 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1142
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
9999 mem: storing 7 in location 1143
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 233 -> 232
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 232 -> 233
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 233 -> 234
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 4
9999 mem: storing 64 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 168 -> 169
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 64
9999 mem: storing 1144 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1144
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
9999 mem: storing 7 in location 1145
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 234 -> 233
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 233 -> 234
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 234 -> 235
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 5
9999 mem: storing 65 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 169 -> 170
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 65
9999 mem: storing 1146 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1146
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
9999 mem: storing 7 in location 1147
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 235 -> 234
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 234 -> 235
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 235 -> 236
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 6
9999 mem: storing 66 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 170 -> 171
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 66
9999 mem: storing 1148 in location 1399
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1148
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
9999 mem: storing 7 in location 1149
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 236 -> 235
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 235 -> 236
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 236 -> 237
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 7
9999 mem: storing 67 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 171 -> 172
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 67
9999 mem: storing 1150 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1150
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
9999 mem: storing 7 in location 1151
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 237 -> 236
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 236 -> 237
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 237 -> 238
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 8
9999 mem: storing 68 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 172 -> 173
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 68
9999 mem: storing 1152 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1152
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
9999 mem: storing 7 in location 1153
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 238 -> 237
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 237 -> 238
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 238 -> 239
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 9
9999 mem: storing 69 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 173 -> 174
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 69
9999 mem: storing 1154 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1154
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
9999 mem: storing 7 in location 1155
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 239 -> 238
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 238 -> 239
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1612
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 239 -> 240
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1616
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1617
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1618
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 6
9999 mem: storing 7 in location 1616
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 7
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 240 -> 241
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 7
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 241 -> 240
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 240 -> 241
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1615 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 241 -> 242
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 108 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1619
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 7
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 7
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 242 -> 243
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 7
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 243 -> 242
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 242 -> 243
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 243 -> 244
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 244 -> 245
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 0
9999 mem: storing 70 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 174 -> 175
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 70
9999 mem: storing 1156 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1156
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
9999 mem: storing 7 in location 1157
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 245 -> 244
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 244 -> 245
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 245 -> 246
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 1
9999 mem: storing 71 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 175 -> 176
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 71
9999 mem: storing 1158 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1158
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
9999 mem: storing 7 in location 1159
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 246 -> 245
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 245 -> 246
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 246 -> 247
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 2
9999 mem: storing 72 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 176 -> 177
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 72
9999 mem: storing 1160 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1160
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
9999 mem: storing 7 in location 1161
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 247 -> 246
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 246 -> 247
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 247 -> 248
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 3
9999 mem: storing 73 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 177 -> 178
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 73
9999 mem: storing 1162 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1162
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
9999 mem: storing 7 in location 1163
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 248 -> 247
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 247 -> 248
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 248 -> 249
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 4
9999 mem: storing 74 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 178 -> 179
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 74
9999 mem: storing 1164 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1164
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
9999 mem: storing 7 in location 1165
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 249 -> 248
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 248 -> 249
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 249 -> 250
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 5
9999 mem: storing 75 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 179 -> 180
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 75
9999 mem: storing 1166 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1166
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
9999 mem: storing 7 in location 1167
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 250 -> 249
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 249 -> 250
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 250 -> 251
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 6
9999 mem: storing 76 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 180 -> 181
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 76
9999 mem: storing 1168 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1168
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
9999 mem: storing 7 in location 1169
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 251 -> 250
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 250 -> 251
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 251 -> 252
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 7
9999 mem: storing 77 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 181 -> 182
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 77
9999 mem: storing 1170 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1170
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
9999 mem: storing 7 in location 1171
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 252 -> 251
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 251 -> 252
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 252 -> 253
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 8
9999 mem: storing 78 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 182 -> 183
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 78
9999 mem: storing 1172 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1172
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
9999 mem: storing 7 in location 1173
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 253 -> 252
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 252 -> 253
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 253 -> 254
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 9
9999 mem: storing 79 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 183 -> 184
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 79
9999 mem: storing 1174 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1174
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
9999 mem: storing 7 in location 1175
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 254 -> 253
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 253 -> 254
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 7
9999 mem: storing 8 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 8
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 8
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 254 -> 255
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 8
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 255 -> 254
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 254 -> 255
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 255 -> 256
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 256 -> 257
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 0
9999 mem: storing 80 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 184 -> 185
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 80
9999 mem: storing 1176 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1176
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
9999 mem: storing 7 in location 1177
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 257 -> 256
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 256 -> 257
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 257 -> 258
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 1
9999 mem: storing 81 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 185 -> 186
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 81
9999 mem: storing 1178 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1178
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
9999 mem: storing 7 in location 1179
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 258 -> 257
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 257 -> 258
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 258 -> 259
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 2
9999 mem: storing 82 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 186 -> 187
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 82
9999 mem: storing 1180 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1180
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
9999 mem: storing 7 in location 1181
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 259 -> 258
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 258 -> 259
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 259 -> 260
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 3
9999 mem: storing 83 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 187 -> 188
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 83
9999 mem: storing 1182 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1182
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
9999 mem: storing 7 in location 1183
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 260 -> 259
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 259 -> 260
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 260 -> 261
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 4
9999 mem: storing 84 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 188 -> 189
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 84
9999 mem: storing 1184 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1184
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
9999 mem: storing 7 in location 1185
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 261 -> 260
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 260 -> 261
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 261 -> 262
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 5
9999 mem: storing 85 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 189 -> 190
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 85
9999 mem: storing 1186 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1186
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
9999 mem: storing 7 in location 1187
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 262 -> 261
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 261 -> 262
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 262 -> 263
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 6
9999 mem: storing 86 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 190 -> 191
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 86
9999 mem: storing 1188 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1188
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
9999 mem: storing 7 in location 1189
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 263 -> 262
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 262 -> 263
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 263 -> 264
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 7
9999 mem: storing 87 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 191 -> 192
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 87
9999 mem: storing 1190 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1190
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
9999 mem: storing 7 in location 1191
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 264 -> 263
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 263 -> 264
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 264 -> 265
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 8
9999 mem: storing 88 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 192 -> 193
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 88
9999 mem: storing 1192 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1192
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
9999 mem: storing 7 in location 1193
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 265 -> 264
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 264 -> 265
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 265 -> 266
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 9
9999 mem: storing 89 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 193 -> 194
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 89
9999 mem: storing 1194 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1194
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
9999 mem: storing 7 in location 1195
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 266 -> 265
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 265 -> 266
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 8
9999 mem: storing 9 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 9
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 9
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 266 -> 267
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 9
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 267 -> 266
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 266 -> 267
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 267 -> 268
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 268 -> 269
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 0
9999 mem: storing 90 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 194 -> 195
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 90
9999 mem: storing 1196 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1196
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
9999 mem: storing 7 in location 1197
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 269 -> 268
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 268 -> 269
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 269 -> 270
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 1
9999 mem: storing 91 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 195 -> 196
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 91
9999 mem: storing 1198 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1198
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
9999 mem: storing 7 in location 1199
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 270 -> 269
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 269 -> 270
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 270 -> 271
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 2
9999 mem: storing 92 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 196 -> 197
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 92
9999 mem: storing 1200 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1200
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
9999 mem: storing 7 in location 1201
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 271 -> 270
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 270 -> 271
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 271 -> 272
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 3
9999 mem: storing 93 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 197 -> 198
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 93
9999 mem: storing 1202 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1202
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
9999 mem: storing 7 in location 1203
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 272 -> 271
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 271 -> 272
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 272 -> 273
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 4
9999 mem: storing 94 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 198 -> 199
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 94
9999 mem: storing 1204 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1204
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
9999 mem: storing 7 in location 1205
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 273 -> 272
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 272 -> 273
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 273 -> 274
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 5
9999 mem: storing 95 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 199 -> 200
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 95
9999 mem: storing 1206 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1206
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
9999 mem: storing 7 in location 1207
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 274 -> 273
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 273 -> 274
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 274 -> 275
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 6
9999 mem: storing 96 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 200 -> 201
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 96
9999 mem: storing 1208 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1208
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
9999 mem: storing 7 in location 1209
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 275 -> 274
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 274 -> 275
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 275 -> 276
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 7
9999 mem: storing 97 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 201 -> 202
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 97
9999 mem: storing 1210 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1210
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
9999 mem: storing 7 in location 1211
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 276 -> 275
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 275 -> 276
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 276 -> 277
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 8
9999 mem: storing 98 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 202 -> 203
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 98
9999 mem: storing 1212 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1212
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
9999 mem: storing 7 in location 1213
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 277 -> 276
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 276 -> 277
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 277 -> 278
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 9
9999 mem: storing 99 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 203 -> 204
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 99
9999 mem: storing 1214 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1214
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
9999 mem: storing 7 in location 1215
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 278 -> 277
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 277 -> 278
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 9
9999 mem: storing 10 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 10
9999 mem: location 1619 is 10
9999 mem: storing 1 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1615 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 278 -> 277
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 277 -> 278
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 3
9999 mem: storing 3 in location 1429
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1426 is 1008
9999 mem: location 1429 is 3
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 278 -> 279
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 279 -> 278
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 278 -> 279
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1427 is 1420
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1442
9999 mem: incrementing refcount of 1420: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1442 is 1420
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 3
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1421
9998 run: its type is "number"
9999 mem: location 1421 is 3
9999 mem: storing 3 in location 1443
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 3
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1422 is 1402
9999 mem: storing 1402 in location 1444
9999 mem: incrementing refcount of 1402: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 4 in location 1445
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1443 is 3
9999 mem: location 1445 is 4
9999 mem: storing 0 in location 1446
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9998 run: base address is 1403
9999 mem: location 1443 is 3
9998 run: address to copy is 1416
9998 run: its type is event
9999 mem: location 1416 is 1
9999 mem: location 1417 is 65506
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: storing 1 in location 1448
9999 mem: storing 65506 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1443 is 3
9999 mem: storing 4 in location 1443
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 3
9999 mem: location 1422 is 1402
9999 mem: location 1443 is 4
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy to is 1421
9999 mem: storing 4 in location 1421
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1448 is 1
9999 mem: location 1449 is 65506
9999 mem: location 1450 is 0
9999 mem: location 1451 is 0
9999 mem: location 1442 is 1420
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65506, 0, 0]
9998 run: result 1 is 1420
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1431
9999 mem: storing 65506 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: decrementing refcount of 1420: 5 -> 4
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 4 -> 5
9999 mem: storing 1 in location 1435
9999 mem: storing 0 in location 1436
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1431 is 1
9999 mem: location 1432 is 65506
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: storing 0 in location 1437
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 mem: location 1431 is 1
9999 mem: location 1432 is 65506
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1513
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1516
9999 mem: incrementing refcount of 1008: 279 -> 280
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1517
9999 mem: incrementing refcount of 1250: 16 -> 17
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1518
9999 mem: storing 65506 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 0 in location 1521
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1522
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1517 is 1250
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 280 -> 281
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1298
 106 run: return {width: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1523
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1516 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 281 -> 282
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 106 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1524
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1525
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1526
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1527
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1528
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1529
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1528 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 3 in location 1530
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1531
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1518 is 1
9999 mem: location 1519 is 65506
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: storing 0 in location 1532
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1532 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1518 is 1
9999 mem: location 1519 is 65506
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: storing 1519 in location 1586
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1586 is 1519
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1549
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1549 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1565
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1565 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1572
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1573
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1573 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1587
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1588
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1589
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1591
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1591 is 0
9998 run: jumping to instruction 757
 105 run: {delete-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65522: "literal", "delete": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 0 in location 1593
 105 run: jump-unless {delete-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1593 is 0
9998 run: jumping to instruction 796
 105 run: {paste-end?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65506: "literal", "paste-end": ()}
9999 mem: location 1586 is 1519
9999 mem: location 1519 is 65506
9999 mem: storing 1 in location 1597
 105 run: jump-unless {paste-end?: "boolean"}, {: "offset"}
9999 mem: location 1597 is 1
9998 run: jump-unless fell through
 105 run: {indent?: ("address" "boolean")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1517 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1260
9999 mem: storing 1260 in location 1598
 105 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1598 is 1260
9999 mem: storing 1 in location 1260
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1522
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1516 is 1008
9999 mem: location 1517 is 1250
9999 mem: location 1522 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1250
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 282 -> 281
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 281 -> 282
9999 mem: decrementing refcount of 1250: 17 -> 16
9999 mem: storing 1250 in location 1428
9999 mem: incrementing refcount of 1250: 16 -> 17
9999 mem: storing 1 in location 1438
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1426 is 1008
9999 mem: location 1428 is 1250
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1216
9990 schedule: editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1219
9999 mem: incrementing refcount of 1008: 282 -> 283
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1220
9999 mem: incrementing refcount of 1250: 17 -> 18
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1221
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1220 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1222
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1335
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 283 -> 284
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1339
9999 mem: incrementing refcount of 1250: 18 -> 19
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1250
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1255
9998 run: its type is "number"
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1340
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 284 -> 285
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 107 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1256
9998 run: its type is "number"
9999 mem: location 1256 is 9
9999 mem: storing 9 in location 1342
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1269
9999 mem: storing 1269 in location 1343
9999 mem: incrementing refcount of 1269: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 mem: storing 1269 in location 1344
9999 mem: incrementing refcount of 1269: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 20 -> 19
9999 mem: storing 1290 in location 1343
9999 mem: incrementing refcount of 1290: 21 -> 22
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1345
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9999 mem: storing 1258 in location 1348
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9999 mem: storing 1259 in location 1349
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1254
9999 mem: storing 1254 in location 1350
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 285 -> 286
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 1
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 286 -> 285
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 285 -> 286
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1343 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 97
9999 mem: storing 97 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 97
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 97
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 97
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 97
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 286 -> 287
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 0
9999 mem: storing 10 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 204 -> 205
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 97
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 10
9999 mem: storing 1036 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 97
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1036
9999 mem: location 1399 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 23 -> 22
9999 mem: storing 1299 in location 1343
9999 mem: incrementing refcount of 1299: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1297
9999 mem: incrementing refcount of 1269: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 167
9999 mem: location 1271 is 1290
9999 mem: location 1272 is 0
9999 mem: location 1297 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1290
9999 mem: storing 1290 in location 1298
9999 mem: incrementing refcount of 1290: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1269: 20 -> 19
9999 mem: storing 1290 in location 1344
9999 mem: incrementing refcount of 1290: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1299
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1343 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9998 run: its type is "character"
9999 mem: location 1300 is 98
9999 mem: storing 98 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 98
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 98
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 98
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 98
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 287 -> 288
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 1
9999 mem: storing 11 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 205 -> 206
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 98
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 11
9999 mem: storing 1038 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 98
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1038
9999 mem: location 1399 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 23 -> 22
9999 mem: storing 1303 in location 1343
9999 mem: incrementing refcount of 1303: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1297
9999 mem: incrementing refcount of 1290: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 97
9999 mem: location 1292 is 1299
9999 mem: location 1293 is 1269
9999 mem: location 1297 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1299
9999 mem: storing 1299 in location 1298
9999 mem: incrementing refcount of 1299: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1299
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1299
9999 mem: decrementing refcount of 1290: 25 -> 24
9999 mem: storing 1299 in location 1344
9999 mem: incrementing refcount of 1299: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1303
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1343 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1304
9998 run: its type is "character"
9999 mem: location 1304 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 288 -> 289
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 289 -> 290
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 2
9999 mem: storing 12 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 206 -> 207
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 12
9999 mem: storing 1040 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1040
9999 mem: location 1399 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 290 -> 289
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 289 -> 290
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 290 -> 291
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 3
9999 mem: storing 13 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 207 -> 208
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 13
9999 mem: storing 1042 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1042
9999 mem: location 1399 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 291 -> 290
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 290 -> 291
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 291 -> 292
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 4
9999 mem: storing 14 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 208 -> 209
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 14
9999 mem: storing 1044 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1044
9999 mem: location 1399 is 1044
9999 mem: storing 32 in location 1044
9999 mem: storing 7 in location 1045
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 292 -> 291
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 291 -> 292
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 292 -> 293
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 5
9999 mem: storing 15 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 209 -> 210
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 15
9999 mem: storing 1046 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1046
9999 mem: location 1399 is 1046
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 293 -> 292
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 292 -> 293
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 293 -> 294
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 6
9999 mem: storing 16 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 210 -> 211
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 16
9999 mem: storing 1048 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1048
9999 mem: location 1399 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 294 -> 293
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 293 -> 294
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 294 -> 295
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 7
9999 mem: storing 17 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 211 -> 212
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 17
9999 mem: storing 1050 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1050
9999 mem: location 1399 is 1050
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 295 -> 294
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 294 -> 295
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 295 -> 296
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 8
9999 mem: storing 18 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 212 -> 213
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 18
9999 mem: storing 1052 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1052
9999 mem: location 1399 is 1052
9999 mem: storing 32 in location 1052
9999 mem: storing 7 in location 1053
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 296 -> 295
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 295 -> 296
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 296 -> 297
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 1
9999 mem: location 1386 is 10
9999 mem: storing 10 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 10
9999 mem: location 1390 is 9
9999 mem: storing 19 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 213 -> 214
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 19
9999 mem: storing 1054 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1054
9999 mem: location 1399 is 1054
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 297 -> 296
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 296 -> 297
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 1
9999 mem: storing 2 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 2
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 297 -> 298
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 2
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 298 -> 297
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 297 -> 298
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 23 -> 22
9999 mem: storing 1307 in location 1343
9999 mem: incrementing refcount of 1307: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1299
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1297
9999 mem: incrementing refcount of 1299: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1299
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 98
9999 mem: location 1301 is 1303
9999 mem: location 1302 is 1290
9999 mem: location 1297 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1301 is 1303
9999 mem: storing 1303 in location 1298
9999 mem: incrementing refcount of 1303: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1303
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1303
9999 mem: decrementing refcount of 1299: 25 -> 24
9999 mem: storing 1303 in location 1344
9999 mem: incrementing refcount of 1303: 23 -> 24
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1307
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1343 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1308
9998 run: its type is "character"
9999 mem: location 1308 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 298 -> 299
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 0
9999 mem: storing 20 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 214 -> 215
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 20
9999 mem: storing 1056 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1056
9999 mem: location 1399 is 1056
9999 mem: storing 32 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 23 -> 22
9999 mem: storing 1311 in location 1343
9999 mem: incrementing refcount of 1311: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1303
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1303 in location 1297
9999 mem: incrementing refcount of 1303: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1303
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9999 mem: location 1304 is 10
9999 mem: location 1305 is 1307
9999 mem: location 1306 is 1299
9999 mem: location 1297 is 1303
9999 mem: skipping refcount at 1303
9998 run: address to copy is 1305
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1305 is 1307
9999 mem: storing 1307 in location 1298
9999 mem: incrementing refcount of 1307: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1307
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1307
9999 mem: decrementing refcount of 1303: 25 -> 24
9999 mem: storing 1307 in location 1344
9999 mem: incrementing refcount of 1307: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1311
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1343 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1312
9998 run: its type is "character"
9999 mem: location 1312 is 32
9999 mem: storing 32 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 32
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 32
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 32
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 299 -> 300
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 1
9999 mem: storing 21 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 215 -> 216
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 21
9999 mem: storing 1058 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1058
9999 mem: location 1399 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 23 -> 22
9999 mem: storing 1315 in location 1343
9999 mem: incrementing refcount of 1315: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1307
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1307 in location 1297
9999 mem: incrementing refcount of 1307: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1307
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9999 mem: location 1308 is 32
9999 mem: location 1309 is 1311
9999 mem: location 1310 is 1303
9999 mem: location 1297 is 1307
9999 mem: skipping refcount at 1307
9998 run: address to copy is 1309
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1309 is 1311
9999 mem: storing 1311 in location 1298
9999 mem: incrementing refcount of 1311: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1311
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1311
9999 mem: decrementing refcount of 1307: 25 -> 24
9999 mem: storing 1311 in location 1344
9999 mem: incrementing refcount of 1311: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1315
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1343 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9998 run: its type is "character"
9999 mem: location 1316 is 99
9999 mem: storing 99 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 99
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 99
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 99
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 2
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 99
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 300 -> 301
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 2
9999 mem: storing 22 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 216 -> 217
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 99
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 22
9999 mem: storing 1060 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 99
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1060
9999 mem: location 1399 is 1060
9999 mem: storing 99 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 23 -> 22
9999 mem: storing 1319 in location 1343
9999 mem: incrementing refcount of 1319: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1311
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1311 in location 1297
9999 mem: incrementing refcount of 1311: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1311
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9999 mem: location 1312 is 32
9999 mem: location 1313 is 1315
9999 mem: location 1314 is 1307
9999 mem: location 1297 is 1311
9999 mem: skipping refcount at 1311
9998 run: address to copy is 1313
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1313 is 1315
9999 mem: storing 1315 in location 1298
9999 mem: incrementing refcount of 1315: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1315
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1315
9999 mem: decrementing refcount of 1311: 25 -> 24
9999 mem: storing 1315 in location 1344
9999 mem: incrementing refcount of 1315: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 2
9999 mem: storing 3 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1319
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1343 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1320
9998 run: its type is "character"
9999 mem: location 1320 is 100
9999 mem: storing 100 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 100
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 100
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 100
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 3
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 100
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 301 -> 302
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 3
9999 mem: storing 23 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 217 -> 218
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 100
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 23
9999 mem: storing 1062 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 100
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1062
9999 mem: location 1399 is 1062
9999 mem: storing 100 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1644
9999 mem: decrementing refcount of 1319: 27 -> 26
9999 mem: storing 1644 in location 1343
9999 mem: incrementing refcount of 1644: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1315
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1297
9999 mem: incrementing refcount of 1315: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1315
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 99
9999 mem: location 1317 is 1319
9999 mem: location 1318 is 1311
9999 mem: location 1297 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1317 is 1319
9999 mem: storing 1319 in location 1298
9999 mem: incrementing refcount of 1319: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1319
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1319
9999 mem: decrementing refcount of 1315: 25 -> 24
9999 mem: storing 1319 in location 1344
9999 mem: incrementing refcount of 1319: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 3
9999 mem: storing 4 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1644
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 2
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1343 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1645
9998 run: its type is "character"
9999 mem: location 1645 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 2
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 4
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 302 -> 303
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 303 -> 304
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 4
9999 mem: storing 24 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 218 -> 219
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 24
9999 mem: storing 1064 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1064
9999 mem: location 1399 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 304 -> 303
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 303 -> 304
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 304 -> 305
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 5
9999 mem: storing 25 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 219 -> 220
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 25
9999 mem: storing 1066 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1066
9999 mem: location 1399 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 305 -> 304
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 304 -> 305
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 305 -> 306
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 6
9999 mem: storing 26 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 220 -> 221
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 26
9999 mem: storing 1068 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1068
9999 mem: location 1399 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 306 -> 305
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 305 -> 306
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 306 -> 307
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 7
9999 mem: storing 27 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 221 -> 222
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 27
9999 mem: storing 1070 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1070
9999 mem: location 1399 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 307 -> 306
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 306 -> 307
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 307 -> 308
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 8
9999 mem: storing 28 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 222 -> 223
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 28
9999 mem: storing 1072 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1072
9999 mem: location 1399 is 1072
9999 mem: storing 32 in location 1072
9999 mem: storing 7 in location 1073
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 308 -> 307
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 307 -> 308
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 308 -> 309
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 2
9999 mem: location 1386 is 10
9999 mem: storing 20 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 20
9999 mem: location 1390 is 9
9999 mem: storing 29 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 223 -> 224
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 29
9999 mem: storing 1074 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1074
9999 mem: location 1399 is 1074
9999 mem: storing 32 in location 1074
9999 mem: storing 7 in location 1075
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 309 -> 308
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 308 -> 309
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 2
9999 mem: storing 3 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 3
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 309 -> 310
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 310 -> 309
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 309 -> 310
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1644
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1644 in location 1297
9999 mem: incrementing refcount of 1644: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1644
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1646
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1646 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1644: 13 -> 12
9999 mem: storing 1323 in location 1343
9999 mem: incrementing refcount of 1323: 24 -> 25
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1319
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1319 in location 1297
9999 mem: incrementing refcount of 1319: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1319
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9999 mem: location 1320 is 100
9999 mem: location 1321 is 1644
9999 mem: location 1322 is 1315
9999 mem: location 1297 is 1319
9999 mem: skipping refcount at 1319
9998 run: address to copy is 1321
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1321 is 1644
9999 mem: storing 1644 in location 1298
9999 mem: incrementing refcount of 1644: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1644
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1644
9999 mem: decrementing refcount of 1319: 29 -> 28
9999 mem: storing 1644 in location 1344
9999 mem: incrementing refcount of 1644: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1323
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 3
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 1 in location 1353
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1644
9999 mem: location 1350 is 1254
9999 mem: decrementing refcount of 1644: 14 -> 13
9999 mem: storing 1644 in location 1254
9999 mem: incrementing refcount of 1644: 13 -> 14
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1343 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1324
9998 run: its type is "character"
9999 mem: location 1324 is 10
9999 mem: storing 10 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 10
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 3
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 1 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 0
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1356
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 310 -> 311
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 311 -> 312
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 0
9999 mem: storing 30 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 224 -> 225
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 30
9999 mem: storing 1076 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1076
9999 mem: location 1399 is 1076
9999 mem: storing 32 in location 1076
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 312 -> 311
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 311 -> 312
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 312 -> 313
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 1
9999 mem: storing 31 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 225 -> 226
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 31
9999 mem: storing 1078 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1078
9999 mem: location 1399 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 313 -> 312
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 312 -> 313
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 313 -> 314
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 2
9999 mem: storing 32 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 226 -> 227
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 32
9999 mem: storing 1080 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1080
9999 mem: location 1399 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 314 -> 313
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 313 -> 314
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 314 -> 315
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 3
9999 mem: storing 33 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 227 -> 228
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 33
9999 mem: storing 1082 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1082
9999 mem: location 1399 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 315 -> 314
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 314 -> 315
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 315 -> 316
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 4
9999 mem: storing 34 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 228 -> 229
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 34
9999 mem: storing 1084 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1084
9999 mem: location 1399 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 316 -> 315
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 315 -> 316
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 316 -> 317
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 5
9999 mem: storing 35 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 229 -> 230
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 35
9999 mem: storing 1086 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1086
9999 mem: location 1399 is 1086
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 317 -> 316
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 316 -> 317
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 317 -> 318
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 6
9999 mem: storing 36 in location 1394
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 230 -> 231
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 36
9999 mem: storing 1088 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1088
9999 mem: location 1399 is 1088
9999 mem: storing 32 in location 1088
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 318 -> 317
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 317 -> 318
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 318 -> 319
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 7
9999 mem: storing 37 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 231 -> 232
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 37
9999 mem: storing 1090 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1090
9999 mem: location 1399 is 1090
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 319 -> 318
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 318 -> 319
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 319 -> 320
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 8
9999 mem: storing 38 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 232 -> 233
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 38
9999 mem: storing 1092 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1092
9999 mem: location 1399 is 1092
9999 mem: storing 32 in location 1092
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 320 -> 319
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 319 -> 320
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 320 -> 321
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 3
9999 mem: location 1386 is 10
9999 mem: storing 30 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 30
9999 mem: location 1390 is 9
9999 mem: storing 39 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 233 -> 234
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 39
9999 mem: storing 1094 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1094
9999 mem: location 1399 is 1094
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 321 -> 320
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 320 -> 321
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1346 is 3
9999 mem: storing 4 in location 1346
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1347
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1346 is 4
9999 mem: location 1347 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 321 -> 322
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 4
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 322 -> 321
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 321 -> 322
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 26 -> 25
9999 mem: storing 1327 in location 1343
9999 mem: incrementing refcount of 1327: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1644
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1644 in location 1297
9999 mem: incrementing refcount of 1644: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1644
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9999 mem: location 1645 is 10
9999 mem: location 1646 is 1323
9999 mem: location 1647 is 1319
9999 mem: location 1297 is 1644
9999 mem: skipping refcount at 1644
9998 run: address to copy is 1646
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1646 is 1323
9999 mem: storing 1323 in location 1298
9999 mem: incrementing refcount of 1323: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1323
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1323
9999 mem: decrementing refcount of 1644: 15 -> 14
9999 mem: storing 1323 in location 1344
9999 mem: incrementing refcount of 1323: 26 -> 27
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1327
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1343 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1328
9998 run: its type is "character"
9999 mem: location 1328 is 101
9999 mem: storing 101 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 101
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 101
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 101
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 0
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 101
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 322 -> 323
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 0
9999 mem: storing 40 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 234 -> 235
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 101
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 40
9999 mem: storing 1096 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 101
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1096
9999 mem: location 1399 is 1096
9999 mem: storing 101 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 23 -> 22
9999 mem: storing 1331 in location 1343
9999 mem: incrementing refcount of 1331: 20 -> 21
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1323
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1323 in location 1297
9999 mem: incrementing refcount of 1323: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1323
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9999 mem: location 1324 is 10
9999 mem: location 1325 is 1327
9999 mem: location 1326 is 1644
9999 mem: location 1297 is 1323
9999 mem: skipping refcount at 1323
9998 run: address to copy is 1325
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1325 is 1327
9999 mem: storing 1327 in location 1298
9999 mem: incrementing refcount of 1327: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1327
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1327
9999 mem: decrementing refcount of 1323: 28 -> 27
9999 mem: storing 1327 in location 1344
9999 mem: incrementing refcount of 1327: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 0
9999 mem: storing 1 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 1331
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1341 is 10
9999 mem: storing 0 in location 1351
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1343 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "character"
9999 mem: location 1332 is 102
9999 mem: storing 102 in location 1354
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1345 is 7
9999 mem: location 1354 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1651
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1654
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1655
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1654 is 7
9999 mem: storing 1 in location 1656
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1655 is 102
9999 mem: storing 0 in location 1657
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1657 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1658
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1658 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1656 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1655 is 102
9999 mem: storing 0 in location 1660
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1660 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1654 is 7
9999 mem: storing 0 in location 1661
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1661 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1654 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1345
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 102
9999 mem: storing 0 in location 1355
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1347 is 1
9999 mem: location 1342 is 9
9999 mem: storing 0 in location 1357
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1338 is 1008
9999 mem: location 1354 is 102
9999 mem: location 1345 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 323 -> 324
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1384
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 1
9999 mem: storing 41 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 235 -> 236
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 102
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 41
9999 mem: storing 1098 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 102
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1098
9999 mem: location 1399 is 1098
9999 mem: storing 102 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 1331
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1297
9999 mem: incrementing refcount of 1331: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1331
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 102
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1327
9999 mem: location 1297 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1298
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1331: 22 -> 21
9999 mem: storing 0 in location 1343
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1344 is 1327
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1327 in location 1297
9999 mem: incrementing refcount of 1327: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1297 is 1327
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9999 mem: location 1328 is 101
9999 mem: location 1329 is 1331
9999 mem: location 1330 is 1323
9999 mem: location 1297 is 1327
9999 mem: skipping refcount at 1327
9998 run: address to copy is 1329
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1329 is 1331
9999 mem: storing 1331 in location 1298
9999 mem: incrementing refcount of 1331: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1298 is 1331
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1331
9999 mem: decrementing refcount of 1327: 25 -> 24
9999 mem: storing 1331 in location 1344
9999 mem: incrementing refcount of 1331: 22 -> 23
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1347 is 1
9999 mem: storing 2 in location 1347
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1253
9999 mem: storing 1253 in location 1359
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1343 is 0
9999 mem: location 1359 is 1253
9999 mem: storing 0 in location 1253
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1352
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 2
9999 mem: location 1349 is 1259
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1360
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1352 is 0
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1361
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 4
9999 mem: location 1348 is 1258
9999 mem: location 1258 is 3
9999 mem: storing 0 in location 1362
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: storing 0 in location 1363
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1339 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1257
9999 mem: storing 1257 in location 1364
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1346 is 4
9999 mem: location 1364 is 1257
9999 mem: storing 4 in location 1257
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1346 is 4
9999 mem: location 1347 is 2
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1250
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1223
9999 mem: storing 2 in location 1224
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1224 is 2
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 324 -> 325
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 325 -> 326
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 2
9999 mem: storing 42 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 236 -> 237
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 42
9999 mem: storing 1100 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1100
9999 mem: location 1399 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 326 -> 325
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 325 -> 326
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 326 -> 327
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 3
9999 mem: storing 43 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 237 -> 238
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 43
9999 mem: storing 1102 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1102
9999 mem: location 1399 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 327 -> 326
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 326 -> 327
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 327 -> 328
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 4
9999 mem: storing 44 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 238 -> 239
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 44
9999 mem: storing 1104 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1104
9999 mem: location 1399 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 328 -> 327
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 327 -> 328
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 328 -> 329
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 5
9999 mem: storing 45 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 239 -> 240
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 45
9999 mem: storing 1106 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1106
9999 mem: location 1399 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 329 -> 328
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 328 -> 329
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 329 -> 330
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 6
9999 mem: storing 46 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 240 -> 241
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 46
9999 mem: storing 1108 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1108
9999 mem: location 1399 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 330 -> 329
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 329 -> 330
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 330 -> 331
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 7
9999 mem: storing 47 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 241 -> 242
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 47
9999 mem: storing 1110 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1110
9999 mem: location 1399 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 331 -> 330
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 330 -> 331
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 331 -> 332
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 8
9999 mem: storing 48 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 242 -> 243
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 48
9999 mem: storing 1112 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1112
9999 mem: location 1399 is 1112
9999 mem: storing 32 in location 1112
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 332 -> 331
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 331 -> 332
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 332 -> 333
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 4
9999 mem: location 1386 is 10
9999 mem: storing 40 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 40
9999 mem: location 1390 is 9
9999 mem: storing 49 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 243 -> 244
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 49
9999 mem: storing 1114 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1114
9999 mem: location 1399 is 1114
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 333 -> 332
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 332 -> 333
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 4
9999 mem: storing 5 in location 1223
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 5
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 333 -> 334
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1443
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1444
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1445
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1446
9999 mem: storing 1 in location 1447
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1448
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1450
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1443 is 5
9999 mem: location 1444 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 334 -> 335
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 5
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 335 -> 334
9999 mem: storing 1008 in location 1442
9999 mem: incrementing refcount of 1008: 334 -> 335
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 335 -> 336
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 0
9999 mem: storing 50 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 244 -> 245
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 50
9999 mem: storing 1116 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1116
9999 mem: location 1399 is 1116
9999 mem: storing 9480 in location 1116
9999 mem: storing 245 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 0
9999 mem: storing 1 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 1
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 336 -> 337
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 1
9999 mem: storing 51 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 245 -> 246
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 51
9999 mem: storing 1118 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1118
9999 mem: location 1399 is 1118
9999 mem: storing 9480 in location 1118
9999 mem: storing 245 in location 1119
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 1
9999 mem: storing 2 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 2
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 337 -> 338
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 2
9999 mem: storing 52 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 246 -> 247
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 52
9999 mem: storing 1120 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1120
9999 mem: location 1399 is 1120
9999 mem: storing 9480 in location 1120
9999 mem: storing 245 in location 1121
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 2
9999 mem: storing 3 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 3
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 338 -> 339
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 3
9999 mem: storing 53 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 247 -> 248
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 53
9999 mem: storing 1122 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1122
9999 mem: location 1399 is 1122
9999 mem: storing 9480 in location 1122
9999 mem: storing 245 in location 1123
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 3
9999 mem: storing 4 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 4
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 339 -> 340
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 4
9999 mem: storing 54 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 248 -> 249
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 54
9999 mem: storing 1124 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1124
9999 mem: location 1399 is 1124
9999 mem: storing 9480 in location 1124
9999 mem: storing 245 in location 1125
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 4
9999 mem: storing 5 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 5
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 340 -> 341
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 5
9999 mem: storing 55 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 249 -> 250
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 55
9999 mem: storing 1126 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1126
9999 mem: location 1399 is 1126
9999 mem: storing 9480 in location 1126
9999 mem: storing 245 in location 1127
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 5
9999 mem: storing 6 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 6
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 341 -> 342
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 6
9999 mem: storing 56 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 250 -> 251
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 56
9999 mem: storing 1128 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1128
9999 mem: location 1399 is 1128
9999 mem: storing 9480 in location 1128
9999 mem: storing 245 in location 1129
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 6
9999 mem: storing 7 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 7
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 342 -> 343
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 7
9999 mem: storing 57 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 251 -> 252
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 57
9999 mem: storing 1130 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1130
9999 mem: location 1399 is 1130
9999 mem: storing 9480 in location 1130
9999 mem: storing 245 in location 1131
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 7
9999 mem: storing 8 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 8
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 343 -> 344
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 8
9999 mem: storing 58 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 252 -> 253
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 58
9999 mem: storing 1132 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1132
9999 mem: location 1399 is 1132
9999 mem: storing 9480 in location 1132
9999 mem: storing 245 in location 1133
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 8
9999 mem: storing 9 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 9
9999 mem: location 1445 is 9
9999 mem: storing 1 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1442 is 1008
9999 mem: location 1446 is 9480
9999 mem: location 1448 is 245
9999 mem: location 1450 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 344 -> 345
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1381
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1382
9999 mem: storing 1 in location 1383
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1388
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 5
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1391
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 5
9999 mem: location 1386 is 10
9999 mem: storing 50 in location 1394
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 50
9999 mem: location 1390 is 9
9999 mem: storing 59 in location 1394
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 253 -> 254
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 9480
9999 mem: storing 0 in location 1397
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 59
9999 mem: storing 1134 in location 1399
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 9480
9999 mem: location 1382 is 245
9999 mem: location 1399 is 1134
9999 mem: location 1399 is 1134
9999 mem: storing 9480 in location 1134
9999 mem: storing 245 in location 1135
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1444 is 9
9999 mem: storing 10 in location 1444
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1444 is 10
9999 mem: location 1445 is 9
9999 mem: storing 0 in location 1452
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1442 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1223 is 5
9999 mem: storing 6 in location 1223
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1219 is 1008
9999 mem: location 1223 is 6
9999 mem: location 1221 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 345 -> 346
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 346 -> 347
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1267
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 6
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 347 -> 346
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 346 -> 347
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 347 -> 348
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 348 -> 349
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 0
9999 mem: storing 60 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 254 -> 255
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 60
9999 mem: storing 1136 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1136
9999 mem: location 1399 is 1136
9999 mem: storing 32 in location 1136
9999 mem: storing 7 in location 1137
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 349 -> 348
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 348 -> 349
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 349 -> 350
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 1
9999 mem: storing 61 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 255 -> 256
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 61
9999 mem: storing 1138 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1138
9999 mem: location 1399 is 1138
9999 mem: storing 32 in location 1138
9999 mem: storing 7 in location 1139
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 350 -> 349
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 349 -> 350
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 350 -> 351
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 2
9999 mem: storing 62 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 256 -> 257
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 62
9999 mem: storing 1140 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1140
9999 mem: location 1399 is 1140
9999 mem: storing 32 in location 1140
9999 mem: storing 7 in location 1141
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 351 -> 350
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 350 -> 351
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 351 -> 352
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 3
9999 mem: storing 63 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 257 -> 258
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 63
9999 mem: storing 1142 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1142
9999 mem: location 1399 is 1142
9999 mem: storing 32 in location 1142
9999 mem: storing 7 in location 1143
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 352 -> 351
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 351 -> 352
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 352 -> 353
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 4
9999 mem: storing 64 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 258 -> 259
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 64
9999 mem: storing 1144 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1144
9999 mem: location 1399 is 1144
9999 mem: storing 32 in location 1144
9999 mem: storing 7 in location 1145
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 353 -> 352
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 352 -> 353
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 353 -> 354
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 5
9999 mem: storing 65 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 259 -> 260
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 65
9999 mem: storing 1146 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1146
9999 mem: location 1399 is 1146
9999 mem: storing 32 in location 1146
9999 mem: storing 7 in location 1147
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 354 -> 353
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 353 -> 354
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 354 -> 355
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 6
9999 mem: storing 66 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 260 -> 261
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 66
9999 mem: storing 1148 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1148
9999 mem: location 1399 is 1148
9999 mem: storing 32 in location 1148
9999 mem: storing 7 in location 1149
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 355 -> 354
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 354 -> 355
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 355 -> 356
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 7
9999 mem: storing 67 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 261 -> 262
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 67
9999 mem: storing 1150 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1150
9999 mem: location 1399 is 1150
9999 mem: storing 32 in location 1150
9999 mem: storing 7 in location 1151
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 356 -> 355
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 355 -> 356
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 356 -> 357
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 8
9999 mem: storing 68 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 262 -> 263
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 68
9999 mem: storing 1152 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1152
9999 mem: location 1399 is 1152
9999 mem: storing 32 in location 1152
9999 mem: storing 7 in location 1153
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 357 -> 356
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 356 -> 357
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 357 -> 358
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1388
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 6
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 6
9999 mem: location 1386 is 10
9999 mem: storing 60 in location 1394
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 60
9999 mem: location 1390 is 9
9999 mem: storing 69 in location 1394
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 263 -> 264
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 69
9999 mem: storing 1154 in location 1399
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1154
9999 mem: location 1399 is 1154
9999 mem: storing 32 in location 1154
9999 mem: storing 7 in location 1155
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 358 -> 357
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 357 -> 358
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9990 schedule: clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1612
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 358 -> 359
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1616
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1617
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1618
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 6
9999 mem: storing 7 in location 1616
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 7
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 359 -> 360
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 7
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 360 -> 359
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 359 -> 360
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1615 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1297
9999 mem: incrementing refcount of 1008: 360 -> 361
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1297 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1297 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1298
 108 run: return {height: "number"}
9999 mem: location 1298 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 10
9999 mem: storing 10 in location 1619
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 7
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 7
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 361 -> 362
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 7
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 362 -> 361
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 361 -> 362
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 362 -> 363
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 363 -> 364
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 0
9999 mem: storing 70 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 264 -> 265
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 70
9999 mem: storing 1156 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1156
9999 mem: location 1399 is 1156
9999 mem: storing 32 in location 1156
9999 mem: storing 7 in location 1157
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 364 -> 363
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 363 -> 364
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 364 -> 365
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 1
9999 mem: storing 71 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 265 -> 266
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 71
9999 mem: storing 1158 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1158
9999 mem: location 1399 is 1158
9999 mem: storing 32 in location 1158
9999 mem: storing 7 in location 1159
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 365 -> 364
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 364 -> 365
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 365 -> 366
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 2
9999 mem: storing 72 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 266 -> 267
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 72
9999 mem: storing 1160 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1160
9999 mem: location 1399 is 1160
9999 mem: storing 32 in location 1160
9999 mem: storing 7 in location 1161
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 366 -> 365
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 365 -> 366
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 366 -> 367
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 3
9999 mem: storing 73 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 267 -> 268
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 73
9999 mem: storing 1162 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1162
9999 mem: location 1399 is 1162
9999 mem: storing 32 in location 1162
9999 mem: storing 7 in location 1163
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 367 -> 366
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 366 -> 367
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 367 -> 368
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 4
9999 mem: storing 74 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 268 -> 269
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 74
9999 mem: storing 1164 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1164
9999 mem: location 1399 is 1164
9999 mem: storing 32 in location 1164
9999 mem: storing 7 in location 1165
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 368 -> 367
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 367 -> 368
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 368 -> 369
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 5
9999 mem: storing 75 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 269 -> 270
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 75
9999 mem: storing 1166 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1166
9999 mem: location 1399 is 1166
9999 mem: storing 32 in location 1166
9999 mem: storing 7 in location 1167
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 369 -> 368
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 368 -> 369
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 369 -> 370
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 6
9999 mem: storing 76 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 270 -> 271
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 76
9999 mem: storing 1168 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1168
9999 mem: location 1399 is 1168
9999 mem: storing 32 in location 1168
9999 mem: storing 7 in location 1169
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 370 -> 369
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 369 -> 370
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 370 -> 371
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 7
9999 mem: storing 77 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 271 -> 272
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 77
9999 mem: storing 1170 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1170
9999 mem: location 1399 is 1170
9999 mem: storing 32 in location 1170
9999 mem: storing 7 in location 1171
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 371 -> 370
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 370 -> 371
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 371 -> 372
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 8
9999 mem: storing 78 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 272 -> 273
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 78
9999 mem: storing 1172 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1172
9999 mem: location 1399 is 1172
9999 mem: storing 32 in location 1172
9999 mem: storing 7 in location 1173
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 372 -> 371
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 371 -> 372
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 372 -> 373
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 7
9999 mem: location 1386 is 10
9999 mem: storing 70 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 70
9999 mem: location 1390 is 9
9999 mem: storing 79 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 273 -> 274
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 79
9999 mem: storing 1174 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1174
9999 mem: location 1399 is 1174
9999 mem: storing 32 in location 1174
9999 mem: storing 7 in location 1175
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 373 -> 372
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 372 -> 373
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 7
9999 mem: storing 8 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 8
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 8
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 373 -> 374
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 8
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 374 -> 373
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 373 -> 374
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 374 -> 375
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 375 -> 376
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 0
9999 mem: storing 80 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 274 -> 275
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 80
9999 mem: storing 1176 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1176
9999 mem: location 1399 is 1176
9999 mem: storing 32 in location 1176
9999 mem: storing 7 in location 1177
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 376 -> 375
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 375 -> 376
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 376 -> 377
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 1
9999 mem: storing 81 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 275 -> 276
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 81
9999 mem: storing 1178 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1178
9999 mem: location 1399 is 1178
9999 mem: storing 32 in location 1178
9999 mem: storing 7 in location 1179
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 377 -> 376
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 376 -> 377
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 377 -> 378
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 2
9999 mem: storing 82 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 276 -> 277
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 82
9999 mem: storing 1180 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1180
9999 mem: location 1399 is 1180
9999 mem: storing 32 in location 1180
9999 mem: storing 7 in location 1181
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 378 -> 377
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 377 -> 378
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 378 -> 379
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 3
9999 mem: storing 83 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 277 -> 278
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 83
9999 mem: storing 1182 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1182
9999 mem: location 1399 is 1182
9999 mem: storing 32 in location 1182
9999 mem: storing 7 in location 1183
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 379 -> 378
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 378 -> 379
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 379 -> 380
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 4
9999 mem: storing 84 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 278 -> 279
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 84
9999 mem: storing 1184 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1184
9999 mem: location 1399 is 1184
9999 mem: storing 32 in location 1184
9999 mem: storing 7 in location 1185
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 380 -> 379
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 379 -> 380
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 380 -> 381
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 5
9999 mem: storing 85 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 279 -> 280
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 85
9999 mem: storing 1186 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1186
9999 mem: location 1399 is 1186
9999 mem: storing 32 in location 1186
9999 mem: storing 7 in location 1187
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 381 -> 380
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 380 -> 381
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 381 -> 382
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 6
9999 mem: storing 86 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 280 -> 281
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 86
9999 mem: storing 1188 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1188
9999 mem: location 1399 is 1188
9999 mem: storing 32 in location 1188
9999 mem: storing 7 in location 1189
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 382 -> 381
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 381 -> 382
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 382 -> 383
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 7
9999 mem: storing 87 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 281 -> 282
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 87
9999 mem: storing 1190 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1190
9999 mem: location 1399 is 1190
9999 mem: storing 32 in location 1190
9999 mem: storing 7 in location 1191
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 383 -> 382
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 382 -> 383
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 383 -> 384
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 8
9999 mem: storing 88 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 282 -> 283
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 88
9999 mem: storing 1192 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1192
9999 mem: location 1399 is 1192
9999 mem: storing 32 in location 1192
9999 mem: storing 7 in location 1193
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 384 -> 383
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 383 -> 384
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 384 -> 385
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 8
9999 mem: location 1386 is 10
9999 mem: storing 80 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 80
9999 mem: location 1390 is 9
9999 mem: storing 89 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 283 -> 284
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 89
9999 mem: storing 1194 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1194
9999 mem: location 1399 is 1194
9999 mem: storing 32 in location 1194
9999 mem: storing 7 in location 1195
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 385 -> 384
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 384 -> 385
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 8
9999 mem: storing 9 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 9
9999 mem: location 1619 is 10
9999 mem: storing 0 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1616 is 9
9999 mem: location 1617 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 385 -> 386
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1267
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 9
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 386 -> 385
9999 mem: storing 1008 in location 1615
9999 mem: incrementing refcount of 1008: 385 -> 386
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1615 is 1008
9999 mem: location 1617 is 0
9999 mem: location 1618 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1273
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 386 -> 387
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1278
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1279
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1280
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 387 -> 388
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 0
9999 mem: storing 90 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 284 -> 285
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 90
9999 mem: storing 1196 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1196
9999 mem: location 1399 is 1196
9999 mem: storing 32 in location 1196
9999 mem: storing 7 in location 1197
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 0
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 1
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 388 -> 387
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 387 -> 388
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 0
9999 mem: storing 1 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 388 -> 389
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 1
9999 mem: storing 91 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 285 -> 286
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 91
9999 mem: storing 1198 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1198
9999 mem: location 1399 is 1198
9999 mem: storing 32 in location 1198
9999 mem: storing 7 in location 1199
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 1
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 1
9999 mem: storing 2 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 2
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 389 -> 388
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 388 -> 389
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 1
9999 mem: storing 2 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 389 -> 390
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 2
9999 mem: storing 92 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 286 -> 287
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 92
9999 mem: storing 1200 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1200
9999 mem: location 1399 is 1200
9999 mem: storing 32 in location 1200
9999 mem: storing 7 in location 1201
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 2
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 2
9999 mem: storing 3 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 3
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 390 -> 389
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 389 -> 390
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 2
9999 mem: storing 3 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 390 -> 391
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 3
9999 mem: storing 93 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 287 -> 288
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 93
9999 mem: storing 1202 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1202
9999 mem: location 1399 is 1202
9999 mem: storing 32 in location 1202
9999 mem: storing 7 in location 1203
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 3
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 3
9999 mem: storing 4 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 4
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 391 -> 390
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 390 -> 391
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 3
9999 mem: storing 4 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 391 -> 392
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 4
9999 mem: storing 94 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 288 -> 289
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 94
9999 mem: storing 1204 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1204
9999 mem: location 1399 is 1204
9999 mem: storing 32 in location 1204
9999 mem: storing 7 in location 1205
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 4
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 4
9999 mem: storing 5 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 5
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 392 -> 391
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 391 -> 392
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 4
9999 mem: storing 5 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 5
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 392 -> 393
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 5
9999 mem: storing 95 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 289 -> 290
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 95
9999 mem: storing 1206 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1206
9999 mem: location 1399 is 1206
9999 mem: storing 32 in location 1206
9999 mem: storing 7 in location 1207
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 5
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 5
9999 mem: storing 6 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 6
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 393 -> 392
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 392 -> 393
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 5
9999 mem: storing 6 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 6
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 393 -> 394
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-skips-indent-around-paste
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 6
9999 mem: storing 96 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 290 -> 291
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 96
9999 mem: storing 1208 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1208
9999 mem: location 1399 is 1208
9999 mem: storing 32 in location 1208
9999 mem: storing 7 in location 1209
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 6
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 6
9999 mem: storing 7 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 7
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 394 -> 393
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 393 -> 394
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 6
9999 mem: storing 7 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 7
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 394 -> 395
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 7
9999 mem: storing 97 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 291 -> 292
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 97
9999 mem: storing 1210 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1210
9999 mem: location 1399 is 1210
9999 mem: storing 32 in location 1210
9999 mem: storing 7 in location 1211
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 7
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 7
9999 mem: storing 8 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 8
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 395 -> 394
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 394 -> 395
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 7
9999 mem: storing 8 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 8
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 395 -> 396
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 8
9999 mem: storing 98 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 292 -> 293
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 98
9999 mem: storing 1212 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1212
9999 mem: location 1399 is 1212
9999 mem: storing 32 in location 1212
9999 mem: storing 7 in location 1213
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 8
9999 mem: location 1400 is 9
9999 mem: storing 0 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 109 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1390 is 8
9999 mem: storing 9 in location 1390
 109 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1390 is 9
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 396 -> 395
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 395 -> 396
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 8
9999 mem: storing 9 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 9
9999 mem: location 1278 is 9
9999 mem: storing 0 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1279 is 32
9999 mem: location 1280 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1377
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1380
9999 mem: incrementing refcount of 1008: 396 -> 397
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1381
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1382
9999 mem: storing 1 in location 1383
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1384
9999 mem: storing 1 in location 1385
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1385 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1381 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1380 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1386
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 10
9999 mem: storing 10 in location 1387
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1388
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1388 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1387 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 25
 109 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 1390
 109 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1390 is 9
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1386 is 10
9999 mem: storing 1 in location 1389
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1389 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1391
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 45
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1388 is 9
9999 mem: location 1386 is 10
9999 mem: storing 90 in location 1394
 109 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1394 is 90
9999 mem: location 1390 is 9
9999 mem: storing 99 in location 1394
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1380 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1395
9999 mem: incrementing refcount of 1014: 293 -> 294
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 100 in location 1396
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1381 is 32
9999 mem: storing 0 in location 1397
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1397 is 0
9998 run: jumping to instruction 63
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1395 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1394 is 99
9999 mem: storing 1214 in location 1399
 109 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1381 is 32
9999 mem: location 1382 is 7
9999 mem: location 1399 is 1214
9999 mem: location 1399 is 1214
9999 mem: storing 32 in location 1214
9999 mem: storing 7 in location 1215
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1386 is 10
9999 mem: storing 9 in location 1400
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1390 is 9
9999 mem: location 1400 is 9
9999 mem: storing 1 in location 1401
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 72
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1380 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 397 -> 396
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 396 -> 397
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1277 is 9
9999 mem: storing 10 in location 1277
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1277 is 10
9999 mem: location 1278 is 9
9999 mem: storing 1 in location 1282
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1616 is 9
9999 mem: storing 10 in location 1616
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1616 is 10
9999 mem: location 1619 is 10
9999 mem: storing 1 in location 1620
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1615 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1219 is 1008
9999 mem: location 1220 is 1250
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 397 -> 396
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 396 -> 397
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 3
9999 mem: storing 3 in location 1429
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 1428 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1430
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1426 is 1008
9999 mem: location 1429 is 3
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1263
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1266
9999 mem: incrementing refcount of 1008: 397 -> 398
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1267
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1266 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1267 is 3
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 10
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1268 is 0
9999 mem: location 1266 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1266 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 398 -> 397
9999 mem: storing 1008 in location 1426
9999 mem: incrementing refcount of 1008: 397 -> 398
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1427 is 1420
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1439
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1420 in location 1442
9999 mem: incrementing refcount of 1420: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1442 is 1420
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 4
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1421
9998 run: its type is "number"
9999 mem: location 1421 is 4
9999 mem: storing 4 in location 1443
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9999 mem: location 1421 is 4
9999 mem: location 1422 is 1402
9999 mem: location 1442 is 1420
9999 mem: skipping refcount at 1420
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1422 is 1402
9999 mem: storing 1402 in location 1444
9999 mem: incrementing refcount of 1402: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1444 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 4 in location 1445
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1443 is 4
9999 mem: location 1445 is 4
9999 mem: storing 1 in location 1446
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1294
9999 mem: storing 1294 in location 1447
9999 mem: incrementing refcount of 1294: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1447 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: location 1442 is 1420
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1420
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: decrementing refcount of 1420: 6 -> 5
9999 mem: storing 1420 in location 1427
9999 mem: incrementing refcount of 1420: 5 -> 6
9999 mem: storing 1 in location 1435
9999 mem: storing 1 in location 1436
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1426 is 1008
9999 mem: location 1427 is 1420
9999 mem: location 1428 is 1250
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 2 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1258
9998 run: its type is "number"
9999 mem: location 1258 is 3
9999 mem: storing 3 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1269
9999 mem: location 1252 is 1269
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1644
9999 mem: location 1255 is 0
9999 mem: location 1256 is 9
9999 mem: location 1257 is 4
9999 mem: location 1258 is 3
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1
9999 mem: location 1261 is 1648
9999 mem: location 1262 is 0
9999 mem: location 2 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1259
9998 run: its type is "number"
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 3  # cursor row\n    4 <- 0  # cursor column (not indented)\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
