9991 parse: --- defining scenario_editor-wraps-line-on-insert-2
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abcdefg\ndefg": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"abcdefg\ndefg": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {5: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 3, 0\n    type [abc]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 3, 0\n    type [abc]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3\n    4 <- 3\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 3\n    4 <- 3\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abcd↩     .\n    .efg       .\n    .abcd↩     .\n    .efg       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abcd↩     .\n    .efg       .\n    .abcd↩     .\n    .efg       .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-wraps-line-on-insert-2 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- deduce types for recipe scenario_editor-wraps-line-on-insert-2
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- collect surrounding spaces for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- transform names for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-wraps-line-on-insert-2
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- transform braces for recipe scenario_editor-wraps-line-on-insert-2
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- perform checks for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- type-check calls inside recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- type-check merge instructions in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- check types of reply instructions in recipe scenario_editor-wraps-line-on-insert-2
9991 transform: --- checking reply instructions against header for scenario_editor-wraps-line-on-insert-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-wraps-line-on-insert-2
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1116
9999 mem: storing 7 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9999 mem: storing 1016 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9999 mem: storing 1018 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9999 mem: storing 1020 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9999 mem: storing 1022 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9999 mem: storing 1024 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9999 mem: storing 1026 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9999 mem: storing 1028 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9999 mem: storing 1030 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9999 mem: storing 1032 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9999 mem: storing 1034 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9999 mem: storing 1036 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9999 mem: storing 1038 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9999 mem: storing 1040 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9999 mem: storing 1042 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9999 mem: storing 1044 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9999 mem: storing 1046 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9999 mem: storing 1048 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9999 mem: storing 1050 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9999 mem: storing 1052 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9999 mem: storing 1054 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9999 mem: storing 1056 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9999 mem: storing 1058 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9999 mem: storing 1060 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9999 mem: storing 1062 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9999 mem: storing 1064 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9999 mem: storing 1066 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9999 mem: storing 1068 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9999 mem: storing 1070 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9999 mem: storing 1072 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9999 mem: storing 1074 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9999 mem: storing 1076 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9999 mem: storing 1078 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9999 mem: storing 1080 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9999 mem: storing 1082 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9999 mem: storing 1084 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9999 mem: storing 1086 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9999 mem: storing 1088 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9999 mem: storing 1090 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9999 mem: storing 1092 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9999 mem: storing 1094 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9999 mem: storing 1096 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9999 mem: storing 1098 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9999 mem: storing 1100 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9999 mem: storing 1102 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9999 mem: storing 1104 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9999 mem: storing 1106 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9999 mem: storing 1108 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9999 mem: storing 1110 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9999 mem: storing 1112 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9999 mem: storing 1114 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"abcdefg\ndefg": "literal-string"}
9999 mem: new string alloc: 1125
9999 mem: storing 1125 in location 1
9999 mem: incrementing refcount of 1125: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9999 mem: location 1 is 1125
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1139
9999 mem: storing 11 in location 1140
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1142
9999 mem: incrementing refcount of 1125: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1144
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1145
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1145 is 5
9999 mem: storing 4 in location 1145
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1152
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1144 is 0
9999 mem: location 1147 is 1157
9999 mem: storing 0 in location 1157
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1145 is 4
9999 mem: location 1147 is 1158
9999 mem: storing 4 in location 1158
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1147 is 1160
9999 mem: storing 1 in location 1160
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1144 is 0
9999 mem: location 1147 is 1161
9999 mem: storing 0 in location 1161
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1148
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1165
9999 mem: storing 4 in location 1166
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1168
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1171
9999 mem: storing 1171 in location 1170
9999 mem: incrementing refcount of 1171: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1168 is 167
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1170 is 1171
9999 mem: skipping refcount at 1171
9999 mem: storing 167 in location 1172
9999 mem: storing 0 in location 1173
9999 mem: storing 0 in location 1174
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1171
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1171
9999 mem: location 1148 is 1153
9999 mem: storing 1171 in location 1153
9999 mem: incrementing refcount of 1171: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1149
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1149 is 1154
9999 mem: storing 1171 in location 1154
9999 mem: incrementing refcount of 1171: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1150
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1150 is 1156
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1146 is 1152
9999 mem: location 1142 is 1125
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1175
9999 mem: storing 8 in location 1176
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1178
9999 mem: incrementing refcount of 1152: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1179
9999 mem: incrementing refcount of 1125: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1179 is 1125
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9999 mem: storing 12 in location 1180
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1180 is 12
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1181
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1182
9999 mem: incrementing refcount of 1171: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 0
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 0
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 97
9999 mem: storing 97 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 97
9999 mem: location 1182 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1185
9999 mem: storing 5 in location 1186
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1189
9999 mem: incrementing refcount of 1171: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1192
9999 mem: storing 1192 in location 1190
9999 mem: incrementing refcount of 1192: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1188 is 97
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1193
9999 mem: storing 97 in location 1193
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1190 is 1192
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1192 in location 1173
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1189 is 1171
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1195
9999 mem: storing 1171 in location 1195
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1194
9999 mem: storing 0 in location 1194
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1196
9999 mem: storing 3 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 7 -> 6
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 0
9999 mem: storing 1 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 1
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 1
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 98
9999 mem: storing 98 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 98
9999 mem: location 1182 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1189
9999 mem: incrementing refcount of 1192: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1201
9999 mem: storing 1201 in location 1190
9999 mem: incrementing refcount of 1201: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1188 is 98
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1202
9999 mem: storing 98 in location 1202
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1190 is 1201
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1194
9999 mem: storing 1201 in location 1194
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1189 is 1192
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1204
9999 mem: storing 1192 in location 1204
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 0 in location 1203
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1192
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 5 -> 4
9999 mem: storing 1201 in location 1182
9999 mem: incrementing refcount of 1201: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 1
9999 mem: storing 2 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 2
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 2
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 99
9999 mem: storing 99 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 99
9999 mem: location 1182 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1189
9999 mem: incrementing refcount of 1201: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1205
9999 mem: storing 1205 in location 1190
9999 mem: incrementing refcount of 1205: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1188 is 99
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1206
9999 mem: storing 99 in location 1206
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1190 is 1205
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 1205 in location 1203
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1189 is 1201
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1208
9999 mem: storing 1201 in location 1208
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 0 in location 1207
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1201
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 5 -> 4
9999 mem: storing 1205 in location 1182
9999 mem: incrementing refcount of 1205: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 2
9999 mem: storing 3 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 3
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 3
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 100
9999 mem: location 1182 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1189
9999 mem: incrementing refcount of 1205: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1209
9999 mem: storing 1209 in location 1190
9999 mem: incrementing refcount of 1209: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1188 is 100
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1210
9999 mem: storing 100 in location 1210
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1190 is 1209
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 1209 in location 1207
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1189 is 1205
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1212
9999 mem: storing 1205 in location 1212
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 0 in location 1211
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1205
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 5 -> 4
9999 mem: storing 1209 in location 1182
9999 mem: incrementing refcount of 1209: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 3
9999 mem: storing 4 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 4
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 4
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 101
9999 mem: storing 101 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 101
9999 mem: location 1182 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1189
9999 mem: incrementing refcount of 1209: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1213
9999 mem: storing 1213 in location 1190
9999 mem: incrementing refcount of 1213: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1188 is 101
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1214
9999 mem: storing 101 in location 1214
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1190 is 1213
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 1213 in location 1211
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1189 is 1209
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1216
9999 mem: storing 1209 in location 1216
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 0 in location 1215
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1209
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 5 -> 4
9999 mem: storing 1213 in location 1182
9999 mem: incrementing refcount of 1213: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 4
9999 mem: storing 5 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 5
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 5
9998 run: address to copy is 1132
9998 run: its type is character
9999 mem: location 1132 is 102
9999 mem: storing 102 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 102
9999 mem: location 1182 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1189
9999 mem: incrementing refcount of 1213: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1217
9999 mem: storing 1217 in location 1190
9999 mem: incrementing refcount of 1217: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1188 is 102
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1218
9999 mem: storing 102 in location 1218
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1190 is 1217
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 1217 in location 1215
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1189 is 1213
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1220
9999 mem: storing 1213 in location 1220
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1219
9999 mem: storing 0 in location 1219
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1213
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
9990 schedule: next_2/insert-text/new-editor/scenario_editor-wraps-line-on-insert-2
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 5 -> 4
9999 mem: storing 1217 in location 1182
9999 mem: incrementing refcount of 1217: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 5
9999 mem: storing 6 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 6
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 6
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 103
9999 mem: storing 103 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 103
9999 mem: location 1182 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1189
9999 mem: incrementing refcount of 1217: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1221
9999 mem: storing 1221 in location 1190
9999 mem: incrementing refcount of 1221: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1188 is 103
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1222
9999 mem: storing 103 in location 1222
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1190 is 1221
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1219
9999 mem: storing 1221 in location 1219
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1189 is 1217
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1224
9999 mem: storing 1217 in location 1224
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1223
9999 mem: storing 0 in location 1223
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1217
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 5 -> 4
9999 mem: storing 1221 in location 1182
9999 mem: incrementing refcount of 1221: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 6
9999 mem: storing 7 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 7
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 7
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1189
9999 mem: incrementing refcount of 1221: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1225
9999 mem: storing 1225 in location 1190
9999 mem: incrementing refcount of 1225: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1226
9999 mem: storing 10 in location 1226
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1190 is 1225
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1223
9999 mem: storing 1225 in location 1223
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1189 is 1221
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1228
9999 mem: storing 1221 in location 1228
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1227
9999 mem: storing 0 in location 1227
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1221
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 5 -> 4
9999 mem: storing 1225 in location 1182
9999 mem: incrementing refcount of 1225: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 7
9999 mem: storing 8 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 8
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 8
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 100
9999 mem: storing 100 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 100
9999 mem: location 1182 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1189
9999 mem: incrementing refcount of 1225: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1229
9999 mem: storing 1229 in location 1190
9999 mem: incrementing refcount of 1229: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1188 is 100
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1230
9999 mem: storing 100 in location 1230
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1190 is 1229
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1227
9999 mem: storing 1229 in location 1227
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1189 is 1225
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1232
9999 mem: storing 1225 in location 1232
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1231
9999 mem: storing 0 in location 1231
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1225
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 5 -> 4
9999 mem: storing 1229 in location 1182
9999 mem: incrementing refcount of 1229: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 8
9999 mem: storing 9 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 9
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 9
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 101
9999 mem: storing 101 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 101
9999 mem: location 1182 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1189
9999 mem: incrementing refcount of 1229: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1233
9999 mem: storing 1233 in location 1190
9999 mem: incrementing refcount of 1233: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1188 is 101
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1234
9999 mem: storing 101 in location 1234
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1190 is 1233
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1231
9999 mem: storing 1233 in location 1231
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1189 is 1229
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1236
9999 mem: storing 1229 in location 1236
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1235
9999 mem: storing 0 in location 1235
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1229
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 5 -> 4
9999 mem: storing 1233 in location 1182
9999 mem: incrementing refcount of 1233: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 9
9999 mem: storing 10 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 10
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 10
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 102
9999 mem: storing 102 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 102
9999 mem: location 1182 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1189
9999 mem: incrementing refcount of 1233: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1237
9999 mem: storing 1237 in location 1190
9999 mem: incrementing refcount of 1237: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1188 is 102
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1238
9999 mem: storing 102 in location 1238
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1190 is 1237
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1235
9999 mem: storing 1237 in location 1235
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1189 is 1233
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1240
9999 mem: storing 1233 in location 1240
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1239
9999 mem: storing 0 in location 1239
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1233
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 5 -> 4
9999 mem: storing 1237 in location 1182
9999 mem: incrementing refcount of 1237: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 10
9999 mem: storing 11 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 11
9999 mem: location 1180 is 12
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1125
9999 mem: skipping refcount at 1125
9998 run: base address is 1126
9999 mem: location 1181 is 11
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 103
9999 mem: storing 103 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 103
9999 mem: location 1182 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1189
9999 mem: incrementing refcount of 1237: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1241
9999 mem: storing 1241 in location 1190
9999 mem: incrementing refcount of 1241: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1188 is 103
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1242
9999 mem: storing 103 in location 1242
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1190 is 1241
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1239
9999 mem: storing 1241 in location 1239
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1189 is 1237
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1244
9999 mem: storing 1237 in location 1244
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1243
9999 mem: storing 0 in location 1243
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1237
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 5 -> 4
9999 mem: storing 1241 in location 1182
9999 mem: incrementing refcount of 1241: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 11
9999 mem: storing 12 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 12
9999 mem: location 1180 is 12
9999 mem: storing 1 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1178 is 1152
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 2 -> 1
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1150
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1150 is 1156
9999 mem: decrementing refcount of 1171: 6 -> 5
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1143 is 1008
9999 mem: location 1146 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1245
9999 mem: storing 28 in location 1246
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 105 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1252
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1171: 8 -> 7
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1275
9999 mem: storing 10 in location 1276
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1287
9999 mem: storing 23 in location 1288
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 7 -> 6
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 7 -> 6
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 9 -> 8
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
9990 schedule: print/render/new-editor/scenario_editor-wraps-line-on-insert-2
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 7 -> 6
9999 mem: storing 1209 in location 1253
9999 mem: incrementing refcount of 1209: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 9 -> 8
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1209
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 5 -> 6
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 7 -> 6
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 9 -> 8
9999 mem: storing 1209 in location 1254
9999 mem: incrementing refcount of 1209: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 104 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 8617 in location 1044
9999 mem: storing 245 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 12 -> 13
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 7 -> 6
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 9 -> 8
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 102 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 7 -> 6
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 9 -> 8
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
9990 schedule: print/render/new-editor/scenario_editor-wraps-line-on-insert-2
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 9 -> 10
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 103 in location 1060
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 7 -> 6
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 9 -> 8
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 10
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 10
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 18 -> 19
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 3
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 19 -> 20
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 7 -> 6
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 9 -> 8
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 100 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 7 -> 6
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 9 -> 8
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 101 in location 1078
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 7 -> 6
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 9 -> 8
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
9990 schedule: print/render/new-editor/scenario_editor-wraps-line-on-insert-2
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 102 in location 1080
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 7 -> 6
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 9 -> 8
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 103 in location 1082
9999 mem: storing 7 in location 1083
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 6 -> 5
9999 mem: storing 0 in location 1253
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 9 -> 8
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1270
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1272
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1274 is 1159
9999 mem: storing 3 in location 1159
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 4
9998 run: result 2 is 1008
9998 run: result 3 is 1152
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 23 -> 24
9999 mem: decrementing refcount of 1152: 3 -> 2
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1151
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1151 is 1162
9999 mem: storing 1 in location 1162
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1146 is 1152
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 2
9999 mem: incrementing refcount of 1152: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 24 -> 25
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1120
9999 mem: incrementing refcount of 1152: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1121
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1122
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1245
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 25 -> 26
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 105 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1252
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 11 -> 10
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 9 -> 10
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 27 -> 28
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1171: 10 -> 9
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 9 -> 10
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 97
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 11 -> 10
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 11 -> 10
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 98
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 17 -> 18
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 11 -> 10
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 13 -> 12
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 99
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
9990 schedule: print/render/editor-render/scenario_editor-wraps-line-on-insert-2
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 11 -> 10
9999 mem: storing 1209 in location 1253
9999 mem: incrementing refcount of 1209: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 13 -> 12
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1209
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 19 -> 20
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 11 -> 10
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 13 -> 12
9999 mem: storing 1209 in location 1254
9999 mem: incrementing refcount of 1209: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1263
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 104 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 104 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 20 -> 21
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 8617 in location 1044
9999 mem: storing 245 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 33 -> 34
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 11 -> 10
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 13 -> 12
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 22 -> 23
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 102 in location 1058
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 11 -> 10
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 13 -> 12
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
9990 schedule: render/editor-render/scenario_editor-wraps-line-on-insert-2
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 23 -> 24
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 103 in location 1060
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 11 -> 10
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 13 -> 12
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 10
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 10
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 3
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 40 -> 41
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 11 -> 10
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 13 -> 12
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 11 -> 12
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 100
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 26 -> 27
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 100 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 11 -> 10
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 13 -> 12
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 101
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 27 -> 28
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 101 in location 1078
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 8 -> 9
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 11 -> 10
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 9 -> 10
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 13 -> 12
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 11 -> 12
9990 schedule: render/editor-render/scenario_editor-wraps-line-on-insert-2
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 102
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 28 -> 29
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 102 in location 1080
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 10 -> 11
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 11 -> 10
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 8 -> 9
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 13 -> 12
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 11 -> 12
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1278
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1279
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1278 is 7
9999 mem: storing 1 in location 1280
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1281
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1282
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1279 is 103
9999 mem: storing 0 in location 1284
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1278 is 7
9999 mem: storing 0 in location 1285
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1278 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 29 -> 30
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 103 in location 1082
9999 mem: storing 7 in location 1083
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 9 -> 10
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 10 -> 9
9999 mem: storing 0 in location 1253
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 9 -> 10
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 13 -> 12
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 10 -> 11
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1270
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1272
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1274 is 1159
9999 mem: storing 3 in location 1159
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 3
9999 mem: location 1257 is 4
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 3
9998 run: result 1 is 4
9999 mem: storing 3 in location 1123
9999 mem: storing 4 in location 1124
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 4
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 45 -> 46
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1179
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 30 -> 31
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 32 in location 1084
9999 mem: storing 7 in location 1085
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 46 -> 47
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 4
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1312
9999 mem: storing 12 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 47 -> 48
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1316
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1318
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1319
9999 mem: storing 1 in location 1320
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1321
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1323
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 4
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 48 -> 49
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 0
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 49 -> 50
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 0
9999 mem: storing 40 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 31 -> 32
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 40
9999 mem: storing 1096 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1096
9999 mem: location 1309 is 1096
9999 mem: storing 9480 in location 1096
9999 mem: storing 245 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 1
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 50 -> 51
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 1
9999 mem: storing 41 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 32 -> 33
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 41
9999 mem: storing 1098 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1098
9999 mem: location 1309 is 1098
9999 mem: storing 9480 in location 1098
9999 mem: storing 245 in location 1099
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 1
9999 mem: storing 2 in location 1317
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 51 -> 52
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 2
9999 mem: storing 42 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 33 -> 34
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 42
9999 mem: storing 1100 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1100
9999 mem: location 1309 is 1100
9999 mem: storing 9480 in location 1100
9999 mem: storing 245 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 2
9999 mem: storing 3 in location 1317
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 3
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 52 -> 53
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-wraps-line-on-insert-2
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 3
9999 mem: storing 43 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 34 -> 35
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 43
9999 mem: storing 1102 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1102
9999 mem: location 1309 is 1102
9999 mem: storing 9480 in location 1102
9999 mem: storing 245 in location 1103
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 3
9999 mem: storing 4 in location 1317
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 4
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 53 -> 54
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 4
9999 mem: storing 44 in location 1304
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 35 -> 36
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 44
9999 mem: storing 1104 in location 1309
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1104
9999 mem: location 1309 is 1104
9999 mem: storing 9480 in location 1104
9999 mem: storing 245 in location 1105
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 4
9999 mem: storing 5 in location 1317
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 5
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1325
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 54 -> 55
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 55 -> 56
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 5
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 55 -> 56
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 56 -> 57
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 57 -> 58
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 58 -> 59
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 59 -> 60
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 60 -> 61
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 61 -> 62
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1326
9999 mem: storing 7 in location 1327
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 62 -> 63
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1330
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1331
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1332
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1330 is 5
9999 mem: storing 6 in location 1330
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1329 is 1008
9999 mem: location 1330 is 6
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1169
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 6
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 63 -> 64
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1330 is 6
9999 mem: location 1333 is 5
9999 mem: storing 1 in location 1334
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1329 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    left-click 3, 0\n    type [abc]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type {"abc": "literal-string"}
9999 mem: storing 'left-click' event starting at 1337
9999 mem: storing 'type' event starting at 1341
9999 mem: storing 'text' tag at 1341
9999 mem: storing character 97 at 1342
9999 mem: storing 'text' tag at 1345
9999 mem: storing character 98 at 1346
9999 mem: storing 'text' tag at 1349
9999 mem: storing character 99 at 1350
9999 mem: storing console in 1353
9999 mem: storing console data in 1355
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1353
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1356
9999 mem: storing 14 in location 1357
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 65 -> 66
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1361
9999 mem: incrementing refcount of 1152: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1362
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1363
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1359 is 1008
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 66 -> 67
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1360 is 1353
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1315
9999 mem: incrementing refcount of 1353: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1353
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 0
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 0
9999 mem: storing 0 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 0
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1355
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1355 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 4 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 0
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 0
9998 run: address to copy is 1337
9998 run: its type is event
9999 mem: location 1337 is 2
9999 mem: location 1338 is 65513
9999 mem: location 1339 is 3
9999 mem: location 1340 is 0
9999 mem: storing 2 in location 1321
9999 mem: storing 65513 in location 1322
9999 mem: storing 3 in location 1323
9999 mem: storing 0 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 0
9999 mem: storing 1 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 0
9999 mem: location 1355 is 1335
9999 mem: location 1316 is 1
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy to is 1354
9999 mem: storing 1 in location 1354
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 2
9999 mem: location 1322 is 65513
9999 mem: location 1323 is 3
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1353
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1353
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1364
9999 mem: storing 65513 in location 1365
9999 mem: storing 3 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: decrementing refcount of 1353: 2 -> 1
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 1 -> 2
9999 mem: storing 1 in location 1368
9999 mem: storing 0 in location 1369
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1364 is 2
9999 mem: location 1365 is 65513
9999 mem: location 1366 is 3
9999 mem: location 1367 is 0
9999 mem: storing 1365 in location 1370
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 1365
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 mem: location 1370 is 1365
9999 mem: location 1365 is 65513
9999 mem: location 1366 is 3
9999 mem: location 1367 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1372
9999 mem: storing 27 in location 1373
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1375
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1376
9999 mem: incrementing refcount of 1152: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1377
9999 mem: storing 3 in location 1378
9999 mem: storing 0 in location 1379
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1376 is 1152
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1377 is 65513
9999 mem: location 1378 is 3
9999 mem: location 1379 is 0
9998 run: address to copy is 1378
9998 run: its type is "number"
9999 mem: location 1378 is 3
9999 mem: storing 3 in location 1380
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1380 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1377 is 65513
9999 mem: location 1378 is 3
9999 mem: location 1379 is 0
9998 run: address to copy is 1379
9998 run: its type is "number"
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1381
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1382
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 0 in location 1383
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1384
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1381 is 0
9999 mem: location 1384 is 4
9999 mem: storing 0 in location 1385
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1385 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1388
9999 mem: incrementing refcount of 1171: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1375 is 1008
9999 mem: location 1376 is 1152
9999 mem: location 1380 is 3
9999 mem: location 1381 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1401
9999 mem: storing 26 in location 1402
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1404
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1405
9999 mem: incrementing refcount of 1152: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1406
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1407
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1405 is 1152
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1408
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1409
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1404 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1410
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1411
9999 mem: incrementing refcount of 1171: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1171
9999 mem: storing 1171 in location 1412
9999 mem: incrementing refcount of 1171: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1411
9999 mem: incrementing refcount of 1192: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1413
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1408 is 0
9999 mem: storing 0 in location 1414
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1415
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1406 is 3
9999 mem: location 1415 is 1160
9999 mem: storing 3 in location 1160
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1416
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1407 is 0
9999 mem: location 1416 is 1161
9999 mem: storing 0 in location 1161
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1405 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1417
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 1
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 1
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1411 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 97
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 15 -> 14
9999 mem: storing 1201 in location 1411
9999 mem: incrementing refcount of 1201: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1412
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 1
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 1
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1411 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 98
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 15 -> 14
9999 mem: storing 1205 in location 1411
9999 mem: incrementing refcount of 1205: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1201 in location 1412
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 1
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 1
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1411 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 99
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 15 -> 14
9999 mem: storing 1209 in location 1411
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 17 -> 16
9999 mem: storing 1205 in location 1412
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 2
9999 mem: storing 3 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 1
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 1
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1411 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 100
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 3
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 1213 in location 1411
9999 mem: incrementing refcount of 1213: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1412
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 3
9999 mem: storing 4 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 1
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 1
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1411 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 4
9999 mem: location 1409 is 4
9999 mem: storing 1 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1408 is 0
9999 mem: storing 0 in location 1414
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1413 is 1
9999 mem: storing 2 in location 1413
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 2
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 2
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1411 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 15 -> 14
9999 mem: storing 1217 in location 1411
9999 mem: incrementing refcount of 1217: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 17 -> 16
9999 mem: storing 1213 in location 1412
9999 mem: incrementing refcount of 1213: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 2
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 2
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1411 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 15 -> 14
9999 mem: storing 1221 in location 1411
9999 mem: incrementing refcount of 1221: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 17 -> 16
9999 mem: storing 1217 in location 1412
9999 mem: incrementing refcount of 1217: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 2
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 2
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1411 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 103
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 15 -> 14
9999 mem: storing 1225 in location 1411
9999 mem: incrementing refcount of 1225: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 17 -> 16
9999 mem: storing 1221 in location 1412
9999 mem: incrementing refcount of 1221: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 2
9999 mem: storing 3 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 2
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 2
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1411 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 10
9999 mem: storing 1 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 2
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1413 is 2
9999 mem: storing 3 in location 1413
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1408 is 0
9999 mem: storing 0 in location 1414
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1229 in location 1411
9999 mem: incrementing refcount of 1229: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 17 -> 16
9999 mem: storing 1225 in location 1412
9999 mem: incrementing refcount of 1225: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 3
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 0
9999 mem: location 1416 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1420
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1225
9999 mem: location 1417 is 1156
9999 mem: decrementing refcount of 1171: 13 -> 12
9999 mem: storing 1225 in location 1156
9999 mem: incrementing refcount of 1225: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1411 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 100
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 15 -> 14
9999 mem: storing 1233 in location 1411
9999 mem: incrementing refcount of 1233: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 18 -> 17
9999 mem: storing 1229 in location 1412
9999 mem: incrementing refcount of 1229: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 3
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 1
9999 mem: location 1416 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1420
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1411 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 101
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 15 -> 14
9999 mem: storing 1237 in location 1411
9999 mem: incrementing refcount of 1237: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 17 -> 16
9999 mem: storing 1233 in location 1412
9999 mem: incrementing refcount of 1233: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 3
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 2
9999 mem: location 1416 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1420
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1411 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 102
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 15 -> 14
9999 mem: storing 1241 in location 1411
9999 mem: incrementing refcount of 1241: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 17 -> 16
9999 mem: storing 1237 in location 1412
9999 mem: incrementing refcount of 1237: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 2
9999 mem: storing 3 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1413 is 3
9999 mem: location 1410 is 5
9999 mem: storing 0 in location 1418
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1419
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 3
9999 mem: location 1416 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1420
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1411 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1411 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1421
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1421 is 103
9999 mem: storing 0 in location 1422
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1414 is 3
9999 mem: location 1409 is 4
9999 mem: storing 0 in location 1424
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1411 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 14 -> 13
9999 mem: storing 0 in location 1411
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1412 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 17 -> 16
9999 mem: storing 1241 in location 1412
9999 mem: incrementing refcount of 1241: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1414 is 3
9999 mem: storing 4 in location 1414
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1419
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1414 is 4
9999 mem: location 1416 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1425
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1419 is 1
9999 mem: location 1425 is 0
9999 mem: storing 0 in location 1426
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1413 is 3
9999 mem: location 1415 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1427
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1426 is 0
9999 mem: location 1427 is 0
9999 mem: storing 0 in location 1428
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1405 is 1152
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1376
9999 mem: incrementing refcount of 1152: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1376 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1392
9999 mem: incrementing refcount of 1171: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
9999 mem: storing 1275 in location 1394
9999 mem: incrementing refcount of 1275: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 0
9999 mem: location 1388 is 1171
9999 mem: location 1390 is 3
9999 mem: location 1391 is 0
9999 mem: location 1392 is 1171
9999 mem: location 1389 is 0
9999 mem: location 1394 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1394 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 1 in location 1276
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 1171 in location 1279
9999 mem: storing 3 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 1171 in location 1282
9999 mem: storing 0 in location 1283
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1376 is 1152
9999 mem: location 1394 is 1275
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1189
9999 mem: incrementing refcount of 1275: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1275
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1168
9999 mem: incrementing refcount of 1275: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1429
9999 mem: storing 1429 in location 1170
9999 mem: incrementing refcount of 1429: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1275
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1429
9999 mem: skipping refcount at 1429
9999 mem: location 1170 is 1429
9999 mem: skipping refcount at 1429
9999 mem: storing 1275 in location 1430
9999 mem: storing 0 in location 1431
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1429
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1429
9999 mem: location 1190 is 1163
9999 mem: storing 1429 in location 1163
9999 mem: incrementing refcount of 1429: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 10 -> 9
9999 mem: storing 1152 in location 1376
9999 mem: incrementing refcount of 1152: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1376 is 1152
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1362
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1363
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1359 is 1008
9999 mem: location 1362 is 3
9999 mem: location 1363 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 70 -> 71
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 70 -> 71
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1360 is 1353
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1315
9999 mem: incrementing refcount of 1353: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1353
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 1
9999 mem: storing 1 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1355
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1355 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 4 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 1
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 1
9998 run: address to copy is 1341
9998 run: its type is event
9999 mem: location 1341 is 0
9999 mem: location 1342 is 97
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1321
9999 mem: storing 97 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 1
9999 mem: storing 2 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 1
9999 mem: location 1355 is 1335
9999 mem: location 1316 is 2
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy to is 1354
9999 mem: storing 2 in location 1354
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 0
9999 mem: location 1322 is 97
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1353
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1353
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1364
9999 mem: storing 97 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: decrementing refcount of 1353: 3 -> 2
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 2 -> 3
9999 mem: storing 1 in location 1368
9999 mem: storing 0 in location 1369
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1364 is 0
9999 mem: location 1365 is 97
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1370
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 mem: location 1364 is 0
9999 mem: location 1365 is 97
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1432
9999 mem: storing 85 in location 1433
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 71 -> 72
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1437
9999 mem: storing 97 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1436 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 72 -> 73
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1442
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 73 -> 74
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1443
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1444
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1445
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1446
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1447
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1448
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1449
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1450
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1437 is 0
9999 mem: location 1438 is 97
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: storing 1438 in location 1451
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1451 is 1438
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1452
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1463
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1468
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1484
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1485
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1490
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1491
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1492
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1492 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1493
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1497
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 0 in location 1501
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: storing 1 in location 1504
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1504 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1486
9999 mem: incrementing refcount of 1171: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1446 is 1156
9999 mem: location 1156 is 1225
9999 mem: storing 1225 in location 1498
9999 mem: incrementing refcount of 1225: 17 -> 18
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1152
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 97
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1519
9999 mem: storing 31 in location 1520
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1522
9999 mem: incrementing refcount of 1152: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1523
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1524
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1525
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1523 is 97
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1189
9999 mem: incrementing refcount of 1225: 18 -> 19
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1552
9999 mem: storing 1552 in location 1190
9999 mem: incrementing refcount of 1552: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1188 is 97
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy to is 1553
9999 mem: storing 97 in location 1553
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1191
9999 mem: incrementing refcount of 1229: 16 -> 17
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1190 is 1552
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1227
9999 mem: storing 1552 in location 1227
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1189 is 1225
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy to is 1555
9999 mem: storing 1225 in location 1555
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 0
9999 mem: location 1555 is 1225
9999 mem: location 1191 is 1229
9999 mem: location 1190 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy to is 1554
9999 mem: storing 1229 in location 1554
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1229
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1190 is 1552
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1232
9999 mem: storing 1552 in location 1232
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1225
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: location 1525 is 1156
9999 mem: decrementing refcount of 1225: 20 -> 19
9999 mem: storing 1552 in location 1156
9999 mem: incrementing refcount of 1552: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1526
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1527
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1528
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1529
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1526 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1530
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1531
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 75 -> 76
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
9990 schedule: screen-height/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1533
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1529 is 4
9999 mem: storing 3 in location 1534
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1534 is 3
9999 mem: storing 0 in location 1535
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1535 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 0
9999 mem: location 1527 is 1161
9999 mem: storing 1 in location 1161
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: storing 1229 in location 1542
9999 mem: incrementing refcount of 1229: 18 -> 19
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1542 is 1229
9999 mem: storing 0 in location 1543
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1542 is 1229
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1532 is 10
9999 mem: storing 0 in location 1546
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1546 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1552
9999 mem: storing 1552 in location 1548
9999 mem: incrementing refcount of 1552: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1524 is 1008
9999 mem: location 1530 is 3
9999 mem: location 1531 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1531 is 0
9999 mem: storing 0 in location 1549
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 0
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1552
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1548 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1553
9998 run: its type is "character"
9999 mem: location 1553 is 97
9999 mem: storing 97 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 97
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 97 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 0
9999 mem: storing 1 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1552: 6 -> 5
9999 mem: storing 1229 in location 1548
9999 mem: incrementing refcount of 1229: 20 -> 21
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 1
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1229
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 100
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 100 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 1
9999 mem: storing 2 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 22 -> 21
9999 mem: storing 1233 in location 1548
9999 mem: incrementing refcount of 1233: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 2
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1233
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 101
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 101 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 2
9999 mem: storing 3 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 19 -> 18
9999 mem: storing 1237 in location 1548
9999 mem: incrementing refcount of 1237: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 3
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1237
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1548 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 102
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 102 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 3
9999 mem: storing 4 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 19 -> 18
9999 mem: storing 1241 in location 1548
9999 mem: incrementing refcount of 1241: 16 -> 17
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 4
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1241
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1548 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 103
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 103 in location 1084
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 4
9999 mem: storing 5 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 18 -> 17
9999 mem: storing 0 in location 1548
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 5
9999 mem: location 1529 is 4
9999 mem: storing 1 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 1
9998 run: jump-unless fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1522 is 1152
9999 mem: location 1524 is 1008
9999 mem: location 1541 is 1
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1008
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1152: 12 -> 11
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 11 -> 12
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: storing 1 in location 1441
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1488
9999 mem: incrementing refcount of 1171: 14 -> 15
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1455
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1429
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1429
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1429 in location 1199
9999 mem: incrementing refcount of 1429: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1429
9999 mem: skipping refcount at 1429
9999 mem: location 1430 is 1275
9999 mem: location 1431 is 0
9999 mem: location 1199 is 1429
9999 mem: skipping refcount at 1429
9998 run: address to copy is 1430
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1430 is 1275
9999 mem: storing 1275 in location 1200
9999 mem: incrementing refcount of 1275: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1275
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1275
9999 mem: storing 1275 in location 1454
9999 mem: incrementing refcount of 1275: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1454 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1171
9999 mem: location 1280 is 3
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1171
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1454 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 0 in location 1461
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1461 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1498 is 1225
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 19 -> 20
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1552
9999 mem: storing 1552 in location 1462
9999 mem: incrementing refcount of 1552: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1462 is 1552
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 21 -> 22
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1229
9999 mem: storing 1229 in location 1500
9999 mem: incrementing refcount of 1229: 22 -> 23
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1556
9999 mem: decrementing refcount of 1275: 5 -> 4
9999 mem: storing 1556 in location 1454
9999 mem: incrementing refcount of 1556: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1449 is 3
9999 mem: location 1450 is 0
9999 mem: location 1486 is 1171
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1488 is 1171
9999 mem: location 1462 is 1552
9999 mem: location 1500 is 1229
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: storing 0 in location 1557
9999 mem: storing 3 in location 1558
9999 mem: storing 0 in location 1559
9999 mem: storing 1171 in location 1560
9999 mem: storing 3 in location 1561
9999 mem: storing 1 in location 1562
9999 mem: storing 1171 in location 1563
9999 mem: storing 1552 in location 1564
9999 mem: storing 1229 in location 1565
9999 mem: storing 1 in location 1566
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1436 is 1152
9999 mem: location 1454 is 1556
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1556 in location 1189
9999 mem: incrementing refcount of 1556: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1429
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1556
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 1429
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1556 in location 1168
9999 mem: incrementing refcount of 1556: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1429 in location 1169
9999 mem: incrementing refcount of 1429: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1568
9999 mem: storing 1568 in location 1170
9999 mem: incrementing refcount of 1568: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1556
9999 mem: location 1169 is 1429
9999 mem: location 1170 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1170 is 1568
9999 mem: skipping refcount at 1568
9999 mem: storing 1556 in location 1569
9999 mem: storing 1429 in location 1570
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1568
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1568
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1429: 4 -> 3
9999 mem: storing 1568 in location 1163
9999 mem: incrementing refcount of 1568: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1435 is 1008
9999 mem: location 1436 is 1152
9999 mem: location 1441 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1361
9999 mem: incrementing refcount of 1152: 12 -> 13
9999 mem: storing 1 in location 1371
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1120
9999 mem: incrementing refcount of 1152: 13 -> 14
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1245
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 14 -> 15
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1252
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 16 -> 17
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 18 -> 17
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1571
9999 mem: storing 10 in location 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 41 -> 42
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 19 -> 18
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 18 -> 17
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 19 -> 18
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 21 -> 20
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 43 -> 44
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 19 -> 18
9999 mem: storing 1209 in location 1253
9999 mem: incrementing refcount of 1209: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 21 -> 20
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 44 -> 45
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 19 -> 18
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 21 -> 20
9999 mem: storing 1209 in location 1254
9999 mem: incrementing refcount of 1209: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 45 -> 46
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 8617 in location 1044
9999 mem: storing 245 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 93 -> 92
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 92 -> 93
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 19 -> 18
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 21 -> 20
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 102 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 19 -> 18
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 21 -> 20
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 103 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 19 -> 18
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 21 -> 20
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 97 -> 98
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 49 -> 50
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 98 -> 99
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 50 -> 51
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 99 -> 98
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 3
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 23 -> 22
9999 mem: storing 1552 in location 1253
9999 mem: incrementing refcount of 1552: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 21 -> 20
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 23 -> 24
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1552
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1553
9998 run: its type is "character"
9999 mem: location 1553 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 97 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1552: 11 -> 10
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 24 -> 25
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 25 -> 24
9999 mem: storing 1552 in location 1254
9999 mem: incrementing refcount of 1552: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1552
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1552: 12 -> 11
9999 mem: storing 1552 in location 1156
9999 mem: incrementing refcount of 1552: 11 -> 12
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 100 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 26 -> 25
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1552: 13 -> 12
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 26 -> 27
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 101 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 21 -> 20
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 28 -> 27
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 102 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 21 -> 20
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 18 -> 19
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 23 -> 22
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 8617 in location 1084
9999 mem: storing 245 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 4
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 0
9999 mem: storing 40 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 40
9999 mem: storing 1096 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1096
9999 mem: location 1309 is 1096
9999 mem: storing 103 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 20 -> 19
9999 mem: storing 0 in location 1253
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 23 -> 22
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 20 -> 21
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1270
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 1
9999 mem: storing 0 in location 1271
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1272
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 3
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1274 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 4
9999 mem: location 1257 is 1
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 1
9999 mem: storing 4 in location 1123
9999 mem: storing 1 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 1
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 1
9999 mem: storing 41 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 41
9999 mem: storing 1098 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1098
9999 mem: location 1309 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 109 -> 108
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 108 -> 109
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 2
9999 mem: storing 42 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 42
9999 mem: storing 1100 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1100
9999 mem: location 1309 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 109 -> 110
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 3
9999 mem: storing 43 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 43
9999 mem: storing 1102 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1102
9999 mem: location 1309 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 110 -> 111
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 4
9999 mem: storing 44 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 44
9999 mem: storing 1104 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1104
9999 mem: location 1309 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 111 -> 112
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1316
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1318
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1319
9999 mem: storing 1 in location 1320
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1321
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1323
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 5
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 5
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 0
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 1
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 1
9999 mem: storing 2 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 2
9999 mem: storing 3 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 3
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 3
9999 mem: storing 4 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 4
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 4
9999 mem: storing 5 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 5
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 5
9999 mem: storing 6 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 6
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 119 -> 120
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 6
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 120 -> 121
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 122 -> 123
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 126 -> 127
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 127 -> 126
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1326
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1330
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1331
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1332
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1330 is 6
9999 mem: storing 7 in location 1330
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1329 is 1008
9999 mem: location 1330 is 7
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1169
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 7
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 129 -> 130
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 108 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1330 is 7
9999 mem: location 1333 is 5
9999 mem: storing 1 in location 1334
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1329 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 129 -> 130
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1362
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1363
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1359 is 1008
9999 mem: location 1362 is 3
9999 mem: location 1363 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 130 -> 131
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 130 -> 131
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1360 is 1353
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1315
9999 mem: incrementing refcount of 1353: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1353
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 2
9999 mem: storing 2 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1355
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1355 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 4 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 2
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 2
9998 run: address to copy is 1345
9998 run: its type is event
9999 mem: location 1345 is 0
9999 mem: location 1346 is 98
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1321
9999 mem: storing 98 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 2
9999 mem: storing 3 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 2
9999 mem: location 1355 is 1335
9999 mem: location 1316 is 3
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy to is 1354
9999 mem: storing 3 in location 1354
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 0
9999 mem: location 1322 is 98
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1353
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1353
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1364
9999 mem: storing 98 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: decrementing refcount of 1353: 4 -> 3
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 3 -> 4
9999 mem: storing 1 in location 1368
9999 mem: storing 0 in location 1369
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1364 is 0
9999 mem: location 1365 is 98
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1370
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 mem: location 1364 is 0
9999 mem: location 1365 is 98
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1432
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 131 -> 132
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 15 -> 16
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1437
9999 mem: storing 98 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1436 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 132 -> 133
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1442
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 133 -> 134
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1443
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1444
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1445
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1446
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1447
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1448
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1449
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1450
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1437 is 0
9999 mem: location 1438 is 98
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: storing 1438 in location 1451
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1451 is 1438
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1452
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1463
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1468
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1484
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1485
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1490
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1491
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1492
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1492 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1493
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1497
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 0 in location 1501
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: storing 1 in location 1504
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1504 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1486
9999 mem: incrementing refcount of 1171: 17 -> 18
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1446 is 1156
9999 mem: location 1156 is 1552
9999 mem: storing 1552 in location 1498
9999 mem: incrementing refcount of 1552: 12 -> 13
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1152
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 98
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1519
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1522
9999 mem: incrementing refcount of 1152: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1523
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1524
9999 mem: incrementing refcount of 1008: 134 -> 135
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1552
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1525
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1523 is 98
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1189
9999 mem: incrementing refcount of 1552: 13 -> 14
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1583
9999 mem: storing 1583 in location 1190
9999 mem: incrementing refcount of 1583: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 0
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1188 is 98
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy to is 1584
9999 mem: storing 98 in location 1584
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1189 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1229
9999 mem: storing 1229 in location 1191
9999 mem: incrementing refcount of 1229: 27 -> 28
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1229
9999 mem: location 1555 is 1225
9999 mem: location 1190 is 1583
9999 mem: location 1189 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy to is 1554
9999 mem: storing 1583 in location 1554
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: location 1189 is 1552
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy to is 1586
9999 mem: storing 1552 in location 1586
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 0
9999 mem: location 1586 is 1552
9999 mem: location 1191 is 1229
9999 mem: location 1190 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy to is 1585
9999 mem: storing 1229 in location 1585
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1229
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1552
9999 mem: location 1190 is 1583
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1232
9999 mem: storing 1583 in location 1232
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1552
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1583
9999 mem: storing 1583 in location 1200
9999 mem: incrementing refcount of 1583: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1583
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1583
9999 mem: location 1525 is 1156
9999 mem: decrementing refcount of 1552: 15 -> 14
9999 mem: storing 1583 in location 1156
9999 mem: incrementing refcount of 1583: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1526
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1527
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1528
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1529
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1526 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1530
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1531
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1533
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1529 is 4
9999 mem: storing 3 in location 1534
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1534 is 3
9999 mem: storing 0 in location 1535
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1535 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1527 is 1161
9999 mem: storing 2 in location 1161
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: storing 1229 in location 1542
9999 mem: incrementing refcount of 1229: 29 -> 30
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1542 is 1229
9999 mem: storing 0 in location 1543
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1542 is 1229
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1532 is 10
9999 mem: storing 0 in location 1546
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1546 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1583
9999 mem: storing 1583 in location 1548
9999 mem: incrementing refcount of 1583: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1524 is 1008
9999 mem: location 1530 is 3
9999 mem: location 1531 is 1
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1531 is 1
9999 mem: storing 1 in location 1549
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 1
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1583
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1548 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1584
9998 run: its type is "character"
9999 mem: location 1584 is 98
9999 mem: storing 98 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 98
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 98 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 1
9999 mem: storing 2 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1583: 6 -> 5
9999 mem: storing 1229 in location 1548
9999 mem: incrementing refcount of 1229: 31 -> 32
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 2
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1229
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 100
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 100 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 2
9999 mem: storing 3 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 33 -> 32
9999 mem: storing 1233 in location 1548
9999 mem: incrementing refcount of 1233: 23 -> 24
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 3
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1233
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 101
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 101 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 3
9999 mem: storing 4 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 25 -> 24
9999 mem: storing 1237 in location 1548
9999 mem: incrementing refcount of 1237: 23 -> 24
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 4
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1237
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1548 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 102
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 102 in location 1084
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 4
9999 mem: storing 5 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 25 -> 24
9999 mem: storing 1241 in location 1548
9999 mem: incrementing refcount of 1241: 22 -> 23
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 5
9999 mem: location 1529 is 4
9999 mem: storing 1 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 1
9998 run: jump-unless fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1522 is 1152
9999 mem: location 1524 is 1008
9999 mem: location 1541 is 1
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1008
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1152: 17 -> 16
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 16 -> 17
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 141 -> 142
9999 mem: storing 1 in location 1441
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1488
9999 mem: incrementing refcount of 1171: 18 -> 19
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1455
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1568
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1568
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1568 in location 1199
9999 mem: incrementing refcount of 1568: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 1556
9999 mem: location 1570 is 1429
9999 mem: location 1199 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1569
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1569 is 1556
9999 mem: storing 1556 in location 1200
9999 mem: incrementing refcount of 1556: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1556
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1556
9999 mem: storing 1556 in location 1454
9999 mem: incrementing refcount of 1556: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: location 1557 is 0
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 1
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1567 is 0
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: storing 1558 in location 1461
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1461 is 1558
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 1
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1566
9998 run: its type is "number"
9999 mem: location 1566 is 1
9999 mem: storing 1 in location 1478
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1478 is 1
9998 run: jump-unless fell through
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 1
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1565
9999 mem: storing 1565 in location 1499
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1446 is 1156
9999 mem: location 1156 is 1583
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 32 -> 33
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1229
9999 mem: location 1499 is 1565
9999 mem: decrementing refcount of 1229: 33 -> 32
9999 mem: storing 1229 in location 1565
9999 mem: incrementing refcount of 1229: 32 -> 33
 105 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 1
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1561
9999 mem: storing 1561 in location 1480
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: location 1480 is 1561
9999 mem: storing 3 in location 1561
 105 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 1
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1562
9999 mem: storing 1562 in location 1481
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1481 is 1562
9999 mem: storing 2 in location 1562
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1563
9999 mem: storing 1563 in location 1482
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: location 1482 is 1563
9999 mem: decrementing refcount of 1171: 19 -> 18
9999 mem: storing 1171 in location 1563
9999 mem: incrementing refcount of 1171: 18 -> 19
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1435 is 1008
9999 mem: location 1436 is 1152
9999 mem: location 1441 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 141 -> 142
9999 mem: decrementing refcount of 1152: 17 -> 16
9999 mem: storing 1152 in location 1361
9999 mem: incrementing refcount of 1152: 16 -> 17
9999 mem: storing 1 in location 1371
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 142 -> 143
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1120
9999 mem: incrementing refcount of 1152: 17 -> 18
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1245
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 143 -> 144
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 18 -> 19
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1252
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 20 -> 21
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 22 -> 21
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 21 -> 22
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 145 -> 146
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 23 -> 22
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 22 -> 21
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 147 -> 148
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 23 -> 22
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 25 -> 24
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 23 -> 22
9999 mem: storing 1209 in location 1253
9999 mem: incrementing refcount of 1209: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 25 -> 24
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 149 -> 150
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 23 -> 22
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 25 -> 24
9999 mem: storing 1209 in location 1254
9999 mem: incrementing refcount of 1209: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 150 -> 151
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 8617 in location 1044
9999 mem: storing 245 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 151 -> 152
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 23 -> 22
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 25 -> 24
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 153 -> 154
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 102 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 23 -> 22
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 25 -> 24
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 103 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 23 -> 22
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 25 -> 24
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 155 -> 156
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 156 -> 157
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 157 -> 158
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 74 -> 75
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 3
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 158 -> 159
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 159 -> 158
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 158 -> 159
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 27 -> 26
9999 mem: storing 1552 in location 1253
9999 mem: incrementing refcount of 1552: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 25 -> 24
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 27 -> 28
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1552
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1553
9998 run: its type is "character"
9999 mem: location 1553 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 159 -> 160
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 75 -> 76
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 97 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1583
9999 mem: storing 1583 in location 1200
9999 mem: incrementing refcount of 1583: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1583
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1583
9999 mem: decrementing refcount of 1552: 17 -> 16
9999 mem: storing 1583 in location 1253
9999 mem: incrementing refcount of 1583: 7 -> 8
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 29 -> 28
9999 mem: storing 1552 in location 1254
9999 mem: incrementing refcount of 1552: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1583
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1253 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1584
9998 run: its type is "character"
9999 mem: location 1584 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 160 -> 161
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 76 -> 77
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 98 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 33 -> 34
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1583: 9 -> 8
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 34 -> 35
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1583
9999 mem: storing 1583 in location 1200
9999 mem: incrementing refcount of 1583: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1583
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1583
9999 mem: decrementing refcount of 1552: 19 -> 18
9999 mem: storing 1583 in location 1254
9999 mem: incrementing refcount of 1583: 9 -> 10
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1583
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1583: 10 -> 9
9999 mem: storing 1583 in location 1156
9999 mem: incrementing refcount of 1583: 9 -> 10
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 161 -> 162
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 77 -> 78
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 100 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 35 -> 36
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 36 -> 35
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 35 -> 36
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1583: 11 -> 10
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 36 -> 37
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 78 -> 79
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 101 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 27 -> 26
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 37 -> 38
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 38 -> 37
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 79 -> 80
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 8617 in location 1084
9999 mem: storing 245 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 4
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 164 -> 165
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 0
9999 mem: storing 40 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 80 -> 81
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 40
9999 mem: storing 1096 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1096
9999 mem: location 1309 is 1096
9999 mem: storing 102 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 27 -> 26
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 24 -> 25
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 29 -> 28
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 1
9999 mem: storing 41 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 81 -> 82
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 41
9999 mem: storing 1098 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1098
9999 mem: location 1309 is 1098
9999 mem: storing 103 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 26 -> 25
9999 mem: storing 0 in location 1253
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 29 -> 28
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 26 -> 27
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1270
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 1
9999 mem: storing 0 in location 1271
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1272
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1274 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 4
9999 mem: location 1257 is 2
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 2
9999 mem: storing 4 in location 1123
9999 mem: storing 2 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 2
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 167 -> 168
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 2
9999 mem: storing 42 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 82 -> 83
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 42
9999 mem: storing 1100 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1100
9999 mem: location 1309 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 168 -> 169
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 3
9999 mem: storing 43 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 83 -> 84
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 43
9999 mem: storing 1102 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1102
9999 mem: location 1309 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 170 -> 169
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 169 -> 170
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 170 -> 171
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 4
9999 mem: storing 44 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 84 -> 85
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 44
9999 mem: storing 1104 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1104
9999 mem: location 1309 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 170 -> 171
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 171 -> 172
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1316
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1318
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1319
9999 mem: storing 1 in location 1320
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1321
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1323
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 5
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 172 -> 173
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 5
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 172 -> 173
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 0
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 173 -> 174
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 1
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 174 -> 175
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 1
9999 mem: storing 2 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 175 -> 176
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 2
9999 mem: storing 3 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 3
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 176 -> 177
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 3
9999 mem: storing 4 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 4
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 177 -> 178
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 4
9999 mem: storing 5 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 5
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 5
9999 mem: storing 6 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 6
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 178 -> 179
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 179 -> 180
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
9990 schedule: move-cursor/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 6
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 180 -> 179
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 179 -> 180
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 180 -> 181
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 181 -> 182
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 182 -> 181
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 181 -> 182
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 182 -> 183
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 183 -> 182
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 182 -> 183
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 183 -> 184
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 184 -> 183
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 183 -> 184
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 184 -> 185
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 185 -> 184
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 184 -> 185
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 185 -> 186
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 186 -> 185
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 185 -> 186
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1326
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 186 -> 187
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1330
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1331
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1332
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1330 is 6
9999 mem: storing 7 in location 1330
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1329 is 1008
9999 mem: location 1330 is 7
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 187 -> 188
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1169
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 7
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 188 -> 187
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 187 -> 188
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 188 -> 189
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 108 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1330 is 7
9999 mem: location 1333 is 5
9999 mem: storing 1 in location 1334
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1329 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 189 -> 188
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 188 -> 189
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1362
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1363
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1359 is 1008
9999 mem: location 1362 is 3
9999 mem: location 1363 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 189 -> 190
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 190 -> 189
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 189 -> 190
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1360 is 1353
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1315
9999 mem: incrementing refcount of 1353: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1353
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 3
9999 mem: storing 3 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1355
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1355 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 4 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 3
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 3
9998 run: address to copy is 1349
9998 run: its type is event
9999 mem: location 1349 is 0
9999 mem: location 1350 is 99
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1321
9999 mem: storing 99 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 3
9999 mem: storing 4 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 3
9999 mem: location 1355 is 1335
9999 mem: location 1316 is 4
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy to is 1354
9999 mem: storing 4 in location 1354
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 0
9999 mem: location 1322 is 99
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1353
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1353
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1364
9999 mem: storing 99 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: decrementing refcount of 1353: 5 -> 4
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 4 -> 5
9999 mem: storing 1 in location 1368
9999 mem: storing 0 in location 1369
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1364 is 0
9999 mem: location 1365 is 99
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1370
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 mem: location 1364 is 0
9999 mem: location 1365 is 99
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1432
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 190 -> 191
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 19 -> 20
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1437
9999 mem: storing 99 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1436 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 191 -> 192
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1442
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 192 -> 193
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1443
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1444
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1445
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1446
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1447
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1448
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1449
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1450
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1437 is 0
9999 mem: location 1438 is 99
9999 mem: location 1439 is 0
9999 mem: location 1440 is 0
9999 mem: storing 1438 in location 1451
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1451 is 1438
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1452
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1463
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1468
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1484
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1485
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1490
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1491
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1492
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1492 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1493
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1493 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1497
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 0 in location 1501
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: storing 1 in location 1504
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1441
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1504 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1486
9999 mem: incrementing refcount of 1171: 21 -> 22
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1446 is 1156
9999 mem: location 1156 is 1583
9999 mem: storing 1583 in location 1498
9999 mem: incrementing refcount of 1583: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1152
9999 mem: location 1451 is 1438
9999 mem: location 1438 is 99
9999 mem: location 1435 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1519
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1522
9999 mem: incrementing refcount of 1152: 20 -> 21
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1523
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1524
9999 mem: incrementing refcount of 1008: 193 -> 194
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1583
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1525
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1523 is 99
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1189
9999 mem: incrementing refcount of 1583: 11 -> 12
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1587
9999 mem: storing 1587 in location 1190
9999 mem: incrementing refcount of 1587: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 0
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1188 is 99
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy to is 1588
9999 mem: storing 99 in location 1588
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1189 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1229
9999 mem: storing 1229 in location 1191
9999 mem: incrementing refcount of 1229: 37 -> 38
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1229
9999 mem: location 1586 is 1552
9999 mem: location 1190 is 1587
9999 mem: location 1189 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy to is 1585
9999 mem: storing 1587 in location 1585
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1189 is 1583
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy to is 1590
9999 mem: storing 1583 in location 1590
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 0
9999 mem: location 1590 is 1583
9999 mem: location 1191 is 1229
9999 mem: location 1190 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy to is 1589
9999 mem: storing 1229 in location 1589
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1229
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1583
9999 mem: location 1190 is 1587
9999 mem: location 1191 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1232
9999 mem: storing 1587 in location 1232
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1583
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1587
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1587
9999 mem: storing 1587 in location 1200
9999 mem: incrementing refcount of 1587: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1587
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1587
9999 mem: location 1525 is 1156
9999 mem: decrementing refcount of 1583: 13 -> 12
9999 mem: storing 1587 in location 1156
9999 mem: incrementing refcount of 1587: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1526
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1527
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1528
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1522 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1529
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1526 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1530
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1531
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 194 -> 195
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1532
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1524 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 195 -> 196
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1533
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1529 is 4
9999 mem: storing 3 in location 1534
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1534 is 3
9999 mem: storing 0 in location 1535
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1535 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1527 is 1161
9999 mem: storing 3 in location 1161
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1587
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1199
9999 mem: incrementing refcount of 1587: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1587
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1589 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 38 -> 39
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: storing 1229 in location 1542
9999 mem: incrementing refcount of 1229: 39 -> 40
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1542 is 1229
9999 mem: storing 0 in location 1543
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1542 is 1229
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1527 is 1161
9999 mem: location 1161 is 3
9999 mem: location 1532 is 10
9999 mem: storing 0 in location 1546
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1546 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1525 is 1156
9999 mem: location 1156 is 1587
9999 mem: storing 1587 in location 1548
9999 mem: incrementing refcount of 1587: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1524 is 1008
9999 mem: location 1530 is 3
9999 mem: location 1531 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 196 -> 197
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1531 is 2
9999 mem: storing 2 in location 1549
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 2
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1587
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1548 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1588
9998 run: its type is "character"
9999 mem: location 1588 is 99
9999 mem: storing 99 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 99
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 197 -> 198
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 85 -> 86
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 99 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 2
9999 mem: storing 3 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1587
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1199
9999 mem: incrementing refcount of 1587: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1587
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1589 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 40 -> 41
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1587: 6 -> 5
9999 mem: storing 1229 in location 1548
9999 mem: incrementing refcount of 1229: 41 -> 42
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 3
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1229
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1587
9999 mem: location 1548 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 100
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 198 -> 199
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 86 -> 87
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 100 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 3
9999 mem: storing 4 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 42 -> 43
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1587
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 43 -> 42
9999 mem: storing 1233 in location 1548
9999 mem: incrementing refcount of 1233: 29 -> 30
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 4
9999 mem: location 1529 is 4
9999 mem: storing 0 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1548 is 1233
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1548 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1550
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1550 is 101
9999 mem: storing 0 in location 1551
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1551 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1524 is 1008
9999 mem: location 1550 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 199 -> 200
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 87 -> 88
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 101 in location 1084
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1549 is 4
9999 mem: storing 5 in location 1549
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1548 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 30 -> 31
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 31 -> 30
9999 mem: storing 1237 in location 1548
9999 mem: incrementing refcount of 1237: 29 -> 30
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1541
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1549 is 5
9999 mem: location 1529 is 4
9999 mem: storing 1 in location 1546
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 1
9998 run: jump-unless fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1522 is 1152
9999 mem: location 1524 is 1008
9999 mem: location 1541 is 1
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1008
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1152: 21 -> 20
9999 mem: storing 1152 in location 1436
9999 mem: incrementing refcount of 1152: 20 -> 21
9999 mem: decrementing refcount of 1008: 200 -> 199
9999 mem: storing 1008 in location 1435
9999 mem: incrementing refcount of 1008: 199 -> 200
9999 mem: storing 1 in location 1441
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1488
9999 mem: incrementing refcount of 1171: 22 -> 23
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1455
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1568
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1455 is 1163
9999 mem: location 1163 is 1568
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1568 in location 1199
9999 mem: incrementing refcount of 1568: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 1556
9999 mem: location 1570 is 1429
9999 mem: location 1199 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1569
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1569 is 1556
9999 mem: storing 1556 in location 1200
9999 mem: incrementing refcount of 1556: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1556
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1556
9999 mem: storing 1556 in location 1454
9999 mem: incrementing refcount of 1556: 6 -> 7
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: location 1557 is 0
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1567 is 0
9999 mem: location 1454 is 1556
9999 mem: skipping refcount at 1556
9999 mem: storing 1558 in location 1461
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1461 is 1558
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1566
9998 run: its type is "number"
9999 mem: location 1566 is 1
9999 mem: storing 1 in location 1478
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1478 is 1
9998 run: jump-unless fell through
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1565
9999 mem: storing 1565 in location 1499
 105 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1446 is 1156
9999 mem: location 1156 is 1587
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1199
9999 mem: incrementing refcount of 1587: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1587
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1589 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 42 -> 43
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1229
9999 mem: location 1499 is 1565
9999 mem: decrementing refcount of 1229: 43 -> 42
9999 mem: storing 1229 in location 1565
9999 mem: incrementing refcount of 1229: 42 -> 43
 105 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1561
9999 mem: storing 1561 in location 1480
 105 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1160
9999 mem: location 1160 is 3
9999 mem: location 1480 is 1561
9999 mem: storing 3 in location 1561
 105 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 2
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1562
9999 mem: storing 1562 in location 1481
 105 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1161
9999 mem: location 1161 is 3
9999 mem: location 1481 is 1562
9999 mem: storing 3 in location 1562
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1461 is 1558
9999 mem: location 1558 is 3
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1171
9999 mem: location 1561 is 3
9999 mem: location 1562 is 3
9999 mem: location 1563 is 1171
9999 mem: location 1564 is 1552
9999 mem: location 1565 is 1229
9999 mem: location 1566 is 1
9999 mem: location 1461 is 1558
9998 run: address to copy is 1563
9999 mem: storing 1563 in location 1482
 105 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1436 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: location 1482 is 1563
9999 mem: decrementing refcount of 1171: 23 -> 22
9999 mem: storing 1171 in location 1563
9999 mem: incrementing refcount of 1171: 22 -> 23
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1435 is 1008
9999 mem: location 1436 is 1152
9999 mem: location 1441 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 200 -> 199
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 199 -> 200
9999 mem: decrementing refcount of 1152: 21 -> 20
9999 mem: storing 1152 in location 1361
9999 mem: incrementing refcount of 1152: 20 -> 21
9999 mem: storing 1 in location 1371
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1359 is 1008
9999 mem: location 1361 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 200 -> 201
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1120
9999 mem: incrementing refcount of 1152: 21 -> 22
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1245
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 201 -> 202
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 22 -> 23
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 202 -> 203
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1252
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 24 -> 25
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 26 -> 25
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 25 -> 26
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 203 -> 204
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 204 -> 203
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 203 -> 204
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 204 -> 205
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 88 -> 89
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 27 -> 26
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 26 -> 25
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 205 -> 206
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 27 -> 26
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 29 -> 28
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 206 -> 207
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 27 -> 26
9999 mem: storing 1209 in location 1253
9999 mem: incrementing refcount of 1209: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 29 -> 28
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1253 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 207 -> 208
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 91 -> 92
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 27 -> 26
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 29 -> 28
9999 mem: storing 1209 in location 1254
9999 mem: incrementing refcount of 1209: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 208 -> 209
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 92 -> 93
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 8617 in location 1044
9999 mem: storing 245 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 209 -> 210
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 210 -> 209
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 209 -> 210
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 210 -> 211
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 93 -> 94
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 101 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 27 -> 26
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 100
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 29 -> 28
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 211 -> 212
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 94 -> 95
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 102 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 27 -> 26
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 101
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 29 -> 28
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 212 -> 213
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 95 -> 96
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 103 in location 1060
9999 mem: storing 7 in location 1061
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 27 -> 26
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 29 -> 30
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 102
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 29 -> 28
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 10
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 213 -> 214
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 214 -> 215
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 96 -> 97
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 215 -> 214
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 214 -> 215
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 215 -> 216
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 97 -> 98
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 216 -> 215
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 215 -> 216
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 3
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 216 -> 217
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 217 -> 216
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 216 -> 217
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 30 -> 31
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 31 -> 30
9999 mem: storing 1552 in location 1253
9999 mem: incrementing refcount of 1552: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 103
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 29 -> 28
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 31 -> 32
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1552
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1253 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1553
9998 run: its type is "character"
9999 mem: location 1553 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 97
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 217 -> 218
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 98 -> 99
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 97 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1583
9999 mem: storing 1583 in location 1200
9999 mem: incrementing refcount of 1583: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1583
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1583
9999 mem: decrementing refcount of 1552: 21 -> 20
9999 mem: storing 1583 in location 1253
9999 mem: incrementing refcount of 1583: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1552
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1552
9999 mem: storing 1552 in location 1200
9999 mem: incrementing refcount of 1552: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1552
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1552
9999 mem: decrementing refcount of 1225: 33 -> 32
9999 mem: storing 1552 in location 1254
9999 mem: incrementing refcount of 1552: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1583
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1587
9999 mem: location 1586 is 1552
9999 mem: location 1253 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1584
9998 run: its type is "character"
9999 mem: location 1584 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 98
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 218 -> 219
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 99 -> 100
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 98 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1587
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1587
9999 mem: storing 1587 in location 1200
9999 mem: incrementing refcount of 1587: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1587
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1587
9999 mem: decrementing refcount of 1583: 15 -> 14
9999 mem: storing 1587 in location 1253
9999 mem: incrementing refcount of 1587: 7 -> 8
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1552
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1552 in location 1199
9999 mem: incrementing refcount of 1552: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1552
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9999 mem: location 1553 is 97
9999 mem: location 1554 is 1583
9999 mem: location 1555 is 1225
9999 mem: location 1199 is 1552
9999 mem: skipping refcount at 1552
9998 run: address to copy is 1554
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1554 is 1583
9999 mem: storing 1583 in location 1200
9999 mem: incrementing refcount of 1583: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1583
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1583
9999 mem: decrementing refcount of 1552: 23 -> 22
9999 mem: storing 1583 in location 1254
9999 mem: incrementing refcount of 1583: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1587
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1253 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1588
9998 run: its type is "character"
9999 mem: location 1588 is 99
9999 mem: storing 99 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 99
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 219 -> 220
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 100 -> 101
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 99 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1587
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1199
9999 mem: incrementing refcount of 1587: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1587
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1589 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 43 -> 44
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1587: 9 -> 8
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 44 -> 45
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1583
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1199
9999 mem: incrementing refcount of 1583: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1583
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 98
9999 mem: location 1585 is 1587
9999 mem: location 1586 is 1552
9999 mem: location 1199 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1585 is 1587
9999 mem: storing 1587 in location 1200
9999 mem: incrementing refcount of 1587: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1587
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1587
9999 mem: decrementing refcount of 1583: 17 -> 16
9999 mem: storing 1587 in location 1254
9999 mem: incrementing refcount of 1587: 9 -> 10
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 1 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1587
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1587: 10 -> 9
9999 mem: storing 1587 in location 1156
9999 mem: incrementing refcount of 1587: 9 -> 10
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1587
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 100
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 220 -> 221
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 101 -> 102
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 100 in location 1082
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 45 -> 46
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1587
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 46 -> 45
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 31 -> 32
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1587
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1199
9999 mem: incrementing refcount of 1587: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1587
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 99
9999 mem: location 1589 is 1229
9999 mem: location 1590 is 1583
9999 mem: location 1199 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1589 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 45 -> 46
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1587: 11 -> 10
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 46 -> 47
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 3
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 221 -> 222
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 102 -> 103
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 8617 in location 1084
9999 mem: storing 245 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 4
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 222 -> 223
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 223 -> 222
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 222 -> 223
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 101
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 223 -> 224
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 0
9999 mem: storing 40 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 103 -> 104
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 40
9999 mem: storing 1096 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1096
9999 mem: location 1309 is 1096
9999 mem: storing 101 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 33 -> 32
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 31 -> 32
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 47 -> 48
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 100
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1587
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 48 -> 47
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 33 -> 34
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 102
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 224 -> 225
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 1
9999 mem: storing 41 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 104 -> 105
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 41
9999 mem: storing 1098 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1098
9999 mem: location 1309 is 1098
9999 mem: storing 102 in location 1098
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 27 -> 28
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 33 -> 32
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 28 -> 29
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 101
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 35 -> 34
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 33 -> 34
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1571
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1574
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1575
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1574 is 7
9999 mem: storing 1 in location 1576
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1577
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1578
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1575 is 103
9999 mem: storing 0 in location 1580
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1574 is 7
9999 mem: storing 0 in location 1581
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 35
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1574 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 225 -> 226
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 2
9999 mem: storing 42 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 105 -> 106
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 42
9999 mem: storing 1100 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1100
9999 mem: location 1309 is 1100
9999 mem: storing 103 in location 1100
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 29 -> 30
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 103
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 30 -> 29
9999 mem: storing 0 in location 1253
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 102
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 29 -> 30
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 35 -> 34
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 30 -> 31
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1262
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 1 in location 1270
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 1
9999 mem: storing 0 in location 1271
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 3
9999 mem: storing 0 in location 1272
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 4
9999 mem: location 1274 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 4
9999 mem: location 1257 is 3
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 3
9999 mem: storing 4 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 226 -> 227
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 227 -> 228
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 3
9999 mem: storing 43 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 106 -> 107
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 43
9999 mem: storing 1102 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1102
9999 mem: location 1309 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 228 -> 227
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 227 -> 228
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 228 -> 229
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 4
9999 mem: storing 44 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 107 -> 108
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 44
9999 mem: storing 1104 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1104
9999 mem: location 1309 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 229 -> 228
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 228 -> 229
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 5
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 229 -> 230
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1316
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1318
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1319
9999 mem: storing 1 in location 1320
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1321
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1323
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 5
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 230 -> 231
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 5
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 231 -> 230
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 230 -> 231
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 0
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 231 -> 232
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 1
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 232 -> 233
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 1
9999 mem: storing 2 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 233 -> 234
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 2
9999 mem: storing 3 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 3
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 234 -> 235
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 3
9999 mem: storing 4 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 4
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 235 -> 236
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 5
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 4
9999 mem: storing 5 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 5
9999 mem: location 1318 is 4
9999 mem: storing 0 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 5
9999 mem: storing 6 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 6
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 236 -> 237
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 237 -> 238
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 6
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 238 -> 237
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 237 -> 238
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 238 -> 239
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 239 -> 240
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 240 -> 239
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 239 -> 240
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 240 -> 241
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 241 -> 240
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 240 -> 241
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 241 -> 242
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 242 -> 241
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 241 -> 242
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-line-on-insert-2
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 242 -> 243
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 243 -> 242
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 242 -> 243
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 243 -> 244
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 6
9999 mem: location 1297 is 5
9999 mem: storing 0 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 244 -> 243
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 243 -> 244
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 4
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1326
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 244 -> 245
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1330
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1331
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1332
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1330 is 6
9999 mem: storing 7 in location 1330
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1329 is 1008
9999 mem: location 1330 is 7
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 245 -> 246
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1169
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 7
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 246 -> 245
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 245 -> 246
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 246 -> 247
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 108 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1330 is 7
9999 mem: location 1333 is 5
9999 mem: storing 1 in location 1334
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1329 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 247 -> 246
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 246 -> 247
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 1362
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 1361 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1363
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1359 is 1008
9999 mem: location 1362 is 3
9999 mem: location 1363 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 247 -> 248
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 248 -> 247
9999 mem: storing 1008 in location 1359
9999 mem: incrementing refcount of 1008: 247 -> 248
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1360 is 1353
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1353 in location 1315
9999 mem: incrementing refcount of 1353: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1353
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 4
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 4
9999 mem: storing 4 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9999 mem: location 1354 is 4
9999 mem: location 1355 is 1335
9999 mem: location 1315 is 1353
9999 mem: skipping refcount at 1353
9998 run: address to copy is 1355
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1355 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 4 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 4
9999 mem: location 1318 is 4
9999 mem: storing 1 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
9999 mem: storing 1196 in location 1320
9999 mem: incrementing refcount of 1196: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1320 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1315 is 1353
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1353
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: decrementing refcount of 1353: 6 -> 5
9999 mem: storing 1353 in location 1360
9999 mem: incrementing refcount of 1353: 5 -> 6
9999 mem: storing 1 in location 1368
9999 mem: storing 1 in location 1369
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1369 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1359 is 1008
9999 mem: location 1360 is 1353
9999 mem: location 1361 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 3
9999 mem: storing 3 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1587
9999 mem: location 1157 is 0
9999 mem: location 1158 is 4
9999 mem: location 1159 is 4
9999 mem: location 1160 is 3
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1568
9999 mem: location 1164 is 0
9999 mem: location 2 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 3\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: screen-should-contain {"\n    .          .\n    .abcd↩     .\n    .efg       .\n    .abcd↩     .\n    .efg       .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
