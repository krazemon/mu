 102 run: assume-console {"\n    left-click 1, 4\n    press backspace\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {4: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {4: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {backspace: ()}
9992 load: after rewriting: press {backspace: ()}
9999 mem: storing 'left-click' event starting at 1323
9999 mem: storing 'press' event starting at 1327
9999 mem: storing console in 1331
9999 mem: storing console data in 1333
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1331
9999 mem: location 2 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1334
9999 mem: storing 17 in location 1335
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 67 -> 68
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1338
9999 mem: incrementing refcount of 1331: 0 -> 1
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1339
9999 mem: incrementing refcount of 1149: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1340
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1341
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1337 is 1008
9999 mem: location 1340 is 1
9999 mem: location 1341 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 68 -> 69
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1338 is 1331
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1298
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1301
9999 mem: incrementing refcount of 1331: 1 -> 2
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1301 is 1331
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "number"
9999 mem: location 1332 is 0
9999 mem: storing 0 in location 1302
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "array" "event")
9999 mem: location 1333 is 1321
9999 mem: storing 1321 in location 1303
9999 mem: incrementing refcount of 1321: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1303 is 1321
9999 mem: skipping refcount at 1321
9999 mem: storing 2 in location 1304
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1302 is 0
9999 mem: location 1304 is 2
9999 mem: storing 0 in location 1305
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1303 is 1321
9999 mem: skipping refcount at 1321
9998 run: base address is 1322
9999 mem: location 1302 is 0
9998 run: address to copy is 1323
9998 run: its type is event
9999 mem: location 1323 is 2
9999 mem: location 1324 is 65513
9999 mem: location 1325 is 1
9999 mem: location 1326 is 4
9999 mem: storing 2 in location 1307
9999 mem: storing 65513 in location 1308
9999 mem: storing 1 in location 1309
9999 mem: storing 4 in location 1310
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1302 is 0
9999 mem: storing 1 in location 1302
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 0
9999 mem: location 1333 is 1321
9999 mem: location 1302 is 1
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy to is 1332
9999 mem: storing 1 in location 1332
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1307 is 2
9999 mem: location 1308 is 65513
9999 mem: location 1309 is 1
9999 mem: location 1310 is 4
9999 mem: location 1301 is 1331
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 4]
9998 run: result 1 is 1331
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1342
9999 mem: storing 65513 in location 1343
9999 mem: storing 1 in location 1344
9999 mem: storing 4 in location 1345
9999 mem: decrementing refcount of 1331: 2 -> 1
9999 mem: storing 1331 in location 1338
9999 mem: incrementing refcount of 1331: 1 -> 2
9999 mem: storing 1 in location 1346
9999 mem: storing 0 in location 1347
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1342 is 2
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 1
9999 mem: location 1345 is 4
9999 mem: storing 65513 in location 1348
9999 mem: storing 1 in location 1349
9999 mem: storing 4 in location 1350
9999 mem: storing 1 in location 1351
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 1
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {t: "touch-event"}
9999 mem: location 1337 is 1008
9999 mem: location 1339 is 1149
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 1
9999 mem: location 1350 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1353
9999 mem: storing 31 in location 1354
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 69 -> 70
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1358
9999 mem: storing 1 in location 1359
9999 mem: storing 4 in location 1360
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1357 is 1149
9998 run: jumping to instruction 7
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 1
9999 mem: location 1360 is 4
9998 run: address to copy is 1359
9998 run: its type is "number"
9999 mem: location 1359 is 1
9999 mem: storing 1 in location 1361
 105 run: jump-if {click-row: "number"}, {: "offset"}
9999 mem: location 1361 is 1
9998 run: jumping to instruction 12
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1358 is 65513
9999 mem: location 1359 is 1
9999 mem: location 1360 is 4
9998 run: address to copy is 1360
9998 run: its type is "number"
9999 mem: location 1360 is 4
9999 mem: storing 4 in location 1362
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1363
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1362 is 4
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1364
 105 run: jump-unless {too-far-left?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 19
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1365
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1362 is 4
9999 mem: location 1365 is 7
9999 mem: storing 0 in location 1366
 105 run: jump-unless {too-far-right?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 25
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1367
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1368
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1369
9999 mem: incrementing refcount of 1168: 10 -> 11
 105 run: {editor: ("address" "editor-data")} <- snap-cursor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1149
9999 mem: location 1361 is 1
9999 mem: location 1362 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1236
9999 mem: incrementing refcount of 1149: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1237
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1238
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1236 is 1149
9998 run: jumping to instruction 8
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1239
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1240
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1235 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1187
 107 run: return {height: "number"}
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1241
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1242
9999 mem: incrementing refcount of 1168: 11 -> 12
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1168
9999 mem: storing 1168 in location 1243
9999 mem: incrementing refcount of 1168: 12 -> 13
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 13 -> 14
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1179
9999 mem: location 1171 is 0
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 1179
9999 mem: storing 1179 in location 1187
9999 mem: incrementing refcount of 1179: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1168: 14 -> 13
9999 mem: storing 1179 in location 1242
9999 mem: incrementing refcount of 1179: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1244
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1239 is 0
9999 mem: storing 0 in location 1245
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1237 is 1
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1157
9999 mem: storing 1 in location 1157
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1237 is 1
9999 mem: storing 1 in location 1246
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1238 is 4
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1158
9999 mem: storing 4 in location 1158
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1238 is 4
9999 mem: storing 4 in location 1247
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1168
9999 mem: storing 1168 in location 1248
9999 mem: incrementing refcount of 1168: 13 -> 14
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1179
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1242 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 97
9999 mem: storing 97 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 97
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
9999 mem: incrementing refcount of 1179: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
9999 mem: incrementing refcount of 1188: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1179: 15 -> 14
9999 mem: storing 1188 in location 1242
9999 mem: incrementing refcount of 1188: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1179
9999 mem: location 1171 is 0
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 1179
9999 mem: storing 1179 in location 1187
9999 mem: incrementing refcount of 1179: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1168: 15 -> 14
9999 mem: storing 1179 in location 1243
9999 mem: incrementing refcount of 1179: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1188
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1242 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 98
9999 mem: storing 98 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 98
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 15 -> 14
9999 mem: storing 1192 in location 1242
9999 mem: incrementing refcount of 1192: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
9999 mem: incrementing refcount of 1179: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
9999 mem: incrementing refcount of 1188: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1179: 17 -> 16
9999 mem: storing 1188 in location 1243
9999 mem: incrementing refcount of 1188: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1242 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 99
9999 mem: storing 99 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 99
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1187
9999 mem: incrementing refcount of 1196: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 15 -> 14
9999 mem: storing 1196 in location 1242
9999 mem: incrementing refcount of 1196: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 17 -> 16
9999 mem: storing 1192 in location 1243
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1242 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 32
9999 mem: storing 32 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 32
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1186
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1196
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 15 -> 14
9999 mem: storing 1200 in location 1242
9999 mem: incrementing refcount of 1200: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1196
9999 mem: storing 1196 in location 1187
9999 mem: incrementing refcount of 1196: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1196 in location 1243
9999 mem: incrementing refcount of 1196: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1247 is 4
9999 mem: storing 1 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1196
9999 mem: decrementing refcount of 1168: 14 -> 13
9999 mem: storing 1196 in location 1248
9999 mem: incrementing refcount of 1196: 16 -> 17
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1248 is 1196
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1153
9999 mem: storing 1196 in location 1153
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1242 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 100
9999 mem: storing 100 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 100
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
9999 mem: incrementing refcount of 1204: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 15 -> 14
9999 mem: storing 1204 in location 1242
9999 mem: incrementing refcount of 1204: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1186
9999 mem: incrementing refcount of 1196: 17 -> 18
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1196
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 18 -> 17
9999 mem: storing 1200 in location 1243
9999 mem: incrementing refcount of 1200: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1242 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 101
9999 mem: storing 101 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 101
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
9999 mem: incrementing refcount of 1208: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 15 -> 14
9999 mem: storing 1208 in location 1242
9999 mem: incrementing refcount of 1208: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 17 -> 16
9999 mem: storing 1204 in location 1243
9999 mem: incrementing refcount of 1204: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 5
9999 mem: storing 6 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1242 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 102
9999 mem: storing 102 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 102
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 6
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
9999 mem: incrementing refcount of 1212: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 15 -> 14
9999 mem: storing 1212 in location 1242
9999 mem: incrementing refcount of 1212: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 17 -> 16
9999 mem: storing 1208 in location 1243
9999 mem: incrementing refcount of 1208: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 6
9999 mem: storing 7 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 1
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1251
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1251 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1242 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 32
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 7
9999 mem: location 1240 is 7
9999 mem: storing 1 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1239 is 0
9999 mem: storing 0 in location 1245
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1244 is 1
9999 mem: storing 2 in location 1244
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 24
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1242 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 32
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 0
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
9999 mem: incrementing refcount of 1216: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 15 -> 14
9999 mem: storing 1216 in location 1242
9999 mem: incrementing refcount of 1216: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 17 -> 16
9999 mem: storing 1212 in location 1243
9999 mem: incrementing refcount of 1212: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 0
9999 mem: storing 1 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1242 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 103
9999 mem: storing 103 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 103
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 1
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1186
9999 mem: incrementing refcount of 1216: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1216
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1187
9999 mem: incrementing refcount of 1220: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 15 -> 14
9999 mem: storing 1220 in location 1242
9999 mem: incrementing refcount of 1220: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
9999 mem: incrementing refcount of 1212: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
9999 mem: incrementing refcount of 1216: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 17 -> 16
9999 mem: storing 1216 in location 1243
9999 mem: incrementing refcount of 1216: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 1
9999 mem: storing 2 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1220
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1242 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 104
9999 mem: storing 104 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 104
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 2
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1186
9999 mem: incrementing refcount of 1220: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1220
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1187
9999 mem: incrementing refcount of 1224: 12 -> 13
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 15 -> 14
9999 mem: storing 1224 in location 1242
9999 mem: incrementing refcount of 1224: 13 -> 14
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1186
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1216
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1187
9999 mem: incrementing refcount of 1220: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 17 -> 16
9999 mem: storing 1220 in location 1243
9999 mem: incrementing refcount of 1220: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 2
9999 mem: storing 3 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1224
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1242 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 105
9999 mem: storing 105 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 105
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 3
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1186
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1224
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1187
9999 mem: incrementing refcount of 1228: 11 -> 12
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 15 -> 14
9999 mem: storing 1228 in location 1242
9999 mem: incrementing refcount of 1228: 12 -> 13
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1186
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1220
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1187
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 17 -> 16
9999 mem: storing 1224 in location 1243
9999 mem: incrementing refcount of 1224: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 3
9999 mem: storing 4 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 1228
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1249
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1242 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 106
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1242 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 106
9999 mem: storing 106 in location 1252
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1252 is 106
9999 mem: storing 0 in location 1253
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1245 is 4
9999 mem: location 1240 is 7
9999 mem: storing 0 in location 1255
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1242 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1186
9999 mem: incrementing refcount of 1228: 13 -> 14
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1228
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 106
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1186 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1187
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1228: 14 -> 13
9999 mem: storing 0 in location 1242
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1243 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1186
9999 mem: incrementing refcount of 1224: 16 -> 17
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1224
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1187
9999 mem: incrementing refcount of 1228: 13 -> 14
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 17 -> 16
9999 mem: storing 1228 in location 1243
9999 mem: incrementing refcount of 1228: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1245 is 4
9999 mem: storing 5 in location 1245
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 66
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1250
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1245 is 5
9999 mem: location 1247 is 4
9999 mem: storing 0 in location 1256
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1250 is 0
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1257
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 1
9999 mem: storing 0 in location 1258
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1259
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1259 is 0
9998 run: jumping to instruction 80
 106 run: reply {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1236 is 1149
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 9 -> 8
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1370
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1371
9999 mem: incrementing refcount of 1168: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1372
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1357 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1373
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1370 is 0
9998 run: jumping to instruction 50
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1260
9999 mem: storing 1260 in location 1375
9999 mem: incrementing refcount of 1260: 0 -> 1
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1367 is 1
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1168
9999 mem: location 1372 is 1
9999 mem: location 1373 is 4
9999 mem: location 1371 is 1168
9999 mem: location 1370 is 0
9999 mem: location 1375 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1375 is 1260
9999 mem: skipping refcount at 1260
9999 mem: storing 1 in location 1261
9999 mem: storing 1 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 1168 in location 1264
9999 mem: storing 1 in location 1265
9999 mem: storing 4 in location 1266
9999 mem: storing 1168 in location 1267
9999 mem: storing 0 in location 1268
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1357 is 1149
9999 mem: location 1375 is 1260
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1172
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1175
9999 mem: incrementing refcount of 1149: 9 -> 10
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1176
9999 mem: incrementing refcount of 1260: 1 -> 2
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1177
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1176 is 1260
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1165
9999 mem: incrementing refcount of 1260: 2 -> 3
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1386
9999 mem: storing 1386 in location 1167
9999 mem: incrementing refcount of 1386: 0 -> 1
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1165 is 1260
9999 mem: location 1166 is 0
9999 mem: location 1167 is 1386
9999 mem: skipping refcount at 1386
9999 mem: location 1167 is 1386
9999 mem: skipping refcount at 1386
9999 mem: storing 1260 in location 1387
9999 mem: storing 0 in location 1388
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1386
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1386
9999 mem: storing 1386 in location 1177
9999 mem: incrementing refcount of 1386: 1 -> 2
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1177 is 1386
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1160
9999 mem: storing 1386 in location 1160
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1178
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1178
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1178 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1175 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 10 -> 9
9999 mem: storing 1149 in location 1357
9999 mem: incrementing refcount of 1149: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1357 is 1149
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1340
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1341
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1337 is 1008
9999 mem: location 1340 is 1
9999 mem: location 1341 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 72 -> 73
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1167
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 4
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1338 is 1331
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1298
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1301
9999 mem: incrementing refcount of 1331: 2 -> 3
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1301 is 1331
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 1
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "number"
9999 mem: location 1332 is 1
9999 mem: storing 1 in location 1302
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 1
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "array" "event")
9999 mem: location 1333 is 1321
9999 mem: storing 1321 in location 1303
9999 mem: incrementing refcount of 1321: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1303 is 1321
9999 mem: skipping refcount at 1321
9999 mem: storing 2 in location 1304
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1302 is 1
9999 mem: location 1304 is 2
9999 mem: storing 0 in location 1305
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1303 is 1321
9999 mem: skipping refcount at 1321
9998 run: base address is 1322
9999 mem: location 1302 is 1
9998 run: address to copy is 1327
9998 run: its type is event
9999 mem: location 1327 is 0
9999 mem: location 1328 is 8
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1307
9999 mem: storing 8 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1302 is 1
9999 mem: storing 2 in location 1302
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 1
9999 mem: location 1333 is 1321
9999 mem: location 1302 is 2
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy to is 1332
9999 mem: storing 2 in location 1332
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1307 is 0
9999 mem: location 1308 is 8
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1301 is 1331
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 8, 0, 0]
9998 run: result 1 is 1331
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1342
9999 mem: storing 8 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: decrementing refcount of 1331: 3 -> 2
9999 mem: storing 1331 in location 1338
9999 mem: incrementing refcount of 1331: 2 -> 3
9999 mem: storing 1 in location 1346
9999 mem: storing 0 in location 1347
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1342 is 0
9999 mem: location 1343 is 8
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1351
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1337 is 1008
9999 mem: location 1339 is 1149
9999 mem: location 1342 is 0
9999 mem: location 1343 is 8
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1389
9999 mem: storing 102 in location 1390
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1392
9999 mem: incrementing refcount of 1008: 73 -> 74
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1394
9999 mem: storing 8 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1398
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1393 is 1149
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1392 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1187
 106 run: return {width: "number"}
9999 mem: location 1187 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1399
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1392 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1187
 106 run: return {height: "number"}
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1400
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1401
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1402
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1196
9999 mem: storing 1196 in location 1403
9999 mem: incrementing refcount of 1196: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1404
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1405
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1404 is 1
9999 mem: storing 1 in location 1406
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1405 is 4
9999 mem: storing 4 in location 1407
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1394 is 0
9999 mem: location 1395 is 8
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: storing 8 in location 1408
9999 mem: storing 1 in location 1409
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1448
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1448 is 0
9998 run: jumping to instruction 128
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1452
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 167
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1463
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 206
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1464
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 227
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1467
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1467 is 0
9998 run: jumping to instruction 249
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1468
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 285
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1408 is 8
9999 mem: storing 0 in location 1469
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 321
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1408 is 8
9999 mem: storing 1 in location 1470
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1456
9999 mem: incrementing refcount of 1168: 14 -> 15
 105 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"}, {backspaced-cell: ("address" "duplex-list" "character")} <- delete-before-cursor {editor: ("address" "editor-data")}, {screen: ("address" "screen")}
9999 mem: location 1393 is 1149
9999 mem: location 1392 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 22
9999 mem: allocating size 24
9999 mem: new alloc: 1493
9999 mem: storing 22 in location 1494
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1496
9999 mem: incrementing refcount of 1149: 11 -> 12
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 76 -> 77
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1196
9999 mem: storing 1196 in location 1498
9999 mem: incrementing refcount of 1196: 18 -> 19
 106 run: {data: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1499
9999 mem: incrementing refcount of 1168: 15 -> 16
 106 run: {prev: ("address" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1186
9999 mem: incrementing refcount of 1196: 19 -> 20
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1196
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1186 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1199
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1199 is 1192
9999 mem: storing 1192 in location 1187
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: storing 1192 in location 1500
9999 mem: incrementing refcount of 1192: 17 -> 18
 106 run: {go-render?: "boolean"}, {backspaced-cell: ("address" "duplex-list" "character")} <- copy {0: "literal", "no-more-render": ()}, {0: "literal", "nothing-deleted": ()}
9999 mem: storing 0 in location 1501
9999 mem: storing 0 in location 1502
 106 run: jump-if {prev: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1500 is 1192
9998 run: jumping to instruction 10
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"delete-before-cursor": "literal-string"}
  10 app: delete-before-cursor 
 106 run: {original-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1503
 106 run: {editor: ("address" "editor-data")}, {scroll?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "editor-data")}
9999 mem: location 1496 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1517
9999 mem: storing 20 in location 1518
 107 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1520
9999 mem: incrementing refcount of 1149: 12 -> 13
 107 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1196
9999 mem: storing 1196 in location 1521
9999 mem: incrementing refcount of 1196: 20 -> 21
 107 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1522
 107 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 4
9999 mem: storing 4 in location 1523
 107 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1524
 107 run: {at-left-margin?: "boolean"} <- equal {cursor-column: "number"}, {left: "number"}
9999 mem: location 1523 is 4
9999 mem: location 1524 is 0
9999 mem: storing 0 in location 1525
 107 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 107 run: trace {10: "literal"}, {"app": "literal-string"}, {"decrementing cursor column": "literal-string"}
  10 app: decrementing cursor column 
 107 run: {cursor-column: "number"} <- subtract {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1523 is 4
9999 mem: storing 3 in location 1523
 107 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 4
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1523 is 3
9999 mem: location 1520 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1158
9999 mem: storing 3 in location 1158
 107 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1526
 107 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1520 is 1149
9999 mem: location 1526 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1149: 13 -> 12
9999 mem: storing 1149 in location 1496
9999 mem: incrementing refcount of 1149: 12 -> 13
9999 mem: storing 0 in location 1504
 106 run: {backspaced-cell: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1196
9999 mem: storing 1196 in location 1502
9999 mem: incrementing refcount of 1196: 21 -> 22
 106 run: {data: ("address" "duplex-list" "character")} <- remove_2 {before-cursor: ("address" "duplex-list" "character")}, {data: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1196
9999 mem: location 1499 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1172
 107 run: {x: ("address" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1175
9999 mem: incrementing refcount of 1196: 22 -> 23
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1176
9999 mem: incrementing refcount of 1168: 16 -> 17
 107 run: jump-if {x: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1175 is 1196
9998 run: jumping to instruction 6
 107 run: {next-node: ("address" "duplex-list" "character")} <- get {x: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1177
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: {prev-node: ("address" "duplex-list" "character")} <- get {x: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1199
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1199 is 1192
9999 mem: storing 1192 in location 1178
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: {x: ("address" "duplex-list" "character"), "lookup": ()} <- put {x: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {0: "literal"}
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1192
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy to is 1198
9999 mem: storing 0 in location 1198
 107 run: {x: ("address" "duplex-list" "character"), "lookup": ()} <- put {x: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 32
9999 mem: location 1198 is 0
9999 mem: location 1199 is 1192
9999 mem: location 1175 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy to is 1199
9999 mem: storing 0 in location 1199
 107 run: jump-unless {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 1200
9998 run: jump-unless fell through
 107 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {prev-node: ("address" "duplex-list" "character")}
9999 mem: location 1177 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1178 is 1192
9999 mem: location 1177 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy to is 1203
9999 mem: storing 1192 in location 1203
 107 run: jump-unless {prev-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1178 is 1192
9998 run: jump-unless fell through
 107 run: {prev-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {prev-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1178 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1196
9999 mem: location 1195 is 1188
9999 mem: location 1177 is 1200
9999 mem: location 1178 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1194
9999 mem: storing 1200 in location 1194
 107 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1176 is 1168
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1168
9999 mem: decrementing refcount of 1168: 17 -> 16
9999 mem: storing 1168 in location 1499
9999 mem: incrementing refcount of 1168: 16 -> 17
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1500 is 1192
9999 mem: decrementing refcount of 1196: 23 -> 22
9999 mem: storing 1192 in location 1498
9999 mem: incrementing refcount of 1192: 19 -> 20
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1196
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1498 is 1192
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1153
9999 mem: storing 1192 in location 1153
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {scroll?: "boolean"}, {: "offset"}
9999 mem: location 1504 is 0
9998 run: jumping to instruction 22
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1497 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1187
 107 run: return {width: "number"}
9999 mem: location 1187 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1505
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1506
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1507
 106 run: {same-row?: "boolean"} <- equal {cursor-row: "number"}, {original-row: "number"}
9999 mem: location 1506 is 1
9999 mem: location 1503 is 1
9999 mem: storing 1 in location 1508
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-if {same-row?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 1
9998 run: jumping to instruction 31
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1509
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1496 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1510
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
9990 schedule: next_2/delete-before-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1200
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 17 -> 18
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1511
9999 mem: incrementing refcount of 1200: 18 -> 19
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1497 is 1008
9999 mem: location 1506 is 1
9999 mem: location 1507 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: {curr-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1507 is 3
9999 mem: storing 3 in location 1512
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1512 is 3
9999 mem: location 1510 is 7
9999 mem: storing 0 in location 1513
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 43
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1511 is 1200
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1192
9999 mem: location 1511 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 100
9999 mem: storing 100 in location 1514
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 100
9999 mem: storing 0 in location 1515
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1497 is 1008
9999 mem: location 1514 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1277
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 100
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 3
9999 mem: storing 13 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 100
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 100
9999 mem: location 1277 is 7
9999 mem: storing 100 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 13
9998 run: address to copy to is 1042
9999 mem: location 1294 is 100
9999 mem: location 1295 is 7
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 80 -> 79
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1512 is 3
9999 mem: storing 4 in location 1512
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1511 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
9999 mem: incrementing refcount of 1200: 19 -> 20
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1192
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 20 -> 19
9999 mem: storing 1204 in location 1511
9999 mem: incrementing refcount of 1204: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 38
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1512 is 4
9999 mem: location 1510 is 7
9999 mem: storing 0 in location 1513
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 43
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1511 is 1204
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1511 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 101
9999 mem: storing 101 in location 1514
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 101
9999 mem: storing 0 in location 1515
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1497 is 1008
9999 mem: location 1514 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1277
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 101
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 4
9999 mem: storing 14 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 101
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 101
9999 mem: location 1277 is 7
9999 mem: storing 101 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 14
9998 run: address to copy to is 1044
9999 mem: location 1294 is 101
9999 mem: location 1295 is 7
9999 mem: storing 101 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 5
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1512 is 4
9999 mem: storing 5 in location 1512
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1511 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
9999 mem: incrementing refcount of 1208: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 19 -> 18
9999 mem: storing 1208 in location 1511
9999 mem: incrementing refcount of 1208: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 38
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1512 is 5
9999 mem: location 1510 is 7
9999 mem: storing 0 in location 1513
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 43
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1511 is 1208
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1511 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 102
9999 mem: storing 102 in location 1514
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 102
9999 mem: storing 0 in location 1515
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1497 is 1008
9999 mem: location 1514 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1277
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 102
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 5
9999 mem: storing 15 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 102
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 102
9999 mem: location 1277 is 7
9999 mem: storing 102 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 15
9998 run: address to copy to is 1046
9999 mem: location 1294 is 102
9999 mem: location 1295 is 7
9999 mem: storing 102 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 6 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 6
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1512 is 5
9999 mem: storing 6 in location 1512
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1511 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
9999 mem: incrementing refcount of 1212: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 19 -> 18
9999 mem: storing 1212 in location 1511
9999 mem: incrementing refcount of 1212: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 38
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1512 is 6
9999 mem: location 1510 is 7
9999 mem: storing 0 in location 1513
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 43
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1511 is 1212
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1511 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1514
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 32
9999 mem: storing 0 in location 1515
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1497 is 1008
9999 mem: location 1514 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1277
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 6
9999 mem: storing 16 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 16
9998 run: address to copy to is 1048
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 7 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 7
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1497
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1512 is 6
9999 mem: storing 7 in location 1512
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1511 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
9999 mem: incrementing refcount of 1212: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 19 -> 18
9999 mem: storing 1216 in location 1511
9999 mem: incrementing refcount of 1216: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 38
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1512 is 7
9999 mem: location 1510 is 7
9999 mem: storing 1 in location 1513
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1501
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 1
9998 run: jump-unless fell through
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "1"}, {go-render?: "boolean"}, {backspaced-cell: ("address" "duplex-list" "character")}
9999 mem: location 1496 is 1149
9999 mem: location 1497 is 1008
9999 mem: location 1501 is 1
9999 mem: location 1502 is 1196
9999 abandon: saving in free-list of size 24
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9998 run: result 1 is 1008
9998 run: result 2 is 1
9998 run: result 3 is 1196
9999 mem: decrementing refcount of 1149: 13 -> 12
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 12 -> 13
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1392
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: storing 1 in location 1398
9999 mem: storing 1196 in location 1471
9999 mem: incrementing refcount of 1196: 22 -> 23
 105 run: jump-unless {backspaced-cell: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1471 is 1196
9998 run: jump-unless fell through
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1458
9999 mem: incrementing refcount of 1168: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1404
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1405
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1192
9999 mem: decrementing refcount of 1196: 23 -> 22
9999 mem: storing 1192 in location 1403
9999 mem: incrementing refcount of 1192: 21 -> 22
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 1386
9999 mem: storing 1386 in location 1413
9999 mem: incrementing refcount of 1386: 2 -> 3
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1413 is 1386
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1413 is 1386
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1386 in location 1186
9999 mem: incrementing refcount of 1386: 3 -> 4
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1186 is 1386
9999 mem: skipping refcount at 1386
9999 mem: location 1387 is 1260
9999 mem: location 1388 is 0
9999 mem: location 1186 is 1386
9999 mem: skipping refcount at 1386
9998 run: address to copy is 1387
9998 run: its type is ("address" "operation")
9999 mem: location 1387 is 1260
9999 mem: storing 1260 in location 1187
9999 mem: incrementing refcount of 1260: 3 -> 4
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1187 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1260
9999 mem: storing 1260 in location 1412
9999 mem: incrementing refcount of 1260: 4 -> 5
 105 run: {deletion: "delete-operation"}, {is-delete?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1412 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 1
9999 mem: location 1262 is 1
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1168
9999 mem: location 1265 is 1
9999 mem: location 1266 is 4
9999 mem: location 1267 is 1168
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1412 is 1260
9999 mem: skipping refcount at 1260
9999 mem: storing 0 in location 1424
 105 run: jump-unless {is-delete?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 352
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1539
9999 mem: decrementing refcount of 1260: 5 -> 4
9999 mem: storing 1539 in location 1412
9999 mem: incrementing refcount of 1539: 0 -> 1
 105 run: {deleted-until: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1403 is 1192
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 22 -> 23
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1200
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 19 -> 20
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1200
9999 mem: storing 1200 in location 1466
9999 mem: incrementing refcount of 1200: 20 -> 21
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {2: "literal", "delete-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {backspaced-cell: ("address" "duplex-list" "character"), "deleted": ()}, {before-cursor: ("address" "duplex-list" "character"), "delete-from": ()}, {deleted-until: ("address" "duplex-list" "character")}, {1: "literal", "coalesce-backspace": ()}
9999 mem: location 1406 is 1
9999 mem: location 1407 is 4
9999 mem: location 1456 is 1168
9999 mem: location 1404 is 1
9999 mem: location 1405 is 1
9999 mem: location 1458 is 1168
9999 mem: location 1471 is 1196
9999 mem: location 1403 is 1192
9999 mem: location 1466 is 1200
9999 mem: location 1412 is 1539
9999 mem: skipping refcount at 1539
9999 mem: location 1412 is 1539
9999 mem: skipping refcount at 1539
9999 mem: storing 2 in location 1540
9999 mem: storing 1 in location 1541
9999 mem: storing 4 in location 1542
9999 mem: storing 1168 in location 1543
9999 mem: storing 1 in location 1544
9999 mem: storing 1 in location 1545
9999 mem: storing 1168 in location 1546
9999 mem: storing 1196 in location 1547
9999 mem: storing 1192 in location 1548
9999 mem: storing 1200 in location 1549
9999 mem: storing 1 in location 1550
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1393 is 1149
9999 mem: location 1412 is 1539
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1172
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1175
9999 mem: incrementing refcount of 1149: 13 -> 14
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1176
9999 mem: incrementing refcount of 1539: 1 -> 2
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 1386
9999 mem: storing 1386 in location 1177
9999 mem: incrementing refcount of 1386: 4 -> 5
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1176 is 1539
9999 mem: location 1177 is 1386
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1539 in location 1165
9999 mem: incrementing refcount of 1539: 2 -> 3
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1386 in location 1166
9999 mem: incrementing refcount of 1386: 5 -> 6
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1551
9999 mem: storing 1551 in location 1167
9999 mem: incrementing refcount of 1551: 0 -> 1
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1165 is 1539
9999 mem: location 1166 is 1386
9999 mem: location 1167 is 1551
9999 mem: skipping refcount at 1551
9999 mem: location 1167 is 1551
9999 mem: skipping refcount at 1551
9999 mem: storing 1539 in location 1552
9999 mem: storing 1386 in location 1553
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1551
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1551
9999 mem: decrementing refcount of 1386: 6 -> 5
9999 mem: storing 1551 in location 1177
9999 mem: incrementing refcount of 1551: 1 -> 2
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1386
9999 mem: location 1161 is 0
9999 mem: location 1177 is 1551
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1160
9999 mem: storing 1551 in location 1160
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1178
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1178
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1178 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1175 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 14 -> 13
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 13 -> 14
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1392 is 1008
9999 mem: location 1393 is 1149
9999 mem: location 1398 is 1
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: decrementing refcount of 1149: 14 -> 13
9999 mem: storing 1149 in location 1339
9999 mem: incrementing refcount of 1149: 13 -> 14
9999 mem: storing 1 in location 1352
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "screen")} <- editor-render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1337 is 1008
9999 mem: location 1339 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1140
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1144
9999 mem: incrementing refcount of 1149: 14 -> 15
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1144 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1144 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1145
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1144 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1144 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1146
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "screen")}, {editor: ("address" "editor-data")}
9999 mem: location 1143 is 1008
9999 mem: location 1144 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1236
9999 mem: incrementing refcount of 1149: 15 -> 16
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1236 is 1149
9998 run: jumping to instruction 6
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1237
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1235 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1187
 107 run: return {height: "number"}
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1238
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 7
9999 mem: storing 7 in location 1239
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1240
9999 mem: incrementing refcount of 1168: 18 -> 19
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1168
9999 mem: storing 1168 in location 1241
9999 mem: incrementing refcount of 1168: 19 -> 20
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1179
9999 mem: location 1171 is 0
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 1179
9999 mem: storing 1179 in location 1187
9999 mem: incrementing refcount of 1179: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1168: 21 -> 20
9999 mem: storing 1179 in location 1240
9999 mem: incrementing refcount of 1179: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1242
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1243
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1244
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1245
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1246
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1153 is 1192
9999 mem: storing 1192 in location 1247
9999 mem: incrementing refcount of 1192: 23 -> 24
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1243 is 1
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1179
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 0
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1240 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 97
9999 mem: storing 97 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1554
9999 mem: storing 10 in location 1555
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 97
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 97
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 0
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 97
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 97
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 0
9999 mem: storing 10 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 97
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 97
9999 mem: location 1277 is 7
9999 mem: storing 97 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 10
9998 run: address to copy to is 1036
9999 mem: location 1294 is 97
9999 mem: location 1295 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
9999 mem: incrementing refcount of 1179: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
9999 mem: incrementing refcount of 1188: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1179: 19 -> 18
9999 mem: storing 1188 in location 1240
9999 mem: incrementing refcount of 1188: 17 -> 18
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1168
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1168
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1179
9999 mem: location 1171 is 0
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1170 is 1179
9999 mem: storing 1179 in location 1187
9999 mem: incrementing refcount of 1179: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1168: 21 -> 20
9999 mem: storing 1179 in location 1241
9999 mem: incrementing refcount of 1179: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 0
9999 mem: storing 1 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1188
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1240 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1189
9998 run: its type is "character"
9999 mem: location 1189 is 98
9999 mem: storing 98 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 98
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 98
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 98
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 98
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 98
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 1
9999 mem: storing 11 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 98
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 98
9999 mem: location 1277 is 7
9999 mem: storing 98 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 11
9998 run: address to copy to is 1038
9999 mem: location 1294 is 98
9999 mem: location 1295 is 7
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 2
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
9999 mem: incrementing refcount of 1188: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
9999 mem: incrementing refcount of 1192: 24 -> 25
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 19 -> 18
9999 mem: storing 1192 in location 1240
9999 mem: incrementing refcount of 1192: 25 -> 26
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1186
9999 mem: incrementing refcount of 1179: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1179
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 97
9999 mem: location 1181 is 1188
9999 mem: location 1182 is 1168
9999 mem: location 1186 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1181 is 1188
9999 mem: storing 1188 in location 1187
9999 mem: incrementing refcount of 1188: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1188
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: decrementing refcount of 1179: 21 -> 20
9999 mem: storing 1188 in location 1241
9999 mem: incrementing refcount of 1188: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 1
9999 mem: storing 2 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1200
9999 mem: location 1195 is 1188
9999 mem: location 1240 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 99
9999 mem: storing 99 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 99
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 99
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 99
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 99
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 99
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 2
9999 mem: storing 12 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 99
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 99
9999 mem: location 1277 is 7
9999 mem: storing 99 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 12
9998 run: address to copy to is 1040
9999 mem: location 1294 is 99
9999 mem: location 1295 is 7
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 3
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 26 -> 27
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1200
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 21 -> 22
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1192: 27 -> 26
9999 mem: storing 1200 in location 1240
9999 mem: incrementing refcount of 1200: 22 -> 23
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1188 in location 1186
9999 mem: incrementing refcount of 1188: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1188
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 98
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1179
9999 mem: location 1186 is 1188
9999 mem: skipping refcount at 1188
9998 run: address to copy is 1190
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1187
9999 mem: incrementing refcount of 1192: 26 -> 27
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1188: 21 -> 20
9999 mem: storing 1192 in location 1241
9999 mem: incrementing refcount of 1192: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 2
9999 mem: storing 3 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 3
9999 mem: location 1246 is 3
9999 mem: storing 1 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1192
9999 mem: decrementing refcount of 1192: 28 -> 27
9999 mem: storing 1192 in location 1247
9999 mem: incrementing refcount of 1192: 27 -> 28
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1192
9999 mem: location 1240 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 100
9999 mem: storing 100 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 100
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 100
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 100
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 3
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 100
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 100
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 3
9999 mem: storing 13 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 100
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 100
9999 mem: location 1277 is 7
9999 mem: storing 100 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 13
9998 run: address to copy to is 1042
9999 mem: location 1294 is 100
9999 mem: location 1295 is 7
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
9999 mem: incrementing refcount of 1200: 23 -> 24
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1192
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 24 -> 23
9999 mem: storing 1204 in location 1240
9999 mem: incrementing refcount of 1204: 19 -> 20
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1186
9999 mem: incrementing refcount of 1192: 28 -> 29
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1192
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 99
9999 mem: location 1194 is 1200
9999 mem: location 1195 is 1188
9999 mem: location 1186 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1194 is 1200
9999 mem: storing 1200 in location 1187
9999 mem: incrementing refcount of 1200: 23 -> 24
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1192: 29 -> 28
9999 mem: storing 1200 in location 1241
9999 mem: incrementing refcount of 1200: 24 -> 25
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 3
9999 mem: storing 4 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 4
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1240 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 101
9999 mem: storing 101 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 101
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 101
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 101
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 4
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 101
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 101
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 4
9999 mem: storing 14 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 101
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 101
9999 mem: location 1277 is 7
9999 mem: storing 101 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 14
9998 run: address to copy to is 1044
9999 mem: location 1294 is 101
9999 mem: location 1295 is 7
9999 mem: storing 101 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 5
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
9999 mem: incrementing refcount of 1204: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
9999 mem: incrementing refcount of 1208: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 21 -> 20
9999 mem: storing 1208 in location 1240
9999 mem: incrementing refcount of 1208: 19 -> 20
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1186
9999 mem: incrementing refcount of 1200: 25 -> 26
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1200
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 100
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1192
9999 mem: location 1186 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1187
9999 mem: incrementing refcount of 1204: 20 -> 21
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 26 -> 25
9999 mem: storing 1204 in location 1241
9999 mem: incrementing refcount of 1204: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 4
9999 mem: storing 5 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 5
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1240 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 102
9999 mem: storing 102 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 102
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 102
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 102
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 5
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 102
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 102
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 5
9999 mem: storing 15 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 102
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 102
9999 mem: location 1277 is 7
9999 mem: storing 102 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 15
9998 run: address to copy to is 1046
9999 mem: location 1294 is 102
9999 mem: location 1295 is 7
9999 mem: storing 102 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 6 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 6
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
9999 mem: incrementing refcount of 1212: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 21 -> 20
9999 mem: storing 1212 in location 1240
9999 mem: incrementing refcount of 1212: 19 -> 20
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1186
9999 mem: incrementing refcount of 1204: 22 -> 23
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1204
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 101
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1186 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1187
9999 mem: incrementing refcount of 1208: 20 -> 21
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 23 -> 22
9999 mem: storing 1208 in location 1241
9999 mem: incrementing refcount of 1208: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 5
9999 mem: storing 6 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 6
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1240 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 32
9999 mem: storing 32 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 32
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 32
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 6
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 32
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 6
9999 mem: storing 16 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 16
9998 run: address to copy to is 1048
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 7 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 7
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
9999 mem: incrementing refcount of 1212: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
9999 mem: incrementing refcount of 1216: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 21 -> 20
9999 mem: storing 1216 in location 1240
9999 mem: incrementing refcount of 1216: 19 -> 20
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 22 -> 23
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 102
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1187
9999 mem: incrementing refcount of 1212: 20 -> 21
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 23 -> 22
9999 mem: storing 1212 in location 1241
9999 mem: incrementing refcount of 1212: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 6
9999 mem: storing 7 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 1
9999 mem: location 1245 is 1
9999 mem: storing 1 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 7
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1240 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 103
9999 mem: storing 103 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 103
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 103
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 103
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 7
9999 mem: location 1239 is 7
9999 mem: storing 1 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1255
 106 run: print {screen: ("address" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1235 is 1008
9999 mem: location 1255 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 8617
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 1
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 10
9999 mem: location 1285 is 7
9999 mem: storing 17 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 8617
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 8617
9999 mem: location 1277 is 245
9999 mem: storing 8617 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 17
9998 run: address to copy to is 1050
9999 mem: location 1294 is 8617
9999 mem: location 1295 is 245
9999 mem: storing 8617 in location 1050
9999 mem: storing 245 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 8 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 8
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1244
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1243 is 1
9999 mem: storing 2 in location 1243
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1243 is 2
9999 mem: location 1244 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 2
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1235
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1240 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 103
9999 mem: storing 103 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 103
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 103
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 103
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 0
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 103
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 103
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 0
9999 mem: storing 20 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 103
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 103
9999 mem: location 1277 is 7
9999 mem: storing 103 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 20
9998 run: address to copy to is 1056
9999 mem: location 1294 is 103
9999 mem: location 1295 is 7
9999 mem: storing 103 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1216
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1186
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1216
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1187
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 21 -> 20
9999 mem: storing 1220 in location 1240
9999 mem: incrementing refcount of 1220: 17 -> 18
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1186
9999 mem: incrementing refcount of 1212: 22 -> 23
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1212
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 32
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1186 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1187
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 23 -> 22
9999 mem: storing 1216 in location 1241
9999 mem: incrementing refcount of 1216: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 0
9999 mem: storing 1 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1220
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1240 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 104
9999 mem: storing 104 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 104
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 104
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 104
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 104
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 1
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 104
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 104
  90 print-character: 104 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 104
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 1
9999 mem: storing 21 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 104
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 104
9999 mem: location 1277 is 7
9999 mem: storing 104 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 21
9998 run: address to copy to is 1058
9999 mem: location 1294 is 104
9999 mem: location 1295 is 7
9999 mem: storing 104 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 2
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1186
9999 mem: incrementing refcount of 1220: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1220
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1187
9999 mem: incrementing refcount of 1224: 16 -> 17
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 19 -> 18
9999 mem: storing 1224 in location 1240
9999 mem: incrementing refcount of 1224: 17 -> 18
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1186
9999 mem: incrementing refcount of 1216: 22 -> 23
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1216
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 103
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1186 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1187
9999 mem: incrementing refcount of 1220: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 23 -> 22
9999 mem: storing 1220 in location 1241
9999 mem: incrementing refcount of 1220: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 1
9999 mem: storing 2 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1224
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1240 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 105
9999 mem: storing 105 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 105
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 105
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 105
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 105
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 2
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 105
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 105
  90 print-character: 105 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 105
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 2
9999 mem: storing 22 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 105
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 105
9999 mem: location 1277 is 7
9999 mem: storing 105 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 22
9998 run: address to copy to is 1060
9999 mem: location 1294 is 105
9999 mem: location 1295 is 7
9999 mem: storing 105 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 3
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1186
9999 mem: incrementing refcount of 1224: 18 -> 19
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1224
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1187
9999 mem: incrementing refcount of 1228: 15 -> 16
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 19 -> 18
9999 mem: storing 1228 in location 1240
9999 mem: incrementing refcount of 1228: 16 -> 17
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1186
9999 mem: incrementing refcount of 1220: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1220
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 104
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1186 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1187
9999 mem: incrementing refcount of 1224: 18 -> 19
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 21 -> 20
9999 mem: storing 1224 in location 1241
9999 mem: incrementing refcount of 1224: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 2
9999 mem: storing 3 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 1228
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1238 is 5
9999 mem: storing 0 in location 1248
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1249
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1249 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1240 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 106
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1240 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 106
9999 mem: storing 106 in location 1251
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1242 is 7
9999 mem: location 1251 is 106
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1554
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1557
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1558
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1557 is 7
9999 mem: storing 1 in location 1559
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1558 is 106
9999 mem: storing 0 in location 1560
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1560 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1561
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1559 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1558 is 106
9999 mem: storing 0 in location 1563
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1563 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1557 is 7
9999 mem: storing 0 in location 1564
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1557 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1242
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 106
9999 mem: storing 0 in location 1252
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1244 is 3
9999 mem: location 1239 is 7
9999 mem: storing 0 in location 1254
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 64
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1235 is 1008
9999 mem: location 1251 is 106
9999 mem: location 1242 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1279
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 106
  90 print-character: 106 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 106
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 3
9999 mem: storing 23 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 106
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 106
9999 mem: location 1277 is 7
9999 mem: storing 106 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 23
9998 run: address to copy to is 1062
9999 mem: location 1294 is 106
9999 mem: location 1295 is 7
9999 mem: storing 106 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1240 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1186
9999 mem: incrementing refcount of 1228: 17 -> 18
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1228
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 106
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1186 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1187
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1228: 18 -> 17
9999 mem: storing 0 in location 1240
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1241 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1186
9999 mem: incrementing refcount of 1224: 20 -> 21
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1186 is 1224
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 105
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1186 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1187
9999 mem: incrementing refcount of 1228: 17 -> 18
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1187 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 21 -> 20
9999 mem: storing 1228 in location 1241
9999 mem: incrementing refcount of 1228: 18 -> 19
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1244 is 3
9999 mem: storing 4 in location 1244
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jumping to instruction 70
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1240 is 0
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1152
9999 mem: storing 0 in location 1152
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1249
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1244 is 4
9999 mem: location 1246 is 3
9999 mem: storing 0 in location 1256
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1249 is 0
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1257
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1243 is 2
9999 mem: location 1245 is 1
9999 mem: storing 0 in location 1258
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1259
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1259 is 0
9998 run: jumping to instruction 82
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1243 is 2
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1156
9999 mem: storing 2 in location 1156
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1245 is 1
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1157
9999 mem: storing 1 in location 1157
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1246 is 3
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1158
9999 mem: storing 3 in location 1158
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1247 is 1192
9999 mem: location 1236 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy to is 1153
9999 mem: storing 1192 in location 1153
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1243 is 2
9999 mem: location 1244 is 4
9999 mem: location 1235 is 1008
9999 mem: location 1236 is 1149
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 4
9999 mem: storing 2 in location 1147
9999 mem: storing 4 in location 1148
 105 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1143 is 1008
9999 mem: location 1148 is 4
9999 mem: location 1146 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1120
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1121
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 4
9999 mem: storing 24 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 24
9998 run: address to copy to is 1064
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 5
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 102 -> 101
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 5
9999 mem: storing 25 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 25
9998 run: address to copy to is 1066
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 6 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 6
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 6
9999 mem: storing 26 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 26
9998 run: address to copy to is 1068
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 7 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 7
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 2
9999 mem: location 1281 is 10
9999 mem: storing 20 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 20
9999 mem: location 1285 is 7
9999 mem: storing 27 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 27
9998 run: address to copy to is 1070
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 8 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 8
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 7
9999 mem: storing 1 in location 1125
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1147 is 2
9999 mem: storing 3 in location 1147
 105 run: draw-horizontal {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1143 is 1008
9999 mem: location 1147 is 3
9999 mem: location 1145 is 0
9999 mem: location 1146 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1298
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1301
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1302
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1303
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1304
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1305
9999 mem: storing 1 in location 1306
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1307
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1310 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1309
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1302 is 3
9999 mem: location 1303 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1301
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 0
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 0
9999 mem: storing 30 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 30
9998 run: address to copy to is 1076
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1076
9999 mem: storing 245 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 0
9999 mem: storing 1 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 1
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 1
9999 mem: storing 31 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 31
9998 run: address to copy to is 1078
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1078
9999 mem: storing 245 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 2
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 1
9999 mem: storing 2 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 2
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 2
9999 mem: storing 32 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 32
9998 run: address to copy to is 1080
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1080
9999 mem: storing 245 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 3
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 2
9999 mem: storing 3 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 3
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 3
9999 mem: storing 33 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 33
9998 run: address to copy to is 1082
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1082
9999 mem: storing 245 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 3
9999 mem: storing 4 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 4
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 4
9999 mem: storing 34 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 34
9998 run: address to copy to is 1084
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1084
9999 mem: storing 245 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 5
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 4
9999 mem: storing 5 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 5
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 5
9999 mem: storing 35 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 35
9998 run: address to copy to is 1086
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1086
9999 mem: storing 245 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 6 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 6
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 5
9999 mem: storing 6 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 6
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 6
9999 mem: storing 36 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 73 -> 74
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 36
9998 run: address to copy to is 1088
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1088
9999 mem: storing 245 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 7 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 7
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 6
9999 mem: storing 7 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 7
9999 mem: location 1304 is 7
9999 mem: storing 1 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1301 is 1008
9999 mem: location 1305 is 9480
9999 mem: location 1307 is 245
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1276
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1277
9999 mem: storing 1 in location 1278
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1283
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 3
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1285
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1286
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 3
9999 mem: location 1281 is 10
9999 mem: storing 30 in location 1289
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 30
9999 mem: location 1285 is 7
9999 mem: storing 37 in location 1289
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 74 -> 75
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 9480
9999 mem: storing 0 in location 1292
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 9480
9999 mem: location 1277 is 245
9999 mem: storing 9480 in location 1294
9999 mem: storing 245 in location 1295
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 37
9998 run: address to copy to is 1090
9999 mem: location 1294 is 9480
9999 mem: location 1295 is 245
9999 mem: storing 9480 in location 1090
9999 mem: storing 245 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 8 in location 1285
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 8
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1303 is 7
9999 mem: storing 8 in location 1303
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1303 is 8
9999 mem: location 1304 is 7
9999 mem: storing 0 in location 1311
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1301 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1147 is 3
9999 mem: storing 4 in location 1147
 105 run: clear-screen-from {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1143 is 1008
9999 mem: location 1147 is 4
9999 mem: location 1145 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1007
 106 run: jump-if {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1166
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 4
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: clear-line-delimited {screen: ("address" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1120
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1121
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1122
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1123
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 0
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 0
9999 mem: storing 40 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 40
9998 run: address to copy to is 1096
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 0
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 0
9999 mem: storing 1 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 1
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 119 -> 120
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 1
9999 mem: storing 41 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 41
9998 run: address to copy to is 1098
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 1
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 1
9999 mem: storing 2 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 2
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 2
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 2
9999 mem: storing 42 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 42
9998 run: address to copy to is 1100
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 2
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 2
9999 mem: storing 3 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 3
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 3
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 3
9999 mem: storing 43 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 43
9998 run: address to copy to is 1102
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 3
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 4
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 4
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 122 -> 123
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 4
9999 mem: storing 44 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 44
9998 run: address to copy to is 1104
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 5
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 5
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 5
9999 mem: storing 45 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 45
9998 run: address to copy to is 1106
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 5
9999 mem: storing 6 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 6
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 6
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 6
9999 mem: storing 46 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 46
9998 run: address to copy to is 1108
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 6
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 6
9999 mem: storing 7 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 7
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 7
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "screen")} <- print {screen: ("address" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1122 is 32
9999 mem: location 1123 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1272
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1275
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1276
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1277
9999 mem: storing 1 in location 1278
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1278 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1279
9999 mem: storing 1 in location 1280
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1276 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1275 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1281
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1282
 108 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1283
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1283 is 4
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 23
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1282 is 5
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 28
 108 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1285
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 34
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1281 is 10
9999 mem: storing 1 in location 1284
 108 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1284 is 1
9998 run: jumping to instruction 39
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1286
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 53
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1283 is 4
9999 mem: location 1281 is 10
9999 mem: storing 40 in location 1289
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1289 is 40
9999 mem: location 1285 is 7
9999 mem: storing 47 in location 1289
 108 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1290
9999 mem: incrementing refcount of 1014: 82 -> 83
 108 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1291
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1276 is 32
9999 mem: storing 0 in location 1292
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 71
 108 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1276 is 32
9999 mem: location 1277 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 108 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1290 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1289 is 47
9998 run: address to copy to is 1110
9999 mem: location 1294 is 32
9999 mem: location 1295 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1281 is 10
9999 mem: storing 9 in location 1296
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1285 is 7
9999 mem: location 1296 is 9
9999 mem: storing 0 in location 1297
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1297 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1285 is 7
9999 mem: storing 8 in location 1285
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 8
9999 mem: location 1275 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1275 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1120 is 7
9999 mem: storing 8 in location 1120
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1120 is 8
9999 mem: location 1121 is 7
9999 mem: storing 1 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1006 is 0
9999 mem: location 1007 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1312
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1316
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1318
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1316 is 4
9999 mem: storing 5 in location 1316
 107 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 5
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 127 -> 128
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1166
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 5
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 108 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 0
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
 108 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1186
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1186 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1186 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1187
 108 run: return {height: "number"}
9999 mem: location 1187 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1319
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1316 is 5
9999 mem: location 1319 is 5
9999 mem: storing 1 in location 1320
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1143 is 1008
9999 mem: location 1144 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 128 -> 129
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1340
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1192
9999 mem: location 1154 is 0
9999 mem: location 1155 is 7
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1551
9999 mem: location 1161 is 0
9999 mem: location 1339 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1341
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1337 is 1008
9999 mem: location 1340 is 1
9999 mem: location 1341 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1165
9999 mem: incrementing refcount of 1008: 129 -> 130
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1165 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1167 is 3
9999 mem: location 1165 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1165 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 129 -> 130
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1338 is 1331
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1298
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1331 in location 1301
9999 mem: incrementing refcount of 1331: 3 -> 4
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1301 is 1331
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 2
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1332
9998 run: its type is "number"
9999 mem: location 1332 is 2
9999 mem: storing 2 in location 1302
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9999 mem: location 1332 is 2
9999 mem: location 1333 is 1321
9999 mem: location 1301 is 1331
9999 mem: skipping refcount at 1331
9998 run: address to copy is 1333
9998 run: its type is ("address" "array" "event")
9999 mem: location 1333 is 1321
9999 mem: storing 1321 in location 1303
9999 mem: incrementing refcount of 1321: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1303 is 1321
9999 mem: skipping refcount at 1321
9999 mem: storing 2 in location 1304
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1302 is 2
9999 mem: location 1304 is 2
9999 mem: storing 1 in location 1305
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1305 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1183
9999 mem: storing 1183 in location 1306
9999 mem: incrementing refcount of 1183: 0 -> 1
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1306 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1301 is 1331
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1331
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: decrementing refcount of 1331: 4 -> 3
9999 mem: storing 1331 in location 1338
9999 mem: incrementing refcount of 1331: 3 -> 4
9999 mem: storing 1 in location 1346
9999 mem: storing 1 in location 1347
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1337 is 1008
9999 mem: location 1338 is 1331
9999 mem: location 1339 is 1149
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abcdef ↩  .\n    .ghij      .\n    .┈┈┈┈┈┈┈┈  .\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
