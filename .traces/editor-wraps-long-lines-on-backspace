 102 run: assume-console {"\n    left-click 1, 4\n    press backspace\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {4: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {4: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {backspace: ()}
9992 load: after rewriting: press {backspace: ()}
9999 mem: storing 'left-click' event starting at 1337
9999 mem: storing 'press' event starting at 1341
9999 mem: storing console in 1345
9999 mem: storing console data in 1347
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1345
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1348
9999 mem: storing 14 in location 1349
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 67 -> 68
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1352
9999 mem: incrementing refcount of 1345: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1353
9999 mem: incrementing refcount of 1152: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1354
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1355
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1351 is 1008
9999 mem: location 1354 is 1
9999 mem: location 1355 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 68 -> 69
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 68 -> 69
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1352 is 1345
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1315
9999 mem: incrementing refcount of 1345: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1345
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1346
9998 run: its type is "number"
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1347
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1347 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 2 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 0
9999 mem: location 1318 is 2
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 0
9998 run: address to copy is 1337
9998 run: its type is event
9999 mem: location 1337 is 2
9999 mem: location 1338 is 65513
9999 mem: location 1339 is 1
9999 mem: location 1340 is 4
9999 mem: storing 2 in location 1321
9999 mem: storing 65513 in location 1322
9999 mem: storing 1 in location 1323
9999 mem: storing 4 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 0
9999 mem: storing 1 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1335
9999 mem: location 1316 is 1
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy to is 1346
9999 mem: storing 1 in location 1346
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 2
9999 mem: location 1322 is 65513
9999 mem: location 1323 is 1
9999 mem: location 1324 is 4
9999 mem: location 1315 is 1345
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 4]
9998 run: result 1 is 1345
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1356
9999 mem: storing 65513 in location 1357
9999 mem: storing 1 in location 1358
9999 mem: storing 4 in location 1359
9999 mem: decrementing refcount of 1345: 2 -> 1
9999 mem: storing 1345 in location 1352
9999 mem: incrementing refcount of 1345: 1 -> 2
9999 mem: storing 1 in location 1360
9999 mem: storing 0 in location 1361
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1356 is 2
9999 mem: location 1357 is 65513
9999 mem: location 1358 is 1
9999 mem: location 1359 is 4
9999 mem: storing 1357 in location 1362
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1362 is 1357
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1351 is 1008
9999 mem: location 1353 is 1152
9999 mem: location 1362 is 1357
9999 mem: location 1357 is 65513
9999 mem: location 1358 is 1
9999 mem: location 1359 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1364
9999 mem: storing 27 in location 1365
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1367
9999 mem: incrementing refcount of 1008: 69 -> 70
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1368
9999 mem: incrementing refcount of 1152: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1369
9999 mem: storing 1 in location 1370
9999 mem: storing 4 in location 1371
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1368 is 1152
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1369 is 65513
9999 mem: location 1370 is 1
9999 mem: location 1371 is 4
9998 run: address to copy is 1370
9998 run: its type is "number"
9999 mem: location 1370 is 1
9999 mem: storing 1 in location 1372
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1372 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1369 is 65513
9999 mem: location 1370 is 1
9999 mem: location 1371 is 4
9998 run: address to copy is 1371
9998 run: its type is "number"
9999 mem: location 1371 is 4
9999 mem: storing 4 in location 1373
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1374
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1374 is 0
9999 mem: storing 0 in location 1375
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1376
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1373 is 4
9999 mem: location 1376 is 7
9999 mem: storing 0 in location 1377
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1378
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1379
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1380
9999 mem: incrementing refcount of 1171: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1367 is 1008
9999 mem: location 1368 is 1152
9999 mem: location 1372 is 1
9999 mem: location 1373 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1393
9999 mem: storing 26 in location 1394
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1396
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1397
9999 mem: incrementing refcount of 1152: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1398
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1399
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1397 is 1152
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1400
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1401
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1396 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1402
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1403
9999 mem: incrementing refcount of 1171: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1171
9999 mem: storing 1171 in location 1404
9999 mem: incrementing refcount of 1171: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1403
9999 mem: incrementing refcount of 1192: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1405
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1406
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1407
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1398 is 1
9999 mem: location 1407 is 1160
9999 mem: storing 1 in location 1160
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1408
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1399 is 4
9999 mem: location 1408 is 1161
9999 mem: storing 4 in location 1161
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1397 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1409
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 0
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1403 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 97
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 0
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 15 -> 14
9999 mem: storing 1201 in location 1403
9999 mem: incrementing refcount of 1201: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1192 in location 1404
9999 mem: incrementing refcount of 1192: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 0
9999 mem: storing 1 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 1
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1403 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 98
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 1
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 15 -> 14
9999 mem: storing 1205 in location 1403
9999 mem: incrementing refcount of 1205: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 17 -> 16
9999 mem: storing 1201 in location 1404
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 1
9999 mem: storing 2 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 2
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1403 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 99
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 2
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 15 -> 14
9999 mem: storing 1209 in location 1403
9999 mem: incrementing refcount of 1209: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 17 -> 16
9999 mem: storing 1205 in location 1404
9999 mem: incrementing refcount of 1205: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 2
9999 mem: storing 3 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1209
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 3
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1403 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 32
9999 mem: storing 32 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 32
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 3
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 15 -> 14
9999 mem: storing 1213 in location 1403
9999 mem: incrementing refcount of 1213: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 17 -> 16
9999 mem: storing 1209 in location 1404
9999 mem: incrementing refcount of 1209: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 3
9999 mem: storing 4 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 4
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 1 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1209
9999 mem: location 1409 is 1156
9999 mem: decrementing refcount of 1171: 13 -> 12
9999 mem: storing 1209 in location 1156
9999 mem: incrementing refcount of 1209: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1403 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 100
9999 mem: storing 100 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 100
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 4
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 15 -> 14
9999 mem: storing 1217 in location 1403
9999 mem: incrementing refcount of 1217: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 18 -> 17
9999 mem: storing 1213 in location 1404
9999 mem: incrementing refcount of 1213: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 4
9999 mem: storing 5 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 5
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1403 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 101
9999 mem: storing 101 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 101
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 5
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 15 -> 14
9999 mem: storing 1221 in location 1403
9999 mem: incrementing refcount of 1221: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 17 -> 16
9999 mem: storing 1217 in location 1404
9999 mem: incrementing refcount of 1217: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 5
9999 mem: storing 6 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 6
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1403 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 102
9999 mem: storing 102 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 102
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 6
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 15 -> 14
9999 mem: storing 1225 in location 1403
9999 mem: incrementing refcount of 1225: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 17 -> 16
9999 mem: storing 1221 in location 1404
9999 mem: incrementing refcount of 1221: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 6
9999 mem: storing 7 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 1
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 7
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1412
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1403 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 32
9999 mem: storing 32 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 32
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 7
9999 mem: location 1401 is 7
9999 mem: storing 1 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1406
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1405 is 1
9999 mem: storing 2 in location 1405
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1403 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 32
9999 mem: storing 32 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 32
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 0
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1229 in location 1403
9999 mem: incrementing refcount of 1229: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 17 -> 16
9999 mem: storing 1225 in location 1404
9999 mem: incrementing refcount of 1225: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 0
9999 mem: storing 1 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1403 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 103
9999 mem: storing 103 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 103
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 1
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 15 -> 14
9999 mem: storing 1233 in location 1403
9999 mem: incrementing refcount of 1233: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 17 -> 16
9999 mem: storing 1229 in location 1404
9999 mem: incrementing refcount of 1229: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 1
9999 mem: storing 2 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1403 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 104
9999 mem: storing 104 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 104
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 2
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 15 -> 14
9999 mem: storing 1237 in location 1403
9999 mem: incrementing refcount of 1237: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 17 -> 16
9999 mem: storing 1233 in location 1404
9999 mem: incrementing refcount of 1233: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 2
9999 mem: storing 3 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1403 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 105
9999 mem: storing 105 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 105
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 3
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 15 -> 14
9999 mem: storing 1241 in location 1403
9999 mem: incrementing refcount of 1241: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 17 -> 16
9999 mem: storing 1237 in location 1404
9999 mem: incrementing refcount of 1237: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 3
9999 mem: storing 4 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1405 is 2
9999 mem: location 1402 is 5
9999 mem: storing 0 in location 1410
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1403 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 106
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1403 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 106
9999 mem: storing 106 in location 1413
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 106
9999 mem: storing 0 in location 1414
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1406 is 4
9999 mem: location 1401 is 7
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1403 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 106
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 14 -> 13
9999 mem: storing 0 in location 1403
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1404 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 17 -> 16
9999 mem: storing 1241 in location 1404
9999 mem: incrementing refcount of 1241: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1406 is 4
9999 mem: storing 5 in location 1406
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1403 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1411
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1406 is 5
9999 mem: location 1408 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 0 in location 1417
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1411 is 0
9999 mem: location 1417 is 0
9999 mem: storing 0 in location 1418
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1405 is 2
9999 mem: location 1407 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1419
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1418 is 0
9999 mem: location 1419 is 0
9999 mem: storing 0 in location 1420
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1397 is 1152
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1368
9999 mem: incrementing refcount of 1152: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1381
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1382
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1383
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1368 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1384
9999 mem: incrementing refcount of 1171: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1275
9999 mem: storing 1275 in location 1386
9999 mem: incrementing refcount of 1275: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1379 is 0
9999 mem: location 1380 is 1171
9999 mem: location 1382 is 1
9999 mem: location 1383 is 4
9999 mem: location 1384 is 1171
9999 mem: location 1381 is 0
9999 mem: location 1386 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1386 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 1 in location 1276
9999 mem: storing 1 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 1171 in location 1279
9999 mem: storing 1 in location 1280
9999 mem: storing 4 in location 1281
9999 mem: storing 1171 in location 1282
9999 mem: storing 0 in location 1283
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1368 is 1152
9999 mem: location 1386 is 1275
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1189
9999 mem: incrementing refcount of 1275: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1275
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1275 in location 1168
9999 mem: incrementing refcount of 1275: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1421
9999 mem: storing 1421 in location 1170
9999 mem: incrementing refcount of 1421: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1275
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1170 is 1421
9999 mem: skipping refcount at 1421
9999 mem: storing 1275 in location 1422
9999 mem: storing 0 in location 1423
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1421
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1421
9999 mem: location 1190 is 1163
9999 mem: storing 1421 in location 1163
9999 mem: incrementing refcount of 1421: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 10 -> 9
9999 mem: storing 1152 in location 1368
9999 mem: incrementing refcount of 1152: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1368 is 1152
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1354
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1355
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1351 is 1008
9999 mem: location 1354 is 1
9999 mem: location 1355 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 72 -> 73
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1352 is 1345
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1315
9999 mem: incrementing refcount of 1345: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1345
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 1
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1346
9998 run: its type is "number"
9999 mem: location 1346 is 1
9999 mem: storing 1 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 1
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1347
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1347 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 2 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 1
9999 mem: location 1318 is 2
9999 mem: storing 0 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9998 run: base address is 1336
9999 mem: location 1316 is 1
9998 run: address to copy is 1341
9998 run: its type is event
9999 mem: location 1341 is 0
9999 mem: location 1342 is 8
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1321
9999 mem: storing 8 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1316 is 1
9999 mem: storing 2 in location 1316
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 1
9999 mem: location 1347 is 1335
9999 mem: location 1316 is 2
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy to is 1346
9999 mem: storing 2 in location 1346
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1321 is 0
9999 mem: location 1322 is 8
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1345
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 8, 0, 0]
9998 run: result 1 is 1345
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1356
9999 mem: storing 8 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: decrementing refcount of 1345: 3 -> 2
9999 mem: storing 1345 in location 1352
9999 mem: incrementing refcount of 1345: 2 -> 3
9999 mem: storing 1 in location 1360
9999 mem: storing 0 in location 1361
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1356 is 0
9999 mem: location 1357 is 8
9999 mem: location 1358 is 0
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 1362
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1351 is 1008
9999 mem: location 1353 is 1152
9999 mem: location 1356 is 0
9999 mem: location 1357 is 8
9999 mem: location 1358 is 0
9999 mem: location 1359 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1424
9999 mem: storing 85 in location 1425
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1427
9999 mem: incrementing refcount of 1008: 73 -> 74
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1428
9999 mem: incrementing refcount of 1152: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1429
9999 mem: storing 8 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1433
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1428 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1434
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1435
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1436
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1437
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1438
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1439
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1440
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1439 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1441
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1440 is 1161
9999 mem: location 1161 is 4
9999 mem: storing 4 in location 1442
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1429 is 0
9999 mem: location 1430 is 8
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 1430 in location 1443
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1443 is 1430
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1444
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1444 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1455
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1460
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1476
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1477
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1482
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1483
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1483 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 0 in location 1484
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1443 is 1430
9999 mem: location 1430 is 8
9999 mem: storing 1 in location 1485
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 1
9998 run: jump-unless fell through
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1478
9999 mem: incrementing refcount of 1171: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"}, {backspaced-cell: ("address" "shared" "duplex-list" "character")} <- delete-before-cursor {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}
9999 mem: location 1428 is 1152
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 22
9999 mem: allocating size 24
9999 mem: new alloc: 1511
9999 mem: storing 22 in location 1512
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1514
9999 mem: incrementing refcount of 1152: 11 -> 12
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 76 -> 77
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1516
 106 run: {data: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1517
9999 mem: incrementing refcount of 1171: 14 -> 15
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1516 is 1156
9999 mem: location 1156 is 1209
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 16 -> 17
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1518
9999 mem: incrementing refcount of 1205: 17 -> 18
 106 run: {go-render?: "boolean"}, {backspaced-cell: ("address" "shared" "duplex-list" "character")} <- copy {0: "literal", "no-more-render": ()}, {0: "literal", "nothing-deleted": ()}
9999 mem: storing 0 in location 1519
9999 mem: storing 0 in location 1520
 106 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1518 is 1205
9998 run: jumping to instruction 9
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"delete-before-cursor": "literal-string"}
  10 app: delete-before-cursor 
 106 run: {original-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1521
 106 run: {editor: ("address" "shared" "editor-data")}, {scroll?: "boolean"} <- move-cursor-coordinates-left {editor: ("address" "shared" "editor-data")}
9999 mem: location 1514 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1535
9999 mem: storing 20 in location 1536
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1538
9999 mem: incrementing refcount of 1152: 12 -> 13
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1209
9999 mem: storing 1209 in location 1539
9999 mem: incrementing refcount of 1209: 18 -> 19
 107 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1540
 107 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1541
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1209
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 4
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1538 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1542
 107 run: {at-left-margin?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {left: "number"}
9999 mem: location 1541 is 1161
9999 mem: location 1161 is 4
9999 mem: location 1542 is 0
9999 mem: storing 0 in location 1543
 107 run: jump-if {at-left-margin?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jump-if fell through
 107 run: trace {10: "literal"}, {"app": "literal-string"}, {"decrementing cursor column": "literal-string"}
  10 app: decrementing cursor column 
 107 run: {cursor-column: ("address" "number"), "lookup": ()} <- subtract {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1541 is 1161
9999 mem: location 1161 is 4
9999 mem: location 1541 is 1161
9999 mem: storing 3 in location 1161
 107 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1544
 107 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1538 is 1152
9999 mem: location 1544 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1152
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1514
9999 mem: incrementing refcount of 1152: 12 -> 13
9999 mem: storing 0 in location 1522
 106 run: {backspaced-cell: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1516 is 1156
9999 mem: location 1156 is 1209
9999 mem: storing 1209 in location 1520
9999 mem: incrementing refcount of 1209: 19 -> 20
 106 run: {data: ("address" "shared" "duplex-list" "character")} <- remove_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {data: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1516 is 1156
9999 mem: location 1156 is 1209
9999 mem: location 1517 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 107 run: {x: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1188
9999 mem: incrementing refcount of 1209: 20 -> 21
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1189
9999 mem: incrementing refcount of 1171: 15 -> 16
 107 run: jump-if {x: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 1209
9998 run: jumping to instruction 5
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1190
9999 mem: incrementing refcount of 1213: 16 -> 17
 107 run: {prev-node: ("address" "shared" "duplex-list" "character")} <- get {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1205
9999 mem: storing 1205 in location 1191
9999 mem: incrementing refcount of 1205: 18 -> 19
 107 run: {x: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {0: "literal"}
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 0 in location 1211
 107 run: {x: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {x: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 32
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1188 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1212
9999 mem: storing 0 in location 1212
 107 run: jump-unless {next-node: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1190 is 1213
9998 run: jump-unless fell through
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {prev-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1191 is 1205
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1216
9999 mem: storing 1205 in location 1216
 107 run: jump-unless {prev-node: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1191 is 1205
9998 run: jump-unless fell through
 107 run: {prev-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {prev-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1190 is 1213
9999 mem: location 1191 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 1213 in location 1207
 107 run: return {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 16 -> 15
9999 mem: storing 1171 in location 1517
9999 mem: incrementing refcount of 1171: 15 -> 16
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1518 is 1205
9999 mem: location 1516 is 1156
9999 mem: decrementing refcount of 1209: 21 -> 20
9999 mem: storing 1205 in location 1156
9999 mem: incrementing refcount of 1205: 19 -> 20
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {scroll?: "boolean"}, {1: "offset"}
9999 mem: location 1522 is 0
9998 run: jumping to instruction 18
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1515 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 107 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1523
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1524
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1525
 106 run: {same-row?: "boolean"} <- equal {cursor-row: "number"}, {original-row: "number"}
9999 mem: location 1524 is 1
9999 mem: location 1521 is 1
9999 mem: storing 1 in location 1526
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-if {same-row?: "boolean"}, {1: "offset"}
9999 mem: location 1526 is 1
9998 run: jumping to instruction 25
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1527
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1514 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1528
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1516 is 1156
9999 mem: location 1156 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1213
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1529
9999 mem: incrementing refcount of 1213: 18 -> 19
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1515 is 1008
9999 mem: location 1524 is 1
9999 mem: location 1525 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: {curr-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1525 is 3
9999 mem: storing 3 in location 1530
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1530 is 3
9999 mem: location 1528 is 7
9999 mem: storing 0 in location 1531
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1531 is 0
9998 run: jumping to instruction 35
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1529 is 1213
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1529 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1205
9999 mem: location 1529 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 100
9999 mem: storing 100 in location 1532
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1532 is 100
9999 mem: storing 0 in location 1533
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1515 is 1008
9999 mem: location 1532 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 80 -> 79
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 79 -> 80
9990 schedule: delete-before-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1530 is 3
9999 mem: storing 4 in location 1530
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1529 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1205
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 20 -> 19
9999 mem: storing 1217 in location 1529
9999 mem: incrementing refcount of 1217: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 31
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1530 is 4
9999 mem: location 1528 is 7
9999 mem: storing 0 in location 1531
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1531 is 0
9998 run: jumping to instruction 35
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1529 is 1217
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1529 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1529 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 101
9999 mem: storing 101 in location 1532
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1532 is 101
9999 mem: storing 0 in location 1533
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1515 is 1008
9999 mem: location 1532 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 101 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1530 is 4
9999 mem: storing 5 in location 1530
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1529 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 19 -> 18
9999 mem: storing 1221 in location 1529
9999 mem: incrementing refcount of 1221: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 31
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1530 is 5
9999 mem: location 1528 is 7
9999 mem: storing 0 in location 1531
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1531 is 0
9998 run: jumping to instruction 35
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1529 is 1221
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1529 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1529 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 102
9999 mem: storing 102 in location 1532
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1532 is 102
9999 mem: storing 0 in location 1533
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1515 is 1008
9999 mem: location 1532 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 5
9999 mem: storing 15 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 15
9999 mem: storing 1046 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1046
9999 mem: location 1309 is 1046
9999 mem: storing 102 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 6 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 6
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1530 is 5
9999 mem: storing 6 in location 1530
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1529 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 19 -> 18
9999 mem: storing 1225 in location 1529
9999 mem: incrementing refcount of 1225: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 31
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1530 is 6
9999 mem: location 1528 is 7
9999 mem: storing 0 in location 1531
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1531 is 0
9998 run: jumping to instruction 35
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1529 is 1225
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1529 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1529 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 32
9999 mem: storing 32 in location 1532
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1532 is 32
9999 mem: storing 0 in location 1533
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1515 is 1008
9999 mem: location 1532 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1292
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 6
9999 mem: storing 16 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 16
9999 mem: storing 1048 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1048
9999 mem: location 1309 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 7 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 7
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1515
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1530 is 6
9999 mem: storing 7 in location 1530
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1529 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 19 -> 18
9999 mem: storing 1229 in location 1529
9999 mem: incrementing refcount of 1229: 17 -> 18
 106 run: jump {: "offset"}
9998 run: jumping to instruction 31
 106 run: {at-right?: "boolean"} <- greater-or-equal {curr-column: "number"}, {right: "number"}
9999 mem: location 1530 is 7
9999 mem: location 1528 is 7
9999 mem: storing 1 in location 1531
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1519
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1531 is 1
9998 run: jump-unless fell through
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}, {go-render?: "boolean"}, {backspaced-cell: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1514 is 1152
9999 mem: location 1515 is 1008
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1209
9999 abandon: saving in free-list of size 24
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9998 run: result 1 is 1008
9998 run: result 2 is 1
9998 run: result 3 is 1209
9999 mem: decrementing refcount of 1152: 13 -> 12
9999 mem: storing 1152 in location 1428
9999 mem: incrementing refcount of 1152: 12 -> 13
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1427
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: storing 1 in location 1433
9999 mem: storing 1209 in location 1486
9999 mem: incrementing refcount of 1209: 20 -> 21
 105 run: jump-unless {backspaced-cell: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1486 is 1209
9998 run: jump-unless fell through
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1480
9999 mem: incrementing refcount of 1171: 16 -> 17
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1428 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1447
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1447 is 1163
9999 mem: location 1163 is 1421
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1447 is 1163
9999 mem: location 1163 is 1421
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1199
9999 mem: incrementing refcount of 1421: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1199 is 1421
9999 mem: skipping refcount at 1421
9999 mem: location 1422 is 1275
9999 mem: location 1423 is 0
9999 mem: location 1199 is 1421
9999 mem: skipping refcount at 1421
9998 run: address to copy is 1422
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1422 is 1275
9999 mem: storing 1275 in location 1200
9999 mem: incrementing refcount of 1275: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1200 is 1275
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1275
9999 mem: storing 1275 in location 1446
9999 mem: incrementing refcount of 1275: 4 -> 5
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1446 is 1275
9999 mem: skipping refcount at 1275
9999 mem: location 1276 is 1
9999 mem: location 1277 is 1
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1171
9999 mem: location 1280 is 1
9999 mem: location 1281 is 4
9999 mem: location 1282 is 1171
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1446 is 1275
9999 mem: skipping refcount at 1275
9999 mem: storing 0 in location 1448
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1448 is 0
9998 run: jumping to instruction 337
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1557
9999 mem: decrementing refcount of 1275: 5 -> 4
9999 mem: storing 1557 in location 1446
9999 mem: incrementing refcount of 1557: 0 -> 1
 105 run: {deleted-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1438 is 1156
9999 mem: location 1156 is 1205
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 21 -> 22
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1213
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 19 -> 20
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1213
9999 mem: storing 1213 in location 1481
9999 mem: incrementing refcount of 1213: 20 -> 21
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {2: "literal", "delete-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {backspaced-cell: ("address" "shared" "duplex-list" "character"), "deleted": ()}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "delete-from": (), "lookup": ()}, {deleted-until: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce-backspace": ()}
9999 mem: location 1441 is 1
9999 mem: location 1442 is 4
9999 mem: location 1478 is 1171
9999 mem: location 1439 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1440 is 1161
9999 mem: location 1161 is 3
9999 mem: location 1480 is 1171
9999 mem: location 1486 is 1209
9999 mem: location 1438 is 1156
9999 mem: location 1156 is 1205
9999 mem: location 1481 is 1213
9999 mem: location 1446 is 1557
9999 mem: skipping refcount at 1557
9999 mem: location 1446 is 1557
9999 mem: skipping refcount at 1557
9999 mem: storing 2 in location 1558
9999 mem: storing 1 in location 1559
9999 mem: storing 4 in location 1560
9999 mem: storing 1171 in location 1561
9999 mem: storing 1 in location 1562
9999 mem: storing 3 in location 1563
9999 mem: storing 1171 in location 1564
9999 mem: storing 1209 in location 1565
9999 mem: storing 1205 in location 1566
9999 mem: storing 1213 in location 1567
9999 mem: storing 1 in location 1568
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1428 is 1152
9999 mem: location 1446 is 1557
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1557 in location 1189
9999 mem: incrementing refcount of 1557: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1421
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1557
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 1421
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1557 in location 1168
9999 mem: incrementing refcount of 1557: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1421 in location 1169
9999 mem: incrementing refcount of 1421: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1569
9999 mem: storing 1569 in location 1170
9999 mem: incrementing refcount of 1569: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1557
9999 mem: location 1169 is 1421
9999 mem: location 1170 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1170 is 1569
9999 mem: skipping refcount at 1569
9999 mem: storing 1557 in location 1570
9999 mem: storing 1421 in location 1571
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1569
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1569
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1421: 4 -> 3
9999 mem: storing 1569 in location 1163
9999 mem: incrementing refcount of 1569: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 14 -> 13
9999 mem: storing 1152 in location 1428
9999 mem: incrementing refcount of 1152: 13 -> 14
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1427 is 1008
9999 mem: location 1428 is 1152
9999 mem: location 1433 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: decrementing refcount of 1152: 14 -> 13
9999 mem: storing 1152 in location 1353
9999 mem: incrementing refcount of 1152: 13 -> 14
9999 mem: storing 1 in location 1363
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1351 is 1008
9999 mem: location 1353 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1120
9999 mem: incrementing refcount of 1152: 14 -> 15
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1120 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1245
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1249
9999 mem: incrementing refcount of 1152: 15 -> 16
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1249 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1250
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1248 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1251
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 7
9999 mem: storing 7 in location 1252
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1253
9999 mem: incrementing refcount of 1171: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 mem: storing 1171 in location 1254
9999 mem: incrementing refcount of 1171: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 20 -> 19
9999 mem: storing 1192 in location 1253
9999 mem: incrementing refcount of 1192: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1255
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1256
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1258
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1259
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1260
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 1
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1192
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1253 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1572
9999 mem: storing 10 in location 1573
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 97
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 97
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 0
9999 mem: storing 10 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 97
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 10
9999 mem: storing 1036 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 97
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1036
9999 mem: location 1309 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 19 -> 18
9999 mem: storing 1201 in location 1253
9999 mem: incrementing refcount of 1201: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 20 -> 19
9999 mem: storing 1192 in location 1254
9999 mem: incrementing refcount of 1192: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1253 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 98
9999 mem: storing 98 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 98
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 98
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 1
9999 mem: storing 11 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 98
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 11
9999 mem: storing 1038 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 98
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1038
9999 mem: location 1309 is 1038
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 19 -> 18
9999 mem: storing 1205 in location 1253
9999 mem: incrementing refcount of 1205: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1192
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 21 -> 20
9999 mem: storing 1201 in location 1254
9999 mem: incrementing refcount of 1201: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1205
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1213
9999 mem: location 1208 is 1201
9999 mem: location 1253 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 99
9999 mem: storing 99 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 99
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 99
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 2
9999 mem: storing 12 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 99
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 12
9999 mem: storing 1040 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 99
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1040
9999 mem: location 1309 is 1040
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1213
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1205: 25 -> 24
9999 mem: storing 1213 in location 1253
9999 mem: incrementing refcount of 1213: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 98
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 21 -> 20
9999 mem: storing 1205 in location 1254
9999 mem: incrementing refcount of 1205: 25 -> 26
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1213
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 1 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 mem: location 1260 is 1156
9999 mem: decrementing refcount of 1205: 26 -> 25
9999 mem: storing 1205 in location 1156
9999 mem: incrementing refcount of 1205: 25 -> 26
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1205
9999 mem: location 1253 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 100
9999 mem: storing 100 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 100
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 100
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 100
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 3
9999 mem: storing 13 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 100
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 13
9999 mem: storing 1042 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 100
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1042
9999 mem: location 1309 is 1042
9999 mem: storing 100 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1205
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 24 -> 23
9999 mem: storing 1217 in location 1253
9999 mem: incrementing refcount of 1217: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1205
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 99
9999 mem: location 1207 is 1213
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1205: 27 -> 26
9999 mem: storing 1213 in location 1254
9999 mem: incrementing refcount of 1213: 24 -> 25
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1217
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1253 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 101
9999 mem: storing 101 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 101
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 101
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 4
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 101
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 4
9999 mem: storing 14 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 101
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 14
9999 mem: storing 1044 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 101
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1044
9999 mem: location 1309 is 1044
9999 mem: storing 101 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 21 -> 20
9999 mem: storing 1221 in location 1253
9999 mem: incrementing refcount of 1221: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1213
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 100
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1205
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 26 -> 25
9999 mem: storing 1217 in location 1254
9999 mem: incrementing refcount of 1217: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 4
9999 mem: storing 5 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1221
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 5
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1253 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 102
9999 mem: storing 102 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 102
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 102
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 5
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 102
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 5
9999 mem: storing 15 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 102
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 15
9999 mem: storing 1046 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 102
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1046
9999 mem: location 1309 is 1046
9999 mem: storing 102 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 6 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 6
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 21 -> 20
9999 mem: storing 1225 in location 1253
9999 mem: incrementing refcount of 1225: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1217
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 101
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 23 -> 22
9999 mem: storing 1221 in location 1254
9999 mem: incrementing refcount of 1221: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 5
9999 mem: storing 6 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1225
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 6
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1253 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 32
9999 mem: storing 32 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 32
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 32
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 32
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 32
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 6
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 32
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 6
9999 mem: storing 16 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 16
9999 mem: storing 1048 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1048
9999 mem: location 1309 is 1048
9999 mem: storing 32 in location 1048
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 7 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 7
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 21 -> 20
9999 mem: storing 1229 in location 1253
9999 mem: incrementing refcount of 1229: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1221
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 102
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 23 -> 22
9999 mem: storing 1225 in location 1254
9999 mem: incrementing refcount of 1225: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 6
9999 mem: storing 7 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 1
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 7
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 103
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 103
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 7
9999 mem: location 1252 is 7
9999 mem: storing 1 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1268
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1248 is 1008
9999 mem: location 1268 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 1
9999 mem: location 1296 is 10
9999 mem: storing 10 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 10
9999 mem: location 1300 is 7
9999 mem: storing 17 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 8617
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 17
9999 mem: storing 1050 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 8617
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1050
9999 mem: location 1309 is 1050
9999 mem: storing 8617 in location 1050
9999 mem: storing 245 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 8 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 8
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1257
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1256 is 2
9999 mem: location 1257 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 2
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1248
9999 mem: incrementing refcount of 1008: 95 -> 96
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1253 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 103
9999 mem: storing 103 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 103
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 103
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 0
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 103
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 0
9999 mem: storing 20 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 103
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 20
9999 mem: storing 1056 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 103
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1056
9999 mem: location 1309 is 1056
9999 mem: storing 103 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 21 -> 20
9999 mem: storing 1233 in location 1253
9999 mem: incrementing refcount of 1233: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 32
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 23 -> 22
9999 mem: storing 1229 in location 1254
9999 mem: incrementing refcount of 1229: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1253 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 104
9999 mem: storing 104 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 104
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 104
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 104
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 104
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 1
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 104
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 104
  90 print-character: 104 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 104
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 1
9999 mem: storing 21 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 104
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 21
9999 mem: storing 1058 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 104
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1058
9999 mem: location 1309 is 1058
9999 mem: storing 104 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 19 -> 18
9999 mem: storing 1237 in location 1253
9999 mem: incrementing refcount of 1237: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 103
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 23 -> 22
9999 mem: storing 1233 in location 1254
9999 mem: incrementing refcount of 1233: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1253 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 105
9999 mem: storing 105 in location 1264
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 105
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 105
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 105
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 105
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 2
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 105
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 105
  90 print-character: 105 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 105
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 2
9999 mem: storing 22 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 105
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 22
9999 mem: storing 1060 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 105
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1060
9999 mem: location 1309 is 1060
9999 mem: storing 105 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 19 -> 18
9999 mem: storing 1241 in location 1253
9999 mem: incrementing refcount of 1241: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 104
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 21 -> 20
9999 mem: storing 1237 in location 1254
9999 mem: incrementing refcount of 1237: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1251 is 5
9999 mem: storing 0 in location 1261
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 106
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1253 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 106
9999 mem: storing 106 in location 1264
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1255 is 7
9999 mem: location 1264 is 106
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1572
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1575
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1576
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1575 is 7
9999 mem: storing 1 in location 1577
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1576 is 106
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1577 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1576 is 106
9999 mem: storing 0 in location 1581
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1581 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1575 is 7
9999 mem: storing 0 in location 1582
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1575 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1255
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1264 is 106
9999 mem: storing 0 in location 1265
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1257 is 3
9999 mem: location 1252 is 7
9999 mem: storing 0 in location 1267
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1248 is 1008
9999 mem: location 1264 is 106
9999 mem: location 1255 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1294
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 106
  90 print-character: 106 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 106
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 3
9999 mem: storing 23 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 106
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 23
9999 mem: storing 1062 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 106
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1062
9999 mem: location 1309 is 1062
9999 mem: storing 106 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 106
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1200
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1241: 18 -> 17
9999 mem: storing 0 in location 1253
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1254 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 105
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 21 -> 20
9999 mem: storing 1241 in location 1254
9999 mem: incrementing refcount of 1241: 18 -> 19
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1269
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1253 is 0
9999 mem: location 1269 is 1155
9999 mem: storing 0 in location 1155
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1262
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1161
9999 mem: location 1161 is 3
9999 mem: storing 0 in location 1270
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1262 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1272
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1273
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1249 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1274
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1256 is 2
9999 mem: location 1274 is 1159
9999 mem: storing 2 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1256 is 2
9999 mem: location 1257 is 4
9999 mem: location 1248 is 1008
9999 mem: location 1249 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 4
9999 mem: storing 2 in location 1123
9999 mem: storing 4 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 4
9999 mem: location 1122 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 101 -> 102
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 4
9999 mem: storing 24 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 24
9999 mem: storing 1064 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1064
9999 mem: location 1309 is 1064
9999 mem: storing 32 in location 1064
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 102 -> 101
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 5
9999 mem: storing 25 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 25
9999 mem: storing 1066 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1066
9999 mem: location 1309 is 1066
9999 mem: storing 32 in location 1066
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 6 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 6
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 5
9999 mem: storing 6 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 6
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 6
9999 mem: storing 26 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 26
9999 mem: storing 1068 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1068
9999 mem: location 1309 is 1068
9999 mem: storing 32 in location 1068
9999 mem: storing 7 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 7 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 7
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 6
9999 mem: storing 7 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 7
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 2
9999 mem: location 1296 is 10
9999 mem: storing 20 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 20
9999 mem: location 1300 is 7
9999 mem: storing 27 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 27
9999 mem: storing 1070 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1070
9999 mem: location 1309 is 1070
9999 mem: storing 32 in location 1070
9999 mem: storing 7 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 8 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 8
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 7
9999 mem: storing 8 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 8
9999 mem: location 1180 is 7
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1122 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1316
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1317
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1318
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1319
9999 mem: storing 1 in location 1320
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1320 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1321
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1323
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 3
9999 mem: location 1317 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 0
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 0
9999 mem: storing 30 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 30
9999 mem: storing 1076 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1076
9999 mem: location 1309 is 1076
9999 mem: storing 9480 in location 1076
9999 mem: storing 245 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 0
9999 mem: storing 1 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 1
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 1
9999 mem: storing 31 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 31
9999 mem: storing 1078 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1078
9999 mem: location 1309 is 1078
9999 mem: storing 9480 in location 1078
9999 mem: storing 245 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 1
9999 mem: storing 2 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 2
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 2
9999 mem: storing 32 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 32
9999 mem: storing 1080 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1080
9999 mem: location 1309 is 1080
9999 mem: storing 9480 in location 1080
9999 mem: storing 245 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 2
9999 mem: storing 3 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 3
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 3
9999 mem: storing 33 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 33
9999 mem: storing 1082 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1082
9999 mem: location 1309 is 1082
9999 mem: storing 9480 in location 1082
9999 mem: storing 245 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 3
9999 mem: storing 4 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 4
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 4
9999 mem: storing 34 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 34
9999 mem: storing 1084 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1084
9999 mem: location 1309 is 1084
9999 mem: storing 9480 in location 1084
9999 mem: storing 245 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 4
9999 mem: storing 5 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 5
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 5
9999 mem: storing 35 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 35
9999 mem: storing 1086 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1086
9999 mem: location 1309 is 1086
9999 mem: storing 9480 in location 1086
9999 mem: storing 245 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 6 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 6
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 5
9999 mem: storing 6 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 6
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 6
9999 mem: storing 36 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 73 -> 74
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 36
9999 mem: storing 1088 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1088
9999 mem: location 1309 is 1088
9999 mem: storing 9480 in location 1088
9999 mem: storing 245 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 7 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 7
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 6
9999 mem: storing 7 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 7
9999 mem: location 1318 is 7
9999 mem: storing 1 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1319 is 9480
9999 mem: location 1321 is 245
9999 mem: location 1323 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1291
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1292
9999 mem: storing 1 in location 1293
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1298
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 3
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1300
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1301
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 3
9999 mem: location 1296 is 10
9999 mem: storing 30 in location 1304
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 30
9999 mem: location 1300 is 7
9999 mem: storing 37 in location 1304
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 74 -> 75
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 9480
9999 mem: storing 0 in location 1307
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 37
9999 mem: storing 1090 in location 1309
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 9480
9999 mem: location 1292 is 245
9999 mem: location 1309 is 1090
9999 mem: location 1309 is 1090
9999 mem: storing 9480 in location 1090
9999 mem: storing 245 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 8 in location 1300
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 8
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1317 is 7
9999 mem: storing 8 in location 1317
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1317 is 8
9999 mem: location 1318 is 7
9999 mem: storing 0 in location 1325
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1315 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 4
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1169
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 4
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 0
9999 mem: storing 40 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 40
9999 mem: storing 1096 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1096
9999 mem: location 1309 is 1096
9999 mem: storing 32 in location 1096
9999 mem: storing 7 in location 1097
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 0
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 0
9999 mem: storing 1 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 1
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 119 -> 120
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 1
9999 mem: storing 41 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 41
9999 mem: storing 1098 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1098
9999 mem: location 1309 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 1
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 1
9999 mem: storing 2 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 2
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 2
9999 mem: storing 42 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 42
9999 mem: storing 1100 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1100
9999 mem: location 1309 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 2
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 2
9999 mem: storing 3 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 3
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-wraps-long-lines-on-backspace
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 3
9999 mem: storing 43 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 43
9999 mem: storing 1102 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1102
9999 mem: location 1309 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 3
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 3
9999 mem: storing 4 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 4
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 122 -> 123
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 4
9999 mem: storing 44 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 44
9999 mem: storing 1104 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1104
9999 mem: location 1309 is 1104
9999 mem: storing 32 in location 1104
9999 mem: storing 7 in location 1105
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 4
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 4
9999 mem: storing 5 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 5
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 4
9999 mem: storing 5 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 5
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 5
9999 mem: storing 45 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 45
9999 mem: storing 1106 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1106
9999 mem: location 1309 is 1106
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 5
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 5
9999 mem: storing 6 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 6
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 5
9999 mem: storing 6 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 6
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 6
9999 mem: storing 46 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 46
9999 mem: storing 1108 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1108
9999 mem: location 1309 is 1108
9999 mem: storing 32 in location 1108
9999 mem: storing 7 in location 1109
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 6
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 6
9999 mem: storing 7 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 7
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 6
9999 mem: storing 7 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 7
9999 mem: location 1180 is 7
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1287
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 125 -> 126
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1291
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1292
9999 mem: storing 1 in location 1293
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1293 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1294
9999 mem: storing 1 in location 1295
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1295 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1291 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1290 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1296
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1297
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1298
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1298 is 4
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1297 is 5
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 1300
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1296 is 10
9999 mem: storing 1 in location 1299
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1299 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1301
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1301 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1298 is 4
9999 mem: location 1296 is 10
9999 mem: storing 40 in location 1304
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1304 is 40
9999 mem: location 1300 is 7
9999 mem: storing 47 in location 1304
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1305
9999 mem: incrementing refcount of 1014: 82 -> 83
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1306
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1291 is 32
9999 mem: storing 0 in location 1307
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1307 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1305 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1304 is 47
9999 mem: storing 1110 in location 1309
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1291 is 32
9999 mem: location 1292 is 7
9999 mem: location 1309 is 1110
9999 mem: location 1309 is 1110
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1296 is 10
9999 mem: storing 9 in location 1310
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1300 is 7
9999 mem: location 1310 is 9
9999 mem: storing 0 in location 1311
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1311 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1300 is 7
9999 mem: storing 8 in location 1300
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1300 is 8
9999 mem: location 1290 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1290 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 7
9999 mem: storing 8 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 8
9999 mem: location 1180 is 7
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 4
9999 mem: location 1006 is 0
9999 mem: location 1007 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1326
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1330
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1331
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1332
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1330 is 4
9999 mem: storing 5 in location 1330
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1329 is 1008
9999 mem: location 1330 is 5
9999 mem: location 1331 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 127 -> 128
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1169
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1170
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 5
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 0
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1329
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1329 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1200
 108 run: return {height: "number"}
9999 mem: location 1200 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1333
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1330 is 5
9999 mem: location 1333 is 5
9999 mem: storing 1 in location 1334
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1329 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 128 -> 129
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1354
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1205
9999 mem: location 1157 is 0
9999 mem: location 1158 is 7
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 3
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1569
9999 mem: location 1164 is 0
9999 mem: location 1353 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 3
9999 mem: storing 3 in location 1355
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1351 is 1008
9999 mem: location 1354 is 1
9999 mem: location 1355 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1168
9999 mem: incrementing refcount of 1008: 129 -> 130
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1169
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1170
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1168 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1169 is 1
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1170 is 3
9999 mem: location 1168 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1168 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1351
9999 mem: incrementing refcount of 1008: 129 -> 130
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1352 is 1345
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1312
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1345 in location 1315
9999 mem: incrementing refcount of 1345: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1315 is 1345
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 2
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1346
9998 run: its type is "number"
9999 mem: location 1346 is 2
9999 mem: storing 2 in location 1316
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9999 mem: location 1346 is 2
9999 mem: location 1347 is 1335
9999 mem: location 1315 is 1345
9999 mem: skipping refcount at 1345
9998 run: address to copy is 1347
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1347 is 1335
9999 mem: storing 1335 in location 1317
9999 mem: incrementing refcount of 1335: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1317 is 1335
9999 mem: skipping refcount at 1335
9999 mem: storing 2 in location 1318
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1316 is 2
9999 mem: location 1318 is 2
9999 mem: storing 1 in location 1319
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1319 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
9999 mem: storing 1196 in location 1320
9999 mem: incrementing refcount of 1196: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1320 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1315 is 1345
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1345
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: decrementing refcount of 1345: 4 -> 3
9999 mem: storing 1345 in location 1352
9999 mem: incrementing refcount of 1345: 3 -> 4
9999 mem: storing 1 in location 1360
9999 mem: storing 1 in location 1361
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1351 is 1008
9999 mem: location 1352 is 1345
9999 mem: location 1353 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abcdef ↩  .\n    .ghij      .\n    .┈┈┈┈┈┈┈┈  .\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
