9999 parse: container has type ingredients; parsing
9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element: {x: "_t"}
9993 parse:   element: {y: "number"}
9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {14: "literal"}
9993 parse:   ingredient: {15: "literal"}
9993 parse:   ingredient: {16: "literal"}
9993 parse:   product: {10: ("foo" "point")}
9992 load: after rewriting: {10: ("foo" "point")} <- merge {14: "literal"}, {15: "literal"}, {16: "literal"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "foo"}
9993 parse:   ingredient: {1: "offset"}
9993 parse:   product: {1: "number"}
9992 load: after rewriting: {1: "number"} <- get {10: "foo"}, {1: "offset"}
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
   0 error: illegal type "foo" seems to be missing a type ingredient or three

   0 error: no such type 2000

9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: --- compute address offsets for main
9993 transform: - compute address offsets for {10: ("foo" "point")} <- merge {14: "literal"}, {15: "literal"}, {16: "literal"}
9994 transform: compute address offsets for container point
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9994 transform: compute address offsets for container foo
9993 transform: checking container foo, element 0
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9993 transform: checking container foo, element 1
9993 transform: - compute address offsets for {1: "number"} <- get {10: "foo"}, {1: "offset"}
9994 transform: compute address offsets for container foo
9993 transform: checking container foo, element 0
   0 error: illegal type "foo" seems to be missing a type ingredient or three

   0 error: illegal type "foo" seems to be missing a type ingredient or three

9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- type-check merge instructions in recipe main
9999 transform: 0 vs 3
9999 transform: checking container {10: ("foo" "point")} || {x: "point"} vs ingredient 0
9999 transform: 0 vs 3
9999 transform: checking container {x: "point"} || {x: "number"} vs ingredient 0
9999 transform: 1 vs 3
9999 transform: checking container {x: "point"} || {y: "number"} vs ingredient 1
9999 transform: 2 vs 3
9999 transform: checking container {10: ("foo" "point")} || {y: "number"} vs ingredient 2
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
