9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {34: "literal"}
9993 parse:   product: {12: "number"}
9992 load: after rewriting: {12: "number"} <- copy {34: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {35: "literal"}
9993 parse:   product: {13: "number"}
9992 load: after rewriting: {13: "number"} <- copy {35: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {36: "literal"}
9993 parse:   product: {14: "number"}
9992 load: after rewriting: {14: "number"} <- copy {36: "literal"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {12: "point-number", "raw": ()}
9993 parse:   ingredient: {1: "offset"}
9993 parse:   product: {15: ("address" "number")}
9992 load: after rewriting: {15: ("address" "number")} <- get {12: "point-number", "raw": ()}, {1: "offset"}
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: --- compute address offsets for main
9993 transform: - compute address offsets for {12: "number"} <- copy {34: "literal"}
9993 transform: - compute address offsets for {13: "number"} <- copy {35: "literal"}
9993 transform: - compute address offsets for {14: "number"} <- copy {36: "literal"}
9993 transform: - compute address offsets for {15: ("address" "number")} <- get {12: "point-number", "raw": ()}, {1: "offset"}
9994 transform: compute address offsets for container point-number
9993 transform: checking container point-number, element 0
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9993 transform: checking container point-number, element 1
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe main
9991 transform: --- perform checks for recipe main
   0 error: main: 'get 12:point-number/raw, 1:offset' should write to number but 15 has type (address number)

9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- type-check merge instructions in recipe main
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
