9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element: x: number -- {"x": "number"}
9993 parse:   element: y: character -- {"y": "character"}
9991 parse: --- defining main
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   ingredient: {"97": "literal", "a": <>}
9993 parse:   product: {"1": "foo"}
9992 load: after rewriting: 1:foo <- merge 34, 97/a
9993 parse: instruction: hash
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "foo"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- hash 1:foo
9993 parse: instruction: reply-unless
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"3": "number"}
9992 load: after rewriting: reply 
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"34": "literal"}
9993 parse:   ingredient: {"98": "literal", "a": <>}
9993 parse:   product: {"4": "foo"}
9992 load: after rewriting: 4:foo <- merge 34, 98/a
9993 parse: instruction: hash
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"4": "foo"}
9993 parse:   product: {"6": "number"}
9992 load: after rewriting: 6:number <- hash 4:foo
9993 parse: instruction: reply-unless
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"6": "number"}
9992 load: after rewriting: reply 
9993 parse: instruction: equal
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "number"}
9993 parse:   ingredient: {"6": "number"}
9993 parse:   product: {"7": "boolean"}
9992 load: after rewriting: 7:boolean <- equal 3:number, 6:number
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction 7:boolean <- equal 3:number, 6:number
9992 transform: checking variant (strict) 0: recipe equal_2 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": "boolean"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict except literals-against-booleans) 0: recipe equal_2 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": "boolean"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant 0: recipe equal_2 {"a": <"address" : <"shared" : <"array" : <"character" : <>>>>>} {"b": <"address" : <"shared" : <"array" : <"character" : <>>>>>} -> {"result": "boolean"}
9993 transform: strict match failed: ingredient 0
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: merge ...
9992 transform: hash ...
9992 transform: reply-unless ...
9992 transform:  ...
9992 transform: merge ...
9992 transform: hash ...
9992 transform: reply-unless ...
9992 transform:  ...
9992 transform: equal ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- type-check merge instructions in recipe main
9999 transform: 0 vs 2
9999 transform: checking container 1: foo -- {"1": "foo"} || x: number -- {"x": "number"} vs ingredient 0
9999 transform: 1 vs 2
9999 transform: checking container 1: foo -- {"1": "foo"} || y: character -- {"y": "character"} vs ingredient 1
9999 transform: 0 vs 2
9999 transform: checking container 4: foo -- {"4": "foo"} || x: number -- {"x": "number"} vs ingredient 0
9999 transform: 1 vs 2
9999 transform: checking container 4: foo -- {"4": "foo"} || y: character -- {"y": "character"} vs ingredient 1
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:foo <- merge 34, 97/a
9999 mem: storing 34 in location 1
9999 mem: storing 97 in location 2
 102 run: 3:number <- hash 1:foo
9999 mem: location 1 is 34
9999 mem: location 2 is 97
9999 mem: storing 3101029427105239552 in location 3
 102 run: jump-if 3:number, 1:offset
9999 mem: location 3 is 3101029427105239552
9998 run: jumping to instruction 4
 102 run: 4:foo <- merge 34, 98/a
9999 mem: storing 34 in location 4
9999 mem: storing 98 in location 5
 102 run: 6:number <- hash 4:foo
9999 mem: location 4 is 34
9999 mem: location 5 is 98
9999 mem: storing 3101029429013870080 in location 6
 102 run: jump-if 6:number, 1:offset
9999 mem: location 6 is 3101029429013870080
9998 run: jumping to instruction 8
 102 run: 7:boolean <- equal 3:number, 6:number
9999 mem: location 3 is 3101029427105239552
9999 mem: location 6 is 3101029429013870080
9999 mem: storing 0 in location 7
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
