9991 parse: --- defining main
9993 parse: instruction: create-array
9993 parse:   number of ingredients: 0
9993 parse:   product: {1: ("array" "point" "3")}
9992 load: after rewriting: {1: ("array" "point" "3")} <- create-array 
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {14: "literal"}
9993 parse:   product: {2: "number"}
9992 load: after rewriting: {2: "number"} <- copy {14: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {15: "literal"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- copy {15: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {16: "literal"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- copy {16: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {14: "literal"}
9993 parse:   product: {5: "number"}
9992 load: after rewriting: {5: "number"} <- copy {14: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {15: "literal"}
9993 parse:   product: {6: "number"}
9992 load: after rewriting: {6: "number"} <- copy {15: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {16: "literal"}
9993 parse:   product: {7: "number"}
9992 load: after rewriting: {7: "number"} <- copy {16: "literal"}
9993 parse: instruction: index
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: ("array" "point")}
9993 parse:   ingredient: {0: "literal"}
9993 parse:   product: {9: "number"}
9992 load: after rewriting: {9: "number"} <- index {1: ("array" "point")}, {0: "literal"}
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction {9: "number"} <- index {1: ("array" "point")}, {0: "literal"}
9992 transform: checking variant (strict) 0: recipe index_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} -> {result: "_value"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 0: recipe index_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} -> {result: "_value"}
9993 transform: strict match failed: ingredient 0
9993 transform: concrete-type match failed: ingredient 0
9992 transform: checking variant (strict except literals-against-booleans) 0: recipe index_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} -> {result: "_value"}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant 0: recipe index_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} -> {result: "_value"}
9993 transform: strict match failed: ingredient 0
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: create-array ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: index ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
   0 error: main: 'index' on 1:array:point can't be saved in 9:number; type should be point

9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- type-check merge instructions in recipe main
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
